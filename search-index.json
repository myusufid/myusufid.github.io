[{"title": "My Film Diary Reviews", "description": "A collection of my personal ratings and reviews for films and TV shows I've watched", "content": "<article class=\"blog-post\">\n    <h1>My Film Diary Reviews</h1>\n    <div class=\"meta mb-4\">April 15, 2025</div>\n\n    <div class=\"content\">\n        <h2>Films</h2>\n        <p>My personal ratings for films I've watched over the years:</p>\n        \n        <ul class=\"film-list\">\n            <li><strong>TITANIC</strong> (9/10)</li>\n            <li><strong>A VISIT LONG</strong> (10/10)</li>\n            <li><strong>YOU ARE THE APPLE OF MY EYE</strong> (10/10)</li>\n            <li><strong>MY SASSY GIRL</strong> (8/10)</li>\n            <li><strong>COUNT DOWN (THAILAND)</strong> (9/10)</li>\n            <li><strong>WALL E</strong> (9/10)</li>\n            <li><strong>THE UNINVITED</strong> (8/10)</li>\n            <li><strong>MUNAFIK (MALAYSIA)</strong> (8/10)</li>\n            <li><strong>FILOSOFI KOPI</strong> (10/10)</li>\n            <li><strong>TRAIN TO BUSAN</strong> (9/10)</li>\n            <li><strong>1 LITRE OF TEARS</strong> (10/10)</li>\n            <li><strong>WEDDING DRESS</strong> (9/10)</li>\n            <li><strong>MIRACLE IN CELL NO.7</strong> (10/10)</li>\n            <li><strong>THE GREEN MILE</strong> (9/10)</li>\n            <li><strong>3 IDIOT</strong> (9/10)</li>\n            <li><strong>ONE WEEK FRIEND</strong> (8/10)</li>\n            <li><strong>BAD GENIUS</strong> (9/10)</li>\n            <li><strong>THE TEACHER'S DIARY</strong> (8/10)</li>\n            <li><strong>HOW TO TRAIN YOUR DRAGON</strong> (8/10)</li>\n            <li><strong>A MOMENT TO REMEMBER</strong> (8/10)</li>\n            <li><strong>KIM JI YOUNG, BORN 1982</strong> (8/10)</li>\n            <li><strong>THE HOST</strong> (8.5/10)</li>\n            <li><strong>PARASITE</strong> (10/10)</li>\n            <li><strong>EXTREME JOB</strong> (7/10)</li>\n            <li><strong>EXIT</strong> (10/10)</li>\n            <li><strong>ALONG WITH THE GODS: THE TWO WORLDS</strong> (8.5/10)</li>\n            <li><strong>OKJA</strong> (8/10)</li>\n            <li><strong>MOTHER</strong> (9/10)</li>\n            <li><strong>KELUARGA CEMARA</strong> (8/10)</li>\n            <li><strong>DUA GARIS BIRU</strong> (9/10)</li>\n            <li><strong>GHOST WRITER</strong> (8/10)</li>\n            <li><strong>PENGABDI SETAN</strong> (9/10)</li>\n            <li><strong>MARRIAGE STORY</strong> (9/10)</li>\n            <li><strong>JOKER 2019</strong> (9.5/10)</li>\n            <li><strong>SEARCHING</strong> (8/10)</li>\n            <li><strong>LITTLE FOREST (KOREA MOVIE)</strong> (9/10)</li>\n            <li><strong>SPEEDY SCANDAL</strong> (8/10)</li>\n            <li><strong>DETECTIVE K: SECRET OF THE LOST ISLAND</strong> (8/10)</li>\n            <li><strong>DETECTIVE K: SECRET OF THE LIVING DEAD</strong> (8/10)</li>\n            <li><strong>700 DAYS OF BATTLE: US VS. THE POLICE</strong> (7/10)</li>\n            <li><strong>HOT FUZZ (2007)</strong> (7/10)</li>\n            <li><strong>SHAUN OF THE DEAD (2004)</strong> (7/10)</li>\n            <li><strong>LUCK KEY</strong> (7/10)</li>\n            <li><strong>I AM A HERO</strong> (7/10)</li>\n            <li><strong>THE WALK</strong> (8/10)</li>\n            <li><strong>THE PEANUT BUTTER FALCON</strong> (7/10)</li>\n            <li><strong>PSYCHOKINESIS</strong> (7/10)</li>\n            <li><strong>YOLO</strong> (6/10)</li>\n            <li><strong>ROH (MALAYSIA)</strong> (8/10)</li>\n            <li><strong>MALIGNANT</strong> (8/10)</li>\n            <li><strong>PEARL</strong> (7/10)</li>\n            <li><strong>SE7EN</strong> (6/10)</li>\n            <li><strong>THE MEDIUM</strong> (7/10)</li>\n            <li><strong>HAPPY ENDING</strong> (5/10)</li>\n            <li><strong>ETERNAL SUNSHINE OF THE SPOTLESS MIND</strong> (8/10)</li>\n        </ul>\n\n        <h2>Drama</h2>\n        <p>TV shows I've enjoyed:</p>\n        \n        <ul class=\"drama-list\">\n            <li><strong>MR ROBOT</strong> (10/10)</li>\n            <li><strong>KISAH TANAH JAWA</strong> (8/10)</li>\n            <li><strong>ARTETA RACHEL AMANDA</strong> (7/10)</li>\n            <li><strong>PRISON BREAK</strong> (9/10)</li>\n        </ul>\n\n        <h2>Korean Dramas</h2>\n        <p>My favorite K-dramas and ratings:</p>\n        \n        <ul class=\"kdrama-list\">\n            <li><strong>REPLY 1988</strong> (10/10)</li>\n            <li><strong>LIVE</strong> (10/10)</li>\n            <li><strong>KINGDOM</strong> (9/10)</li>\n            <li><strong>VAGABOND</strong> (9/10)</li>\n            <li><strong>ITAEWON CLASS</strong> (9/10)</li>\n            <li><strong>THE K2</strong> (8/10)</li>\n            <li><strong>GOBLIN</strong> (8/10)</li>\n            <li><strong>WHAT'S WRONG WITH SECRETARY KIM</strong> (8/10)</li>\n            <li><strong>CRASH LANDING ON YOU</strong> (8/10)</li>\n            <li><strong>MEMORIES OF THE ALHAMBRA</strong> (8/10)</li>\n            <li><strong>FIGHT FOR MY WAY</strong> (7/10)</li>\n            <li><strong>ARTHDAL CHRONICLES</strong> (7/10)</li>\n            <li><strong>BE MELODRAMATIC</strong> (7/10)</li>\n        </ul>\n\n        <h2>My Top Picks</h2>\n        <p>Films and shows that received a perfect 10/10 rating:</p>\n        \n        <ul class=\"top-picks\">\n            <li><strong>PRISON BREAK</strong></li>\n            <li><strong>A VISIT LONG</strong></li>\n            <li><strong>YOU ARE THE APPLE OF MY EYE</strong></li>\n            <li><strong>FILOSOFI KOPI</strong></li>\n            <li><strong>1 LITRE OF TEARS</strong></li>\n            <li><strong>MIRACLE IN CELL NO.7</strong></li>\n            <li><strong>PARASITE</strong></li>\n            <li><strong>EXIT</strong></li>\n            <li><strong>MR ROBOT</strong></li>\n            <li><strong>REPLY 1988</strong></li>\n            <li><strong>LIVE</strong></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Movies</span>\n            <span class=\"badge\">#Films</span>\n            <span class=\"badge\">#TVShows</span>\n            <span class=\"badge\">#KoreanDrama</span>\n            <span class=\"badge\">#Reviews</span>\n            <span class=\"badge\">#Ratings</span>\n        </div>\n    </div>\n</article>", "url": "/posts/my-film-diary-reviews.html", "tags": "movies, films, tv shows, reviews, ratings, korean drama"}, {"title": "How to Install InfluxDB using Docker", "description": "Step-by-step guide for installing InfluxDB and its client using Docker", "content": "<article class=\"blog-post\">\n    <h1>How to Install InfluxDB using Docker</h1>\n    <div class=\"meta mb-4\">October 9, 2023</div>\n\n    <div class=\"content\">\n        <h2>Setup InfluxDB</h2>\n        <p>Create directory and navigate to it:</p>\n        <pre><code lang=\"bash\">mkdir influxdb\ncd influxdb</code></pre>\n\n        <h2>Docker Compose Configuration</h2>\n        <p>Create docker-compose.yml file:</p>\n        <pre><code lang=\"yaml\">version: '3.8'\n\nservices:\n  influxdb:\n    image: quay.io/influxdb/influxdb:v2.0.4\n    ports:\n      - \"8086:8086\"\n    environment:\n      - DOCKER_INFLUXDB_INIT_MODE=setup\n      - DOCKER_INFLUXDB_INIT_USERNAME=admin\n      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword\n      - DOCKER_INFLUXDB_INIT_ORG=mycompany\n      - DOCKER_INFLUXDB_INIT_BUCKET=geoip2influx\n    volumes:\n      - ./influxdb-data:/var/lib/influxdb2\n    networks:\n      - influxdb-net\n\nnetworks:\n  influxdb-net:</code></pre>\n\n        <h2>Install InfluxDB Client</h2>\n        <p>Download and install the client:</p>\n        <pre><code lang=\"bash\">wget https://dl.influxdata.com/influxdb/releases/influxdb2-client-2.7.3-linux-amd64.tar.gz\ntar xvzf influxdb2-client-2.7.3-linux-amd64.tar.gz\nsudo cp influx /usr/local/bin/</code></pre>\n\n        <h2>Configure InfluxDB Client</h2>\n        <p>Create client configuration:</p>\n        <pre><code lang=\"bash\">influx config create \\\n    --config-name defaul-config \\\n    --host-url http://localhost:8086 \\\n    --org mycompany \\\n    --token KIRocbUKK8dQ1knGakgs_QUtXqsbzH0b_YACP83Jqzl8nyc6Pye_dVK_yFO6RK_GX53kRwqu2ddxqHXEXG-b7nUQ== \\\n    --active</code></pre>\n\n        <h2>Configuration Details</h2>\n        <ul>\n            <li><strong>Port:</strong> 8086</li>\n            <li><strong>Version:</strong> v2.0.4</li>\n            <li><strong>Default Credentials:</strong>\n                <ul>\n                    <li>Username: admin</li>\n                    <li>Password: adminpassword</li>\n                </ul>\n            </li>\n            <li><strong>Organization:</strong> mycompany</li>\n            <li><strong>Default Bucket:</strong> geoip2influx</li>\n        </ul>\n\n        <h2>Verification Steps</h2>\n        <ol>\n            <li>Start the containers:\n                <pre><code lang=\"bash\">docker-compose up -d</code></pre>\n            </li>\n            <li>Check container status:\n                <pre><code lang=\"bash\">docker ps | grep influxdb</code></pre>\n            </li>\n            <li>Access web interface:\n                <pre><code>http://localhost:8086</code></pre>\n            </li>\n        </ol>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Secure your token</li>\n            <li>Regular backups of data volume</li>\n            <li>Monitor disk usage</li>\n            <li>Set up retention policies</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#InfluxDB</span>\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#Database</span>\n            <span class=\"badge\">#Monitoring</span>\n            <span class=\"badge\">#TimeSeries</span>\n        </div>\n    </div>\n</article>", "url": "/posts/how-to-install-influxdb-using-docker.html", "tags": "influxdb, docker, database, monitoring, timeseries"}, {"title": "Laradock Guzzle Issue or Curl Issue Connection Refused", "description": "How to fix connection refused errors in Laradock when using Guzzle or Curl", "content": "<article class=\"blog-post\">\n    <h1>Laradock Guzzle Issue or Curl Issue Connection Refused</h1>\n    <div class=\"meta mb-4\">December 10, 2021</div>\n\n    <div class=\"content\">\n        <h2>NGINX Configuration Fix</h2>\n        <p>Add network aliases in your docker-compose configuration:</p>\n\n        <pre><code>nginx:\n    build:\n        context: ./nginx\n        args:\n            - CHANGE_SOURCE=${CHANGE_SOURCE}\n            - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}\n            - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}\n            - http_proxy\n            - https_proxy\n            - no_proxy\n    volumes:\n        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}\n        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx\n        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available\n        - ${NGINX_SSL_PATH}:/etc/nginx/ssl\n    ports:\n        - \"${NGINX_HOST_HTTP_PORT}:80\"\n        - \"${NGINX_HOST_HTTPS_PORT}:443\"\n        - \"${VARNISH_BACKEND_PORT}:81\"\n    depends_on:\n        - php-fpm\n    networks:\n        frontend:\n            aliases:\n                - ssp-api.test\n        backend:\n            aliases:\n                - ssp-api.test</code></pre>\n\n        <h2>Key Solution</h2>\n        <p>The important part that fixes the connection issues:</p>\n        <pre><code>networks:\n    frontend:\n        aliases:\n            - ssp-api.test\n    backend:\n        aliases:\n            - ssp-api.test</code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Laradock</span>\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#Nginx</span>\n            <span class=\"badge\">#Networking</span>\n        </div>\n    </div>\n</article>", "url": "/posts/laradock-guzzle-issue-or-curl-issue-connection-refused.html", "tags": "laradock, docker, nginx, networking"}, {"title": "Trigger job queue tinker laravel", "description": "Learn how to manually trigger Laravel job queues using Tinker for testing and debugging purposes", "content": "<article class=\"blog-post\">\n    <h1>Cara Trigger Job Queue di Tinker Laravel</h1>\n    <div class=\"meta mb-4\">February 16, 2024</div>\n\n    <div class=\"content\">\n        <p>Berikut contoh cara trigger Job Queue di Tinker Laravel.</p>\n\n        <h2>Langkah-langkah</h2>\n        <ol>\n            <li>Pertama masuk ke tinker laravel:\n                <pre><code>php artisan tinker</code></pre>\n            </li>\n            <li>Lalu masukan command berikut:\n                <pre><code>\\Queue::push(new \\App\\Jobs\\ManualTriggerPush(\\App\\Models\\User::find(634)))</code></pre>\n            </li>\n        </ol>\n\n        <h2>Output</h2>\n        <pre><code>Psy Shell v0.10.12 (PHP 7.4.20 — cli) by Justin Hileman\nNew version is available (current: v0.10.12, latest: v0.11.10)\n>>> \\Queue::push(new \\App\\Jobs\\ManualTriggerPush(\\App\\Models\\User::find(634)))</code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Laravel</span>\n            <span class=\"badge\">#PHP</span>\n            <span class=\"badge\">#Queue</span>\n            <span class=\"badge\">#Tips</span>\n        </div>\n    </div>\n</article>", "url": "/posts/trigger-job-queue-tinker-laravel.html", "tags": "laravel, php, queue, tips, debugging"}, {"title": "Menggunakan Database sebagai Container di Level Production", "description": "Pertimbangan menggunakan database sebagai container di environment production", "content": "<article class=\"blog-post\">\n    <h1>Menggunakan Database sebagai Container di Level Production</h1>\n    <div class=\"meta mb-4\">August 7, 2022</div>\n\n    <div class=\"content\">\n        <p>Menjadi perhatian ketika ingin mendeploy aplikasi menggunakan docker. Pertanyaan yang muncul diawal adalah, apakah mudah untuk proses backup databasenya, apakah data tidak rentan hilang atau rusak?</p>\n\n        <h2>Tidak Direkomendasikan untuk Production</h2>\n        <p>Setelah mencari tahu ketemu referensi dari stackoverflow. Disitu bisa dibilang, menjadikan database sebagai container di level production tidak direkomendasikan.</p>\n\n        <h2>3 Point Penting</h2>\n        <ol>\n            <li>Updating docker biasanya ada problem dan tidak stabilnya storage drivers di docker</li>\n            <li>Risiko pada kasus power failure atau read errors</li>\n            <li>Database menjadi sulit untuk dimanage</li>\n        </ol>\n\n        <h2>Rekomendasi Penggunaan</h2>\n        <p>Untuk level testing atau staging, menggunakan database sebagai container adalah sangat direkomendasikan.</p>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Gunakan managed database service untuk production</li>\n            <li>Manfaatkan container database untuk development</li>\n            <li>Pastikan backup strategy yang robust</li>\n            <li>Pertimbangkan high availability setup</li>\n        </ul>\n\n        <h2>Reference</h2>\n        <p><a href=\"https://stackoverflow.com/questions/48515460/is-it-recommended-to-use-database-as-a-container-in-production-environment\" target=\"_blank\">StackOverflow Discussion: Database as Container in Production</a></p>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Database</span>\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#Container</span>\n            <span class=\"badge\">#Production</span>\n            <span class=\"badge\">#Deployment</span>\n        </div>\n    </div>\n</article>", "url": "/posts/menggunakan-database-sebagai-container-di-level-production.html", "tags": "database, docker, container, production, deployment"}, {"title": "Using Had to Talk about the Past in English", "description": "Simple guide to using the past tense verb 'had' in English", "content": "<article class=\"blog-post\">\n    <h1>Using 'Had' to Talk about the Past in English</h1>\n    <div class=\"meta mb-4\">December 16, 2023</div>\n\n    <div class=\"content\">\n        <h2>Understanding 'Had'</h2>\n        <p>The verb \"had\" is the past tense of \"have.\" In English, you use \"had\" to talk about something that happened in the past. For example, if you wanted to say that you ate breakfast today, you would say \"I had breakfast today.\"</p>\n\n        <h2>When to Use 'Had'</h2>\n        <p>It's important to use \"had\" when you're talking about something that is no longer happening in the present. So if you ate breakfast a few hours ago, you would say \"I had breakfast this morning,\" not \"I have breakfast this morning.\"</p>\n\n        <h2>Simple Explanation in Bahasa</h2>\n        <p>Gampangnya, had itu \"pernah punya, tapi sekarang udah enggak\"</p>\n\n        <h2>Examples</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Present (have)</th>\n                    <th>Past (had)</th>\n                </tr>\n                <tr>\n                    <td>I have a dream<br><small>aku punya mimpi (sekarang, masih ada mimpinya)</small></td>\n                    <td>I had a dream<br><small>aku pernah punya mimpi (dulu doang, sekarang udah enggak)</small></td>\n                </tr>\n                <tr>\n                    <td>I have a car</td>\n                    <td>I had a car</td>\n                </tr>\n                <tr>\n                    <td>She has a job</td>\n                    <td>She had a job</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Common Uses</h2>\n        <ul>\n            <li>Past possessions: \"I had a bike when I was young\"</li>\n            <li>Past experiences: \"We had a great time at the party\"</li>\n            <li>Past states: \"She had long hair before\"</li>\n            <li>Past activities: \"They had lunch together yesterday\"</li>\n        </ul>\n\n        <h2>Practice Sentences</h2>\n        <ol>\n            <li>I had breakfast at 7 AM today</li>\n            <li>She had a beautiful garden last year</li>\n            <li>They had three cats before moving</li>\n            <li>We had a meeting this morning</li>\n            <li>He had many friends in school</li>\n        </ol>\n\n        <div class=\"source-reference mt-4\">\n            <p>Source: <a href=\"https://x.com/englishfess_/status/1883135260075925756\" target=\"_blank\">English Fess on Twitter</a></p>\n        </div>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#English</span>\n            <span class=\"badge\">#Grammar</span>\n            <span class=\"badge\">#Language</span>\n            <span class=\"badge\">#Learning</span>\n        </div>\n    </div>\n</article>", "url": "/posts/using-had-to-talk-about-the-past-in-english.html", "tags": "english, grammar, language, learning"}, {"title": "Go Two sum array", "description": "Implementation of Two Sum problem in Go with array traversal", "content": "<article class=\"blog-post\">\n    <h1>Go: Two sum array</h1>\n    <div class=\"meta mb-4\">January 26, 2024</div>\n\n    <div class=\"content\">\n        <div class=\"image-container text-center my-4\">\n            <img src=\"../../assets/images/2sum-1.0-1024x576-1.png\" \n                 alt=\"Two Sum Problem Illustration\" \n                 class=\"img-fluid rounded\"\n                 width=\"1024\" \n                 height=\"576\"\n                 loading=\"lazy\">\n        </div>\n\n        <h2>Implementation</h2>\n        <pre><code lang=\"golang\">package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    var arrayOne = [...]int{9,1,5,4,7}\n    var desiredNumber = 10\n    for i:=0; i < len(arrayOne); i++ {\n        if (i != (len(arrayOne) - 1)) {\n            if((arrayOne[i]+arrayOne[i+1]) == desiredNumber ) {\n                fmt.Printf(\"Result %d %d\",i, i+1)\n            }\n        }\n    }\n}</code></pre>\n            \n            \n            \n            \n\n        <h2>Code Explanation</h2>\n        <ul>\n            <li>Input array: [9,1,5,4,7]</li>\n            <li>Target sum: 10</li>\n            <li>Algorithm traverses array checking adjacent pairs</li>\n            <li>Prints indices when sum equals target</li>\n        </ul>\n\n        <h2>Time Complexity</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Operation</th>\n                    <th>Complexity</th>\n                </tr>\n                <tr>\n                    <td>Array Traversal</td>\n                    <td>O(n)</td>\n                </tr>\n                <tr>\n                    <td>Sum Check</td>\n                    <td>O(1)</td>\n                </tr>\n                <tr>\n                    <td>Overall</td>\n                    <td>O(n)</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Usage Examples</h2>\n        <pre><code lang=\"golang\">// Example inputs:\narray := [...]int{9,1,5,4,7}  // Array\ntarget := 10                   // Desired sum\n\n// Example outputs:\n// Result 0 1  // For pair (9,1)\n// Result 2 3  // For pair (5,4)</code></pre>\n\n        <h2>Key Points</h2>\n        <ul>\n            <li>Simple linear traversal approach</li>\n            <li>Checks adjacent elements only</li>\n            <li>Handles positive integers</li>\n            <li>Prints index pairs as results</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Golang</span>\n            <span class=\"badge\">#Algorithms</span>\n            <span class=\"badge\">#Arrays</span>\n            <span class=\"badge\">#Programming</span>\n        </div>\n    </div>\n</article>", "url": "/posts/go-two-sum-array.html", "tags": "golang, algorithms, arrays, programming"}, {"title": "Fix Private Repository Access in Golang", "description": "How to configure and access private repositories in Golang using SSH and environment variables", "content": "<article class=\"blog-post\">\n    <h1>Fix Private Repository Access in Golang</h1>\n    <div class=\"meta mb-4\">February 19, 2025</div>\n\n    <div class=\"content\">\n        <p>When working with private Go repositories, proper configuration is needed for successful access. Here's how to set it up correctly.</p>\n\n        <h2>Configuration Steps</h2>\n\n        <h3>Git Configuration</h3>\n        <p>First, configure Git to use SSH instead of HTTPS:</p>\n\n        <pre><code lang=\"bash\">git config --global url.\"git@github.com-myusuf_github_company:companyhub/privaterepo.git\".insteadOf \"https://github.com/companyhub/privaterepo\"</code></pre>\n\n        <h3>Go Private Configuration</h3>\n        <p>Configure Go to recognize private repositories:</p>\n\n        <pre><code lang=\"bash\">export GOPRIVATE=github.com/companyhub/*</code></pre>\n\n        <h3>Permanent Configuration</h3>\n        <p>Add to your shell configuration file:</p>\n\n        <pre><code lang=\"bash\">echo \"export GOPRIVATE=github.com/companyhub/*\" >> ~/.bashrc</code></pre>\n\n        <h3>Clean and Update</h3>\n        <p>Reset your Go modules cache:</p>\n\n        <pre><code lang=\"bash\">go clean -modcache\ngo mod tidy</code></pre>\n\n        <h2>Key Points</h2>\n        <ul>\n            <li>SSH configuration must be properly set up</li>\n            <li>GOPRIVATE environment variable tells Go to skip public proxy</li>\n            <li>Git configuration redirects HTTPS to SSH</li>\n            <li>Module cache should be cleaned after configuration</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Golang</span>\n            <span class=\"badge\">#Git</span>\n            <span class=\"badge\">#SSH</span>\n            <span class=\"badge\">#Configuration</span>\n            <span class=\"badge\">#Tutorial</span>\n        </div>\n    </div>\n</article>", "url": "/posts/fix-private-repository-access-in-golang.html", "tags": "golang, git, ssh, configuration, tutorial"}, {"title": "Why do programmers need private offices with doors", "description": "Exploring the importance of private offices for programmer productivity and focus", "content": "<article class=\"blog-post\">\n    <h1>Why do programmers need private offices with doors?</h1>\n    <div class=\"meta mb-4\">January 21, 2024</div>\n\n    <div class=\"content\">\n        <h2>Concentration</h2>\n        <p>Programmers need a quiet and calm environment to concentrate on their tasks. Private offices with doors provide the necessary level of privacy and minimize noise distractions from co-workers.</p>\n\n        <h2>Reduced interruptions</h2>\n        <p>Programmers often need to focus for extended periods, and interruptions can disrupt their workflow and train of thought. With a private office, they have control over their space and can limit interruptions from colleagues.</p>\n\n        <h2>Increased productivity</h2>\n        <p>By having a dedicated workspace, programmers can personalize their environment to suit their needs and preferences. This can lead to increased comfort and productivity.</p>\n\n        <h2>Confidentiality and security</h2>\n        <p>In some cases, programmers may work on sensitive projects or handle proprietary information. Having a private office provides an added layer of privacy and security for their work.</p>\n\n        <h2>Collaboration when needed</h2>\n        <p>While private offices provide the isolation needed for deep work, it's still important for programmers to collaborate with colleagues. However, this collaboration can take place in dedicated meeting rooms or online communication tools, such as chat rooms and video conferencing. This ensures that collaboration happens intentionally and doesn't disrupt individual work.</p>\n\n        <h2>Key Benefits</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Benefit</th>\n                    <th>Impact</th>\n                </tr>\n                <tr>\n                    <td>Focus Time</td>\n                    <td>Extended periods of uninterrupted work</td>\n                </tr>\n                <tr>\n                    <td>Mental Flow</td>\n                    <td>Maintained concentration on complex problems</td>\n                </tr>\n                <tr>\n                    <td>Environment Control</td>\n                    <td>Customizable workspace settings</td>\n                </tr>\n                <tr>\n                    <td>Privacy</td>\n                    <td>Secure handling of sensitive information</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>References</h2>\n        <ul>\n            <li><a href=\"https://stackoverflow.blog/2015/01/16/why-we-still-believe-in-private-offices/\" target=\"_blank\">Stack Overflow: Why We Still Believe in Private Offices</a></li>\n            <li><a href=\"https://softwareengineering.stackexchange.com/questions/8104/why-should-developers-have-private-offices\" target=\"_blank\">Software Engineering: Why Should Developers Have Private Offices</a></li>\n            <li><a href=\"https://www.linkedin.com/pulse/open-offices-causing-employees-leave-heres-why-chris-peng/\" target=\"_blank\">LinkedIn: Open Offices Causing Employees to Leave</a></li>\n            <li><a href=\"https://www.reddit.com/r/programming/comments/18l88xq/why_do_programmers_need_private_offices_with/\" target=\"_blank\">Reddit Discussion</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Workplace</span>\n            <span class=\"badge\">#Productivity</span>\n            <span class=\"badge\">#Programming</span>\n            <span class=\"badge\">#OfficeDesign</span>\n        </div>\n    </div>\n</article>", "url": "/posts/why-do-programmers-need-private-offices-with-doors.html", "tags": "workplace, productivity, programming, office-design"}, {"title": "tree Command Navigating Directory Structures", "description": "Guide to using the tree command for visualizing directory structures in Unix-like systems", "content": "<article class=\"blog-post\">\n    <h1>tree Command: Navigating Directory Structures</h1>\n    <div class=\"meta mb-4\">December 11, 2023</div>\n\n    <div class=\"content\">\n        <h2>Command Overview</h2>\n        <pre><code lang=\"bash\">tree -I tmp -C</code></pre>\n\n        <div class=\"command-explanation\">\n            <ul>\n                <li><code>tree</code>: This is a command-line utility that displays the contents of a directory in a tree-like format.</li>\n                <li><code>-I tmp</code>: This option is used to exclude a specific pattern or directory from the tree view. In this case, it excludes any directories or files with the name \"tmp.\"</li>\n                <li><code>-C</code>: This option is used to colorize the output, making it more visually appealing by using different colors for different types of files.</li>\n            </ul>\n        </div>\n\n        <div class=\"image-container text-center my-4\">\n            <img src=\"../../assets/images/Screenshot-2023-12-11-at-09.29.10.png\" \n                 alt=\"Tree Command Output Example\" \n                 class=\"img-fluid rounded\"\n                 loading=\"lazy\">\n        </div>\n\n        <h2>Installation</h2>\n        <p>Install tree command using Homebrew:</p>\n        <pre><code lang=\"bash\">brew install tree</code></pre>\n\n        <h2>Common Options</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Option</th>\n                    <th>Description</th>\n                </tr>\n                <tr>\n                    <td><code>-a</code></td>\n                    <td>Show all files (including hidden)</td>\n                </tr>\n                <tr>\n                    <td><code>-d</code></td>\n                    <td>List directories only</td>\n                </tr>\n                <tr>\n                    <td><code>-L n</code></td>\n                    <td>Limit depth to n levels</td>\n                </tr>\n                <tr>\n                    <td><code>-f</code></td>\n                    <td>Print full path prefix</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Use Cases</h2>\n        <ul>\n            <li>Project structure documentation</li>\n            <li>Directory navigation</li>\n            <li>File system exploration</li>\n            <li>Project organization</li>\n        </ul>\n\n        <h2>Example Commands</h2>\n        <pre><code lang=\"bash\"># Show only directories\ntree -d\n\n# Limit depth to 2 levels\ntree -L 2\n\n# Exclude multiple patterns\ntree -I 'node_modules|tmp|cache'\n\n# Show with file size\ntree -sh</code></pre>\n\n        <h2>Tips</h2>\n        <ul>\n            <li>Use patterns to exclude unwanted directories</li>\n            <li>Combine options for specific needs</li>\n            <li>Redirect output to file for documentation</li>\n            <li>Use color output for better visibility</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#CLI</span>\n            <span class=\"badge\">#Unix</span>\n            <span class=\"badge\">#Tools</span>\n            <span class=\"badge\">#Filesystem</span>\n        </div>\n    </div>\n</article>", "url": "/posts/tree-command-navigating-directory-structures.html", "tags": "cli, unix, tools, filesystem"}, {"title": "Over-Fetching or Under-fetching?", "description": "Understanding the concepts of over-fetching and under-fetching in API design", "content": "<article class=\"blog-post\">\n    <h1>Over-Fetching or Under-fetching?</h1>\n    <div class=\"meta mb-4\">November 22, 2021</div>\n\n    <div class=\"content\">\n        <h2>Over-fetching</h2>\n        <p>Over-fetching occurs when you retrieve more data than needed in an API response. This means you're getting data fields that won't be used in your application.</p>\n\n        <h2>Under-fetching</h2>\n        <p>Under-fetching happens when a single API endpoint doesn't provide enough data, requiring additional API calls to get all needed information.</p>\n\n        <p>Reference:</p>\n        <ul>\n            <li><a href=\"https://stackoverflow.com/questions/44564905/what-is-over-fetching-or-under-fetching\">Stack Overflow - What is Over-fetching or Under-fetching?</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#API</span>\n            <span class=\"badge\">#Performance</span>\n            <span class=\"badge\">#GraphQL</span>\n            <span class=\"badge\">#REST</span>\n        </div>\n    </div>\n</article>", "url": "/posts/over-fetching-or-under-fetching?.html", "tags": "api, performance, graphql, rest"}, {"title": "Managing Environment Variables in Production with AWS Secrets Manager", "description": "Guide to managing environment variables securely using AWS Secrets Manager", "content": "<article class=\"blog-post\">\n    <h1>Managing Environment Variables in Production with AWS Secrets Manager</h1>\n    <div class=\"meta mb-4\">June 16, 2024</div>\n\n    <div class=\"content\">\n        <p>Mengubah environment variable di produksi bisa menjadi proses yang rumit dan memakan waktu, terutama jika Anda harus membuat Image baru AMI AWS setiap kali ada perubahan. AWS Secrets Manager menawarkan solusi yang lebih efisien dan aman.</p>\n\n        <h2>Manfaat AWS Secrets Manager</h2>\n        <ul>\n            <li><strong>Keamanan</strong>: Menyimpan secrets dengan aman dan hanya diakses oleh pihak yang berwenang.</li>\n            <li><strong>Efisiensi</strong>: Memperbarui secrets tanpa membuat AMI baru atau mengubah kode aplikasi.</li>\n            <li><strong>Biaya Terjangkau</strong>: $0.40 per secret per bulan, dengan setiap secret bisa berisi beberapa key=value pairs hingga 10KB.</li>\n        </ul>\n\n        <div class=\"image-container text-center my-4\">\n            <img src=\"../../assets/images/1_NZBcPZ5G41sNargKO65ZWA.webp\" \n                 alt=\"AWS Secrets Manager Overview\" \n                 class=\"img-fluid rounded\"\n                 width=\"1400\" \n                 height=\"831\"\n                 loading=\"lazy\">\n            <p class=\"text-muted mt-2\">AWS Secrets Manager Dashboard</p>\n        </div>\n\n        <h2>Langkah-Langkah Menggunakan AWS Secrets Manager</h2>\n\n        <h3>1. Install AWS CLI Terbaru</h3>\n        <pre><code lang=\"bash\">apt-get install -y python3-pip jq\npip3 install awscli --upgrade</code></pre>\n\n        <h3>2. Ekstraksi Secrets ke File .env</h3>\n        <pre><code lang=\"bash\">AWS_SECRET_ID=\"my-super-secret-secret\"\nAWS_REGION=\"ap-southeast-2\"\nENVFILE=\"/srv/app/.env\"\n\n# Export the secret to .env\naws secretsmanager get-secret-value --secret-id $AWS_SECRET_ID --region $AWS_REGION | \\\n  jq -r '.SecretString' | \\\n  jq -r \"to_entries|map(\\\"\\(.key)=\\\\\\\"\\(.value|tostring)\\\\\\\"\\\")|.[]\" > $ENVFILE</code></pre>\n\n        <h2>Key Features</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Feature</th>\n                    <th>Benefit</th>\n                </tr>\n                <tr>\n                    <td>Centralized Management</td>\n                    <td>Single source of truth for secrets</td>\n                </tr>\n                <tr>\n                    <td>Version Control</td>\n                    <td>Track changes and rollback if needed</td>\n                </tr>\n                <tr>\n                    <td>Access Control</td>\n                    <td>Fine-grained IAM permissions</td>\n                </tr>\n                <tr>\n                    <td>Automatic Rotation</td>\n                    <td>Schedule secret updates</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Use IAM roles for EC2 instances</li>\n            <li>Implement secret rotation</li>\n            <li>Monitor secret access</li>\n            <li>Backup secrets regularly</li>\n            <li>Use encryption at rest</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#AWS</span>\n            <span class=\"badge\">#DevOps</span>\n            <span class=\"badge\">#Security</span>\n            <span class=\"badge\">#EnvironmentVariables</span>\n        </div>\n    </div>\n</article>", "url": "/posts/managing-environment-variables-in-production-with-aws-secrets-manager.html", "tags": "aws, devops, security, environment-variables"}, {"title": "Backend Development Curriculum", "description": "Comprehensive guide to backend development topics including Golang, databases, APIs, DevOps and security", "content": "<article class=\"blog-post\">\n    <h1>Backend Development Curriculum</h1>\n    <div class=\"meta mb-4\">November 18, 2021</div>\n\n    <div class=\"content\">\n        <h2>Programming Fundamentals</h2>\n        <ul>\n            <li>Golang Basics\n                <ul>\n                    <li>Interface</li>\n                    <li>Pointer</li>\n                    <li>Unit Testing</li>\n                    <li>Callback</li>\n                </ul>\n            </li>\n        </ul>\n\n        <h2>Concurrency</h2>\n        <ul>\n            <li>Threads</li>\n            <li>Goroutine</li>\n            <li>Channel</li>\n            <li>Mutex</li>\n            <li>Race Condition</li>\n            <li>Deadlock</li>\n            <li>Delayed Job</li>\n        </ul>\n\n        <h2>Data Structures</h2>\n        <ul>\n            <li>Hashmap</li>\n            <li>Set</li>\n            <li>Priority Queue</li>\n            <li>Adjacent List</li>\n            <li>Tree</li>\n        </ul>\n\n        <h2>Design Patterns</h2>\n        <ul>\n            <li>Builder</li>\n            <li>Dependency Injection</li>\n            <li>Template Pattern</li>\n            <li>Middleware</li>\n            <li>Adapter</li>\n            <li>Prototype</li>\n            <li>Proxy</li>\n            <li>Composite</li>\n            <li>Command</li>\n            <li>Observer</li>\n        </ul>\n\n        <h2>Database</h2>\n        <ul>\n            <li>BTree</li>\n            <li>Indexing</li>\n            <li>CAP Theorem</li>\n            <li>DB Transaction</li>\n            <li>Table Normalization</li>\n            <li>Technologies:\n                <ul>\n                    <li>MySQL</li>\n                    <li>Redis</li>\n                    <li>Big Query</li>\n                </ul>\n            </li>\n        </ul>\n\n        <h2>API Development</h2>\n        <ul>\n            <li>REST API</li>\n            <li>gRPC</li>\n            <li>Tools:\n                <ul>\n                    <li>Postman</li>\n                    <li>BloomRPC</li>\n                </ul>\n            </li>\n        </ul>\n\n        <h2>Scaling & Container</h2>\n        <ul>\n            <li>Vertical vs Horizontal Scaling</li>\n            <li>Microservice</li>\n            <li>Docker</li>\n            <li>Kubernetes\n                <ul>\n                    <li>Docker Compose</li>\n                    <li>Pod</li>\n                    <li>Deployment</li>\n                    <li>Service</li>\n                    <li>Load Balancer</li>\n                </ul>\n            </li>\n        </ul>\n\n        <h2>Deployment</h2>\n        <ul>\n            <li>PaaS (Heroku)</li>\n            <li>IaaS (Google Cloud Platform)</li>\n        </ul>\n\n        <h2>DevOps</h2>\n        <ul>\n            <li>Observability: Istio</li>\n            <li>Logging: Kibana</li>\n            <li>Monitoring: Grafana</li>\n        </ul>\n\n        <h2>Security</h2>\n        <ul>\n            <li>Authentication</li>\n            <li>Authorization</li>\n            <li>CSRF</li>\n            <li>XSS</li>\n            <li>Validation</li>\n            <li>Encryption</li>\n            <li>Password Security</li>\n            <li>Race Condition</li>\n            <li>Linux Basic Security</li>\n            <li>Docker Container Security</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Backend</span>\n            <span class=\"badge\">#Golang</span>\n            <span class=\"badge\">#DevOps</span>\n            <span class=\"badge\">#Security</span>\n        </div>\n    </div>\n</article>", "url": "/posts/backend-development-curriculum.html", "tags": "backend, golang, devops, security"}, {"title": "Config ZSH for Golang", "description": "Setting up ZSH environment variables for Golang development", "content": "<article class=\"blog-post\">\n    <h1>Config ZSH for Golang</h1>\n    <div class=\"meta mb-4\">April 12, 2022</div>\n\n    <div class=\"content\">\n        <h2>Setting Up Golang Environment Variables</h2>\n        <p>Edit your ZSH configuration file:</p>\n        <pre><code lang=\"bash\">vim ~/.zshrc</code></pre>\n\n        <h2>Add Environment Variables</h2>\n        <p>Add these lines to your .zshrc file:</p>\n        <pre><code lang=\"bash\">export GOPATH=/Users/superlaptop/Web/go\nexport GOROOT=/usr/local/opt/go/libexec\nexport GOBIN=$GOPATH/bin\nexport PATH=$PATH:$GOPATH\nexport PATH=$PATH:$GOROOT/bin</code></pre>\n\n        <h2>Apply Changes</h2>\n        <p>Reload your ZSH configuration:</p>\n        <pre><code lang=\"bash\">source ~/.zshrc</code></pre>\n\n        <h2>Environment Variables Explained</h2>\n        <ul>\n            <li><strong>GOPATH</strong>: Your Go workspace location</li>\n            <li><strong>GOROOT</strong>: Go installation directory</li>\n            <li><strong>GOBIN</strong>: Go binary executables location</li>\n            <li><strong>PATH</strong>: System path including Go directories</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Golang</span>\n            <span class=\"badge\">#ZSH</span>\n            <span class=\"badge\">#Configuration</span>\n            <span class=\"badge\">#Environment</span>\n        </div>\n    </div>\n</article>", "url": "/posts/config-zsh-for-golang.html", "tags": "golang, zsh, configuration, environment"}, {"title": "Cara jadi DevOps", "description": "Essential skills and requirements to become a DevOps Engineer", "content": "<article class=\"blog-post\">\n    <h1>Cara jadi DevOps</h1>\n    <div class=\"meta mb-4\">December 4, 2021</div>\n\n    <div class=\"content\">\n        <h2>Pengertian</h2>\n        <ul>\n            <li>Development adalah tim yang membuat aplikasi.</li>\n            <li>Operations adalah tim yang tugasnya mendeploy aplikasi dan menjaga server</li>\n        </ul>\n\n        <h2>Syarat dan Skill</h2>\n        <h3>Linux & Server</h3>\n        <ul>\n            <li>Faham dasar dasar linux</li>\n            <li>Mahir menggunakan CLI</li>\n            <li>Bisa menggunakan perintah Shell</li>\n            <li>Mengerti dasar file system linux</li>\n            <li>Bisa mengelola server</li>\n            <li>Bisa mengakses server melalui SSH</li>\n        </ul>\n\n        <h3>Networking & Security</h3>\n        <ul>\n            <li>Dasar-dasar networking dan security</li>\n            <li>Firewall</li>\n            <li>Load Balancer</li>\n            <li>HTTP/HTTPS</li>\n            <li>DNS</li>\n        </ul>\n\n        <h3>Modern DevOps Tools</h3>\n        <ul>\n            <li>Container (Docker)</li>\n            <li>Continuous Integration/Continuous Deployment (CI/CD)</li>\n        </ul>\n\n        <h2>Related Roles</h2>\n        <ul>\n            <li>Network Engineer</li>\n            <li>Security Engineer</li>\n            <li>Sysadmin</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#DevOps</span>\n            <span class=\"badge\">#Linux</span>\n            <span class=\"badge\">#Networking</span>\n            <span class=\"badge\">#Security</span>\n        </div>\n    </div>\n</article>", "url": "/posts/cara-jadi-devops.html", "tags": "devops, linux, networking, security"}, {"title": "Run MySQL Docker M1 Intel", "description": "Guide to run MySQL container on Docker for both M1 and Intel processors", "content": "<article class=\"blog-post\">\n    <h1>Run MySQL Docker on M1 & Intel</h1>\n    <div class=\"meta mb-4\">December 19, 2021</div>\n\n    <div class=\"content\">\n        <h2>Run on Terminal</h2>\n\n        <h3>For M1 Mac</h3>\n        <pre><code>docker run -d -p 3306:3306 --name mysql_container --platform linux/x86_64 --env MYSQL_ROOT_PASSWORD=12345 mysql</code></pre>\n\n        <h3>For Intel Mac</h3>\n        <pre><code>docker run -d -p 3306:3306 --name mysql_container --env MYSQL_ROOT_PASSWORD=12345 mysql</code></pre>\n\n        <img src=\"../../assets/images/Screen-Shot-2021-12-19-at-02.10.06.png\" alt=\"Docker MySQL Running\" class=\"img-fluid mb-4\">\n\n        <h2>Connect Using TablePlus</h2>\n        <p>Configuration settings:</p>\n        <ul>\n            <li>Host: 127.0.0.1</li>\n            <li>User: root</li>\n            <li>Password: 12345</li>\n            <li>Port: 3306</li>\n        </ul>\n\n        <img src=\"../../assets/images/Screen-Shot-2021-12-06-at-03.02.46.png\" alt=\"TablePlus Configuration\" class=\"img-fluid\">\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#MySQL</span>\n            <span class=\"badge\">#M1</span>\n            <span class=\"badge\">#TablePlus</span>\n        </div>\n    </div>\n</article>", "url": "/posts/run-mysql-docker-m1-intel.html", "tags": "docker, mysql, m1, tableplus"}, {"title": "Carbon::parse(null) returns a Carbon object with the current time", "description": "Understanding the behavior of Carbon::parse(null) and safer alternatives in PHP date handling", "content": "<article class=\"blog-post\">\n    <h1>Carbon::parse(null) returns a Carbon object with the current time</h1>\n    <div class=\"meta mb-4\">Maret 1, 2025</div>\n\n    <div class=\"content\">\n\n        <p>When working with dates in PHP and Laravel, Carbon is the go-to library for manipulation and formatting. However, there's an important behavior to be aware of when parsing null values.</p>\n\n        <h2>The Unexpected Behavior</h2>\n        <p>If you pass null to Carbon::parse(), it will return a Carbon object with the current time instead of null:</p>\n        <pre><code>use Carbon\\Carbon;\n\n// This returns a Carbon instance with the current time!\n$date = Carbon::parse(null);\nvar_dump($date); // Carbon object with current timestamp</code></pre>\n\n        <p>This can lead to subtle bugs in your application, especially when handling optional date fields that might be null.</p>\n\n        <h2>A Safer Alternative: Carbon::make()</h2>\n        <p>To handle null values more predictably, use Carbon::make() instead:</p>\n        <pre><code>use Carbon\\Carbon;\n\n// This correctly returns null\n$date = Carbon::make(null);\nvar_dump($date); // null\n\n// For valid dates, it works the same as parse\n$validDate = Carbon::make('2023-09-15 12:34:54');\nvar_dump($validDate); // Carbon instance with specified date</code></pre>\n\n        <h2>Real-world Example</h2>\n        <p>Consider a scenario where you're retrieving a potentially null date from a database:</p>\n        <pre><code>// Using parse (problematic)\n$dueDate = Carbon::parse($user->due_date); // If due_date is null, this is now!\n\n// Using make (safer)\n$dueDate = Carbon::make($user->due_date); // If due_date is null, this stays null</code></pre>\n\n        <h2>Why This Matters</h2>\n        <p>This behavior is particularly important when:</p>\n        <ul>\n            <li>Working with optional date fields</li>\n            <li>Handling user input that might be empty</li>\n            <li>Processing data imports with missing date values</li>\n        </ul>\n\n        <p>Always use Carbon::make() instead of Carbon::parse() when the input might be null to avoid unexpected date values in your application.</p>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#PHP</span>\n            <span class=\"badge\">#Carbon</span>\n            <span class=\"badge\">#Laravel</span>\n            <span class=\"badge\">#Date</span>\n        </div>\n    </div>\n</article>", "url": "/posts/carbonparse(null)-returns-a-carbon-object-with-the-current-time.html", "tags": "php, carbon, laravel, date"}, {"title": "Bulk Resize Images on Terminal Mac", "description": "Quick guide to batch resize images using ImageMagick on MacOS terminal", "content": "<article class=\"blog-post\">\n    <h1>Bulk Resize Images on Terminal Mac</h1>\n    <div class=\"meta mb-4\">November 17, 2021</div>\n\n    <div class=\"content\">\n        <p>Install ImageMagick using Homebrew:</p>\n\n        <pre><code>brew install imagemagick</code></pre>\n\n        <p>Resize all images in current directory to 30% of original size:</p>\n\n        <pre><code>magick mogrify -resize 30% *</code></pre>\n\n        <p>Reference:</p>\n        <ul>\n            <li><a href=\"https://stackoverflow.com/a/60066250/5873994\">Stack Overflow - Bulk resize images using ImageMagick</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Mac</span>\n            <span class=\"badge\">#Terminal</span>\n            <span class=\"badge\">#ImageMagick</span>\n            <span class=\"badge\">#Images</span>\n        </div>\n    </div>\n</article>", "url": "/posts/bulk-resize-images-on-terminal-mac.html", "tags": "mac, terminal, imagemagick, images"}, {"title": "Golang Blueprint Library", "description": "Guide to using Go Blueprint CLI tool for creating structured Go projects", "content": "<article class=\"blog-post\">\n    <h1>Golang Blueprint Library</h1>\n    <div class=\"meta mb-4\">December 11, 2023</div>\n\n    <div class=\"content\">\n        <p>Go Blueprint is a CLI tool that allows users to spin up a Go project with the corresponding structure seamlessly.</p>\n\n        <h2>Installation</h2>\n        <pre><code lang=\"bash\">go install github.com/melkeydev/go-blueprint@latest</code></pre>\n\n        <h2>Usage</h2>\n        <p>Then in a new terminal run:</p>\n        <pre><code lang=\"bash\">go-blueprint create</code></pre>\n\n        <div class=\"image-container text-center my-4\">\n            <img src=\"../../assets/images/blueprint_1.png\" \n                 alt=\"Go Blueprint CLI Interface\" \n                 class=\"img-fluid rounded\"\n                 loading=\"lazy\">\n            <p class=\"text-muted mt-2\">Blueprint CLI Interface</p>\n        </div>\n\n        <h2>Project Structure</h2>\n        <div class=\"image-container text-center my-4\">\n            <img src=\"../../assets/images/Screenshot-2023-12-11-at-11.39.19.png\" \n                 alt=\"Generated Project Structure\" \n                 class=\"img-fluid rounded\"\n                 loading=\"lazy\">\n            <p class=\"text-muted mt-2\">Generated Project Structure</p>\n        </div>\n\n        <h2>Generated Files</h2>\n        <div class=\"image-container text-center my-4\">\n            <img src=\"../../assets/images/Screenshot-2023-12-11-at-11.40.17.png\" \n                 alt=\"Generated Project Files\" \n                 class=\"img-fluid rounded\"\n                 loading=\"lazy\">\n            <p class=\"text-muted mt-2\">Generated Project Files</p>\n        </div>\n\n        <h2>Features</h2>\n        <ul>\n            <li>Standard Go project layout</li>\n            <li>Common directories pre-created</li>\n            <li>Basic configuration files</li>\n            <li>Docker setup</li>\n            <li>Makefile included</li>\n        </ul>\n\n        <h2>Directory Structure Overview</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Directory</th>\n                    <th>Purpose</th>\n                </tr>\n                <tr>\n                    <td>/cmd</td>\n                    <td>Main applications</td>\n                </tr>\n                <tr>\n                    <td>/internal</td>\n                    <td>Private application code</td>\n                </tr>\n                <tr>\n                    <td>/pkg</td>\n                    <td>Public library code</td>\n                </tr>\n                <tr>\n                    <td>/api</td>\n                    <td>API definitions</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Benefits</h2>\n        <ul>\n            <li>Consistent project structure</li>\n            <li>Quick project setup</li>\n            <li>Best practices included</li>\n            <li>Development ready configuration</li>\n            <li>Time-saving automation</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Golang</span>\n            <span class=\"badge\">#CLI</span>\n            <span class=\"badge\">#Tools</span>\n            <span class=\"badge\">#Development</span>\n        </div>\n    </div>\n</article>", "url": "/posts/golang-blueprint-library.html", "tags": "golang, cli, tools, development"}, {"title": "Finding the Largest Files on Your System with the du Command", "description": "A tutorial on using the du command with sort and head to identify the largest files and directories on Linux systems", "content": "<article class=\"blog-post\">\n    <h1>Finding the Largest Files on Your System with the du Command</h1>\n    <div class=\"meta mb-4\">Maret 12, 2025</div>\n\n    <div class=\"content\">\n        <p>When your Linux system is running out of space, identifying the largest files and directories can help you quickly free up space. In this article, we'll explore a powerful command combination that makes this task straightforward.</p>\n\n        <h2>The Command</h2>\n        \n        <pre><code lang=\"bash\">sudo du -ah / | sort -rh | head -20</code></pre>\n\n        <h2>Understanding the Components</h2>\n\n        <h3>The du Command</h3>\n        <p>The <code>du</code> (disk usage) command estimates file space usage. Let's break down the options used:</p>\n        <ul>\n            <li><code>-a</code>: Shows all files, not just directories</li>\n            <li><code>-h</code>: Human-readable output (e.g., 1K, 234M, 2G)</li>\n            <li><code>/</code>: Starts from the root directory</li>\n        </ul>\n\n        <h3>The sort Command</h3>\n        <p>The output is piped to <code>sort</code> with these options:</p>\n        <ul>\n            <li><code>-r</code>: Reverse order (largest first)</li>\n            <li><code>-h</code>: Human-readable numbers (compares 2K and 1M correctly)</li>\n        </ul>\n\n        <h3>The head Command</h3>\n        <p><code>head -20</code> restricts output to the first 20 lines, giving you the 20 largest items.</p>\n\n        <h2>Practical Considerations</h2>\n\n        <h3>Why use sudo?</h3>\n        <p>Running with <code>sudo</code> ensures you have permission to read all files on the system. Without it, you'll get \"Permission denied\" errors for protected directories.</p>\n\n        <h3>Performance Impact</h3>\n        <p>This command can be resource-intensive when run on the entire filesystem. It will:</p>\n        <ul>\n            <li>Generate significant disk I/O</li>\n            <li>Take a long time on large systems</li>\n            <li>Potentially impact system performance temporarily</li>\n        </ul>\n\n        <h3>Better Alternatives for Large Systems</h3>\n        <p>For production systems, consider these refinements:</p>\n\n        <pre><code lang=\"bash\">sudo du -h --max-depth=2 / | sort -rh | head -20</code></pre>\n\n        <p>This limits the depth of recursion, making the command run faster while still identifying large directories.</p>\n\n        <h2>Safety Precautions</h2>\n        <ul>\n            <li>Run during low-traffic periods if on a production server</li>\n            <li>Consider using <code>nice</code> to reduce CPU priority: <code>nice -n 19 sudo du -ah / | sort -rh | head -20</code></li>\n            <li>Avoid deleting files you don't understand - especially in system directories</li>\n        </ul>\n\n        <h2>Practical Examples</h2>\n        <p>Sample output might look like this:</p>\n\n        <pre><code>16G    /\n14G    /home\n10G    /home/username\n8.5G   /var\n7.2G   /var/lib\n5.4G   /var/lib/docker\n3.2G   /usr\n2.8G   /usr/lib\n2.1G   /opt\n...</code></pre>\n\n        <p>This quickly reveals where your disk space is being consumed, allowing you to take targeted action to reclaim space.</p>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Linux</span>\n            <span class=\"badge\">#CommandLine</span>\n            <span class=\"badge\">#DiskUsage</span>\n            <span class=\"badge\">#SysAdmin</span>\n            <span class=\"badge\">#Tutorial</span>\n        </div>\n    </div>\n</article>", "url": "/posts/finding-the-largest-files-on-your-system-with-the-du-command.html", "tags": "linux, command-line, disk-usage, tutorial, system-administration"}, {"title": "Docker Commands Cheat Sheet", "description": "Essential Docker commands for local development and container management", "content": "<article class=\"blog-post\">\n    <h1>Docker Commands yang Paling Sering Digunakan</h1>\n    <div class=\"meta mb-4\">February 16, 2024</div>\n\n    <div class=\"content\">\n        <p>Berikut adalah beberapa cheat sheet command Docker yang berguna saat sedang melakukan development atau bekerja di lingkungan local:</p>\n\n        <h2>Container Management</h2>\n        <p>Menghentikan semua container yang sedang berjalan:</p>\n        <pre><code>docker container stop $(docker container ls -a -q)</code></pre>\n\n        <p>Menghapus semua container:</p>\n        <pre><code>docker container rm $(docker container ls -a -q)</code></pre>\n\n        <p>Memulai container dan detach:</p>\n        <pre><code>docker-compose up -d</code></pre>\n\n        <p>Melihat log container:</p>\n        <pre><code>docker logs container_name</code></pre>\n\n        <h2>Volume & Image Cleanup</h2>\n        <p>Menghapus semua volume:</p>\n        <pre><code>docker volume rm $(docker volume ls -q)</code></pre>\n\n        <p>Menghapus semua image:</p>\n        <pre><code>docker rmi -f $(docker images -aq)</code></pre>\n\n        <p>Menghapus semua container, volume, dan network yang tidak digunakan:</p>\n        <pre><code>docker system prune -a --volumes</code></pre>\n\n        <h2>Container Access</h2>\n        <p>Masuk ke bash container:</p>\n        <pre><code>docker-compose exec workspace bash</code></pre>\n\n        <p>Melihat IP Container:</p>\n        <pre><code>docker container ls\ndocker inspect {container_id} | grep \"IP Address\"</code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#DevOps</span>\n            <span class=\"badge\">#Containers</span>\n            <span class=\"badge\">#Tips</span>\n        </div>\n    </div>\n</article>", "url": "/posts/docker-commands-cheat-sheet.html", "tags": "docker, devops, containers, tips"}, {"title": "Running Gitlab on Local with Gitlab Runner", "description": "Guide to setup and run Gitlab Runner locally with Docker integration", "content": "<article class=\"blog-post\">\n    <h1>Running Gitlab on Local with Gitlab Runner</h1>\n    <div class=\"meta mb-4\">November 22, 2021</div>\n\n    <div class=\"content\">\n        <h2>Install GitLab Runner</h2>\n        <p>Install using Homebrew:</p>\n        <pre><code>brew install gitlab-runner</code></pre>\n\n        <p>Start GitLab Runner service:</p>\n        <pre><code>brew services start gitlab-runner</code></pre>\n\n        <h2>Configure Docker Registry Access</h2>\n        <p>Add credentials to <code>/Users/muhyusuf/.docker/config.json</code> for private registry access:</p>\n\n        <pre><code>{\n    \"auths\": {\n        \"registry.gitlab.com\": {\n            \"username\": \"iambbb\",\n            \"password\": \"password\"\n        }\n    },\n    \"credsStore\": \"desktop\",\n    \"experimental\": \"disabled\", \n    \"stackOrchestrator\": \"swarm\",\n    \"currentContext\": \"default\"\n}</code></pre>\n\n        <h2>Run Specific Pipeline Stage</h2>\n        <p>Execute specific stage (e.g., unit_test):</p>\n        <pre><code>sudo gitlab-runner exec docker unit_test</code></pre>\n\n        <p>Reference:</p>\n        <ul>\n            <li><a href=\"https://docs.gitlab.com/runner/install/osx.html#homebrew-installation-alternative\">GitLab Runner Installation Guide</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#GitLab</span>\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#CI-CD</span>\n            <span class=\"badge\">#Runner</span>\n        </div>\n    </div>\n</article>", "url": "/posts/running-gitlab-on-local-with-gitlab-runner.html", "tags": "gitlab, docker, ci-cd, runner"}, {"title": "IP 0-0-0-0", "description": "Understanding the wildcard IP address 0.0.0.0 and its uses", "content": "<article class=\"blog-post\">\n    <h1>IP 0.0.0.0</h1>\n    <div class=\"meta mb-4\">December 11, 2021</div>\n\n    <div class=\"content\">\n        <p>The 0.0.0.0 IP address is sometimes called a wildcard address, unspecified address, or INADDR_ANY.</p>\n\n        <h2>What is IP 0.0.0.0?</h2>\n        <p>When used in server configurations, 0.0.0.0 means:</p>\n        <ul>\n            <li>Listen on all available network interfaces</li>\n            <li>Accept connections from any available network interface</li>\n            <li>Bind to all IPv4 addresses on the local machine</li>\n        </ul>\n\n        <h2>Common Use Cases</h2>\n        <p>You'll often see 0.0.0.0 used in:</p>\n        <ul>\n            <li>Development server configurations</li>\n            <li>Docker container networking</li>\n            <li>Application server bindings</li>\n            <li>Network service configurations</li>\n        </ul>\n\n        <h2>Example Usage</h2>\n        <pre><code lang=\"bash\"># Node.js server\napp.listen(3000, '0.0.0.0');\n\n# Python Flask\napp.run(host='0.0.0.0', port=5000)\n\n# Docker container\nEXPOSE 8080\nCMD [\"server\", \"--host\", \"0.0.0.0\"]</code></pre>\n\n        <h2>Security Considerations</h2>\n        <p>When using 0.0.0.0:</p>\n        <ul>\n            <li>Only use in development environments</li>\n            <li>Configure proper firewalls in production</li>\n            <li>Use specific IP bindings for production deployments</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Networking</span>\n            <span class=\"badge\">#IP</span>\n            <span class=\"badge\">#Server</span>\n            <span class=\"badge\">#Tips</span>\n        </div>\n    </div>\n</article>", "url": "/posts/ip-0-0-0-0.html", "tags": "networking, ip, server, tips"}, {"title": "How to Delete AWS ACM Certificate Management from ELB", "description": "Step-by-step guide to removing ACM certificates from Elastic Load Balancer", "content": "<article class=\"blog-post\">\n    <h1>How to Delete AWS ACM Certificate Management from ELB</h1>\n    <div class=\"meta mb-4\">June 6, 2024</div>\n\n    <div class=\"content\">\n        <h2>Step-by-Step Instructions</h2>\n        <ol>\n            <li>Select your ELB</li>\n            <li>Select your HTTPS Listener</li>\n            <li>Navigate to the Certificates Tab to view \"Listener certificates for SNI\"</li>\n            <li>Remove the Certificate ID</li>\n            <li>Return to ACM console to delete the certificate</li>\n        </ol>\n\n        <h2>Detailed Process</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Step</th>\n                    <th>Location</th>\n                    <th>Action</th>\n                </tr>\n                <tr>\n                    <td>1</td>\n                    <td>EC2 Console > Load Balancers</td>\n                    <td>Select target ELB</td>\n                </tr>\n                <tr>\n                    <td>2</td>\n                    <td>Listeners tab</td>\n                    <td>Find HTTPS listener</td>\n                </tr>\n                <tr>\n                    <td>3</td>\n                    <td>Certificates tab</td>\n                    <td>View SNI certificates</td>\n                </tr>\n                <tr>\n                    <td>4</td>\n                    <td>Certificate list</td>\n                    <td>Remove certificate</td>\n                </tr>\n                <tr>\n                    <td>5</td>\n                    <td>ACM Console</td>\n                    <td>Delete certificate</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Important Notes</h2>\n        <ul>\n            <li>Verify no other services use the certificate before deletion</li>\n            <li>Removal may take a few minutes to propagate</li>\n            <li>Keep backup of certificate details if needed</li>\n            <li>Consider impact on existing HTTPS connections</li>\n        </ul>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Document certificate removals</li>\n            <li>Schedule removal during low-traffic periods</li>\n            <li>Update DNS records if necessary</li>\n            <li>Review security group settings</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#AWS</span>\n            <span class=\"badge\">#ACM</span>\n            <span class=\"badge\">#ELB</span>\n            <span class=\"badge\">#Certificates</span>\n        </div>\n    </div>\n</article>", "url": "/posts/how-to-delete-aws-acm-certificate-management-from-elb.html", "tags": "aws, acm, elb, certificates"}, {"title": "Install Envoy Laravel", "description": "Step by step guide to install Laravel Envoy globally on Ubuntu and MacBook", "content": "<article class=\"blog-post\">\n    <h1>Install Envoy Laravel Ubuntu/Macbook</h1>\n    <div class=\"meta mb-4\">November 14, 2021</div>\n\n    <div class=\"content\">\n        <p>Install Laravel Envoy globally using Composer:</p>\n\n        <pre><code>composer global require laravel/envoy</code></pre>\n\n        <p>Add Composer path variable to $PATH by adding this line to your ~/.zshrc:</p>\n\n        <pre><code>export PATH=\"$HOME/.composer/vendor/bin:$PATH\"</code></pre>\n\n        <p>Reference:</p>\n        <ul>\n            <li><a href=\"https://stackoverflow.com/questions/36669362/problems-in-installing-laravel-envoy-with-composer\">Stack Overflow - Problems in installing Laravel Envoy with Composer</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Laravel</span>\n            <span class=\"badge\">#Envoy</span>\n            <span class=\"badge\">#Ubuntu</span>\n            <span class=\"badge\">#MacBook</span>\n        </div>\n    </div>\n</article>", "url": "/posts/install-envoy-laravel.html", "tags": "laravel, envoy, ubuntu, macbook"}, {"title": "The easiest way to kill all nginx processes", "description": "Quick guide for stopping and restarting Nginx processes", "content": "<article class=\"blog-post\">\n    <h1>The easiest way to kill all nginx processes</h1>\n    <div class=\"meta mb-4\">November 6, 2023</div>\n\n    <div class=\"content\">\n        <h2>Kill All Nginx Processes</h2>\n        <pre><code lang=\"bash\">sudo killall nginx</code></pre>\n\n        <h2>Restart Nginx Service</h2>\n        <pre><code lang=\"bash\">sudo systemctl start nginx</code></pre>\n\n        <h2>Alternative Commands</h2>\n        <pre><code lang=\"bash\"># Using pkill\nsudo pkill nginx\n\n# Using service command\nsudo service nginx stop\nsudo service nginx start\n\n# Graceful restart\nsudo systemctl reload nginx\n\n# Force stop and start\nsudo systemctl stop nginx\nsudo systemctl start nginx</code></pre>\n\n        <h2>Verification Steps</h2>\n        <pre><code lang=\"bash\"># Check Nginx status\nsudo systemctl status nginx\n\n# Check running processes\nps aux | grep nginx\n\n# Test configuration\nsudo nginx -t</code></pre>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Always verify Nginx configuration before restart</li>\n            <li>Use graceful reload when possible</li>\n            <li>Check logs for any errors</li>\n            <li>Monitor service status after restart</li>\n            <li>Backup configuration before changes</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Nginx</span>\n            <span class=\"badge\">#Linux</span>\n            <span class=\"badge\">#Server</span>\n            <span class=\"badge\">#Commands</span>\n        </div>\n    </div>\n</article>", "url": "/posts/the-easiest-way-to-kill-all-nginx-processes.html", "tags": "nginx, linux, server, commands"}, {"title": "Rake vs Rails", "description": "Understanding the differences between Rake and Rails command-line tools in Ruby on Rails", "content": "<article class=\"blog-post\">\n    <h1>Rake vs Rails</h1>\n    <div class=\"meta mb-4\">August 20, 2023</div>\n\n    <div class=\"content\">\n        <p>Rake dan rails keduanya adalah command-line tools digunakan di Ruby on Rails application.</p>\n\n        <h2>Rake Commands</h2>\n        <p>Rake adalah sebuah build dan task automation tool di Ruby. Beberapa contoh common tasks menggunakan Rake di Ruby on Rails:</p>\n        \n        <pre><code lang=\"bash\"># Running database migrations\nrake db:migrate\n\n# Create secret\nrake secret\n\n# Running Test\nrake test\n\n# Compiling assets\nrake assets:precompile\n\n# Seeding database\nrake db:seed</code></pre>\n\n        <h2>Rails Commands</h2>\n        <p>Rails adalah command-line tool untuk Ruby on Rails itu sendiri. Beberapa contoh common tasks menggunakan Rails di Ruby on Rails:</p>\n\n        <pre><code lang=\"bash\"># Creating new application\nrails new api-application\n\n# Starting server\nrails server\n\n# Running Rails console\nrails console</code></pre>\n\n        <h2>Key Differences</h2>\n        <ul>\n            <li><strong>Rake:</strong> Task automation dan build tool</li>\n            <li><strong>Rails:</strong> Framework-specific commands dan generators</li>\n        </ul>\n\n        <h2>Common Use Cases</h2>\n        <table class=\"table\">\n            <tr>\n                <th>Rake</th>\n                <th>Rails</th>\n            </tr>\n            <tr>\n                <td>Database operations</td>\n                <td>Project generation</td>\n            </tr>\n            <tr>\n                <td>Asset compilation</td>\n                <td>Development server</td>\n            </tr>\n            <tr>\n                <td>Custom tasks</td>\n                <td>Code generation</td>\n            </tr>\n        </table>\n\n        <h2>Kesimpulan</h2>\n        <p>Rake dan rails adalah command line tools yang digunakan di Ruby on Rails application, masing-masing dengan peran spesifik dalam development workflow.</p>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Ruby</span>\n            <span class=\"badge\">#Rails</span>\n            <span class=\"badge\">#Rake</span>\n            <span class=\"badge\">#Tools</span>\n            <span class=\"badge\">#Development</span>\n        </div>\n    </div>\n</article>", "url": "/posts/rake-vs-rails.html", "tags": "ruby, rails, rake, tools, development"}, {"title": "Image Generation and Analysis with Google Vertex AI", "description": "Guide to generating and analyzing images using Google Vertex AI with Python", "content": "<article class=\"blog-post\">\n    <h1>Image Generation and Analysis with Google Vertex AI</h1>\n    <div class=\"meta mb-4\">January 20, 2025</div>\n\n    <div class=\"content\">\n        <h2>Setting Up Vertex AI</h2>\n        <p>First, install the required dependencies:</p>\n        <pre><code>pip install google-cloud-aiplatform pillow</code></pre>\n\n        <h2>Image Generation</h2>\n        <p>Using Vertex AI's ImageGenerationModel, we can create custom images from text prompts. Here's how to generate a bouquet image:</p>\n\n        <pre><code>from vertexai.preview.vision_models import ImageGenerationModel\nimport vertexai\n\ndef generate_bouquet_image(project_id, location, output_file, prompt):\n    vertexai.init(project=project_id, location=location)\n    model = ImageGenerationModel.from_pretrained(\"imagegeneration@002\")\n    \n    images = model.generate_images(\n        prompt=prompt,\n        number_of_images=1,\n        seed=1,\n        add_watermark=False,\n    )\n    images[0].save(location=output_file)</code></pre>\n\n        <h2>Image Analysis with Gemini Pro Vision</h2>\n        <p>After generating the image, we can analyze it using Gemini Pro Vision model:</p>\n\n        <pre><code>from vertexai.generative_models import GenerativeModel, Image\n\ndef analyze_bouquet_image(image_path):\n    image = Image.load_from_file(image_path)\n    multimodal_model = GenerativeModel(\"gemini-pro-vision\")\n    \n    prompt = \"generate birthday wishes based on the image passed\"\n    contents = [image, prompt]\n    responses = multimodal_model.generate_content(contents)\n    return responses</code></pre>\n\n        <h2>Usage Example</h2>\n        <p>Here's how to use both functions together:</p>\n        <pre><code>project_id = \"your-project-id\"\nlocation = \"us-central1\"\noutput_file = \"image.jpeg\"\nprompt = \"Create an image containing a bouquet of 2 sunflowers and 3 roses\"\n\n# Generate image\ngenerate_bouquet_image(project_id, location, output_file, prompt)\n\n# Analyze generated image\nresult = analyze_bouquet_image(output_file)</code></pre>\n\n        <h2>Key Features</h2>\n        <ul>\n            <li>Text-to-image generation using Vertex AI</li>\n            <li>Image analysis with Gemini Pro Vision</li>\n            <li>Support for custom prompts and multiple images</li>\n            <li>Local image saving and processing</li>\n            <li>Integration with Google Cloud Platform</li>\n        </ul>\n\n        <p>Reference:</p>\n        <ul>\n            <li><a href=\"https://cloud.google.com/vertex-ai/docs\">Google Vertex AI Documentation</a></li>\n            <li><a href=\"https://cloud.google.com/vertex-ai/docs/generative-ai/image/image-generation\">Image Generation Guide</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#VertexAI</span>\n            <span class=\"badge\">#Python</span>\n            <span class=\"badge\">#MachineLearning</span>\n            <span class=\"badge\">#GoogleCloud</span>\n        </div>\n    </div>\n</article>", "url": "/posts/image-generation-and-analysis-with-google-vertex-ai.html", "tags": "vertex-ai, python, machine-learning, google-cloud"}, {"title": "No Reason to Write OpenAPI By Hand", "description": "Exploring modern tools and approaches for API design with focus on Stoplight Studio", "content": "<article class=\"blog-post\">\n    <h1>There's No Reason to Write OpenAPI By Hand</h1>\n    <div class=\"meta mb-4\">January 20, 2024</div>\n\n    <div class=\"content\">\n        <p>Creating OpenAPI specifications manually can be tedious and error-prone. Let's explore better approaches for API design, with special focus on modern tools like Stoplight Studio.</p>\n\n        <h2>Common API Design Approaches</h2>\n        \n        <h3>1. Manual YAML/JSON Writing</h3>\n        <p>Traditional approach of writing OpenAPI specs by hand:</p>\n        \n        <pre><code lang=\"yaml\">openapi: 3.0.0\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pet'</code></pre>\n\n        <h3>2. Modern GUI Editors</h3>\n        <p>Tools like Stoplight Studio provide visual editing capabilities with several advantages:</p>\n        <ul>\n            <li>Visual form-based editing</li>\n            <li>Real-time validation</li>\n            <li>Built-in mocking</li>\n            <li>Version control integration</li>\n            <li>Team collaboration features</li>\n        </ul>\n\n        <h2>Why Stoplight Studio?</h2>\n        <p>Stoplight Studio offers several key benefits:</p>\n        <ul>\n            <li>Design Libraries for model reuse</li>\n            <li>Built-in style guide enforcement</li>\n            <li>Git-based workflow</li>\n            <li>Instant preview and documentation</li>\n            <li>HTTP client for testing</li>\n        </ul>\n\n        <h2>Best Practices</h2>\n        <p>When designing APIs, consider these approaches:</p>\n        <ul>\n            <li>Use visual editors for faster design iteration</li>\n            <li>Maintain a single source of truth</li>\n            <li>Implement automated validation</li>\n            <li>Leverage version control for API specs</li>\n            <li>Use built-in mocking for early testing</li>\n        </ul>\n\n        <h2>Conclusion</h2>\n        <p>Modern tools like Stoplight Studio have made manual OpenAPI specification writing obsolete. They provide a more efficient, collaborative, and error-free approach to API design.</p>\n\n        <h2>References</h2>\n        <ul>\n            <li><a href=\"https://stoplight.io/studio\" target=\"_blank\">Stoplight Studio Official Website</a></li>\n            <li><a href=\"https://openapi.tools\" target=\"_blank\">OpenAPI Tools Directory</a></li>\n            <li><a href=\"https://swagger.io/specification/\" target=\"_blank\">OpenAPI Specification</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#API</span>\n            <span class=\"badge\">#OpenAPI</span>\n            <span class=\"badge\">#Stoplight</span>\n            <span class=\"badge\">#Tools</span>\n            <span class=\"badge\">#Design</span>\n        </div>\n    </div>\n</article>", "url": "/posts/no-reason-to-write-openapi-by-hand.html", "tags": "api, openapi, stoplight, tools, design"}, {"title": "What is Websocket", "description": "Understanding WebSocket technology and its real-time applications", "content": "<article class=\"blog-post\">\n    <h1>What is Websocket?</h1>\n    <div class=\"meta mb-4\">November 27, 2021</div>\n\n    <div class=\"content\">\n        <p>WebSocket is an upgraded version of traditional HTTP that enables real-time, bidirectional communication between client and server.</p>\n\n        <h2>Common Use Cases</h2>\n        <ul>\n            <li>Chat applications</li>\n            <li>Location based apps</li>\n            <li>Social feeds</li>\n            <li>Collaborative work</li>\n            <li>Multi player gaming</li>\n            <li>Live streaming</li>\n            <li>Financial and sports updates</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#WebSocket</span>\n            <span class=\"badge\">#Realtime</span>\n            <span class=\"badge\">#Networking</span>\n            <span class=\"badge\">#HTTP</span>\n        </div>\n    </div>\n</article>", "url": "/posts/what-is-websocket.html", "tags": "websocket, realtime, networking, http"}, {"title": "Git command yang paling sering digunakan", "description": "Panduan perintah Git yang sering digunakan dalam pengembangan software", "content": "<article class=\"blog-post\">\n    <h1>Git command yang paling sering digunakan</h1>\n    <div class=\"meta mb-4\">October 17, 2024</div>\n\n    <div class=\"content\">\n        <h2>Branch Management</h2>\n\n        <h3>List Local Branches</h3>\n        <pre><code lang=\"bash\">git branch</code></pre>\n        <p>Menampilkan semua branch lokal, dengan branch aktif yang ditandai.</p>\n\n        <h3>List Branches with Recent Commits</h3>\n        <pre><code lang=\"bash\">git branch --sort=-committerdate --format=\"%(refname:short) - %(committerdate:relative)\"</code></pre>\n        <p>Menampilkan branch berdasarkan urutan commit terbaru, dengan informasi waktu commit terakhir.</p>\n\n        <h3>List Recently Checked-out Branches</h3>\n        <pre><code lang=\"bash\">git reflog</code></pre>\n        <p>Menampilkan log aktivitas Git terakhir, termasuk perpindahan antar branch.</p>\n\n        <h2>Common Git Operations</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Operation</th>\n                    <th>Command</th>\n                    <th>Usage</th>\n                </tr>\n                <tr>\n                    <td>Status Check</td>\n                    <td><code>git status</code></td>\n                    <td>Melihat status perubahan</td>\n                </tr>\n                <tr>\n                    <td>Add Files</td>\n                    <td><code>git add .</code></td>\n                    <td>Menambahkan semua perubahan</td>\n                </tr>\n                <tr>\n                    <td>Commit</td>\n                    <td><code>git commit -m \"message\"</code></td>\n                    <td>Menyimpan perubahan</td>\n                </tr>\n                <tr>\n                    <td>Push</td>\n                    <td><code>git push origin branch</code></td>\n                    <td>Mengirim perubahan ke remote</td>\n                </tr>\n                <tr>\n                    <td>Pull</td>\n                    <td><code>git pull origin branch</code></td>\n                    <td>Mengambil perubahan dari remote</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Branch Operations</h2>\n        <pre><code lang=\"bash\"># Create new branch\ngit checkout -b new-branch\n\n# Switch branch\ngit checkout existing-branch\n\n# Delete branch\ngit branch -d branch-name\n\n# Force delete branch\ngit branch -D branch-name</code></pre>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Selalu pull sebelum mulai bekerja</li>\n            <li>Commit dengan pesan yang jelas</li>\n            <li>Gunakan branch untuk fitur baru</li>\n            <li>Review perubahan sebelum commit</li>\n            <li>Backup branch penting</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Git</span>\n            <span class=\"badge\">#VersionControl</span>\n            <span class=\"badge\">#Development</span>\n            <span class=\"badge\">#Commands</span>\n        </div>\n    </div>\n</article>", "url": "/posts/git-command-yang-paling-sering-digunakan.html", "tags": "git, version-control, development, commands"}, {"title": "Development Process of Product", "description": "Understanding product development workflow and engineering team scaling through documentation", "content": "<article class=\"blog-post\">\n    <h1>Development Process of Product</h1>\n    <div class=\"meta mb-4\">December 19, 2021</div>\n\n    <div class=\"content\">\n        <img src=\"../../assets/images/FGKWChQXoAE6fkQ.jpeg\" alt=\"Product Development Workflow\" class=\"img-fluid mb-4\">\n\n        <h2>References</h2>\n        <ul>\n            <li><a href=\"https://twitter.com/GergelyOrosz/status/1468901848774066181\">Gergely Orosz's Twitter Thread</a></li>\n            <li><a href=\"https://blog.pragmaticengineer.com/scaling-engineering-teams-via-writing-things-down-rfcs/\">Scaling Engineering Teams via Writing Things Down - RFCs</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Development</span>\n            <span class=\"badge\">#Product</span>\n            <span class=\"badge\">#Engineering</span>\n            <span class=\"badge\">#Documentation</span>\n        </div>\n    </div>\n</article>", "url": "/posts/development-process-of-product.html", "tags": "development, product, engineering, documentation"}, {"title": "Cheat Sheet YII2 Framework", "description": "Quick reference guide for common YII2 Framework commands and configurations", "content": "<article class=\"blog-post\">\n    <h1>Cheat Sheet YII2 Framework</h1>\n    <div class=\"meta mb-4\">November 17, 2021</div>\n\n    <div class=\"content\">\n        <h2>Meta Tags</h2>\n        <pre><code>$this->title = 'Hello View - Demo Meta Tags'; \n$this->registerMetaTag(['name' => 'keywords', 'content' => 'yii, framework, php']); \n$this->registerMetaTag(['name' => 'description', 'content' => 'Belajar yii framework. Dipersembahkan oleh Codepolitan.');</code></pre>\n\n        <h2>Load View</h2>\n        <pre><code>return $this->render('greeting', ['name'=>$name]);</code></pre>\n\n        <h2>Pretty URL Configuration</h2>\n        <pre><code>'urlManager' => [\n    'enablePrettyUrl' => true,\n    'showScriptName' => true,\n    'enableStrictParsing' => false,\n    'rules' => [\n    ],\n]</code></pre>\n\n        <h2>Controller Mapping</h2>\n        <pre><code>'controllerMap' => [\n    'demo' => 'app\\controllers\\HelloController'\n],</code></pre>\n\n        <h2>Redirect</h2>\n        <pre><code>return $this->redirect('/url');</code></pre>\n\n        <h2>Enable Apache Rewrite</h2>\n        <pre><code>a2enmod rewrite</code></pre>\n\n        <h2>Install CKEditor</h2>\n        <pre><code>composer require 2amigos/yii2-ckeditor-widget</code></pre>\n\n        <p>References:</p>\n        <ul>\n            <li><a href=\"https://askubuntu.com/questions/48362/how-to-enable-mod-rewrite-in-apache\">How to enable mod_rewrite in Apache</a></li>\n            <li><a href=\"http://www.yiiframework.com/extension/yii2-ckeditor-widget/#hh0\">Yii2 CKEditor Widget</a></li>\n            <li><a href=\"https://stackoverflow.com/questions/30979305/how-to-create-ckeditor-in-yii2\">How to create CKEditor in Yii2</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Yii2</span>\n            <span class=\"badge\">#PHP</span>\n            <span class=\"badge\">#Framework</span>\n            <span class=\"badge\">#CheatSheet</span>\n        </div>\n    </div>\n</article>", "url": "/posts/cheat-sheet-yii2-framework.html", "tags": "yii2, php, framework, cheatsheet"}, {"title": "Belajar Sorting String and Write to File with Golang", "description": "Tutorial sorting string dari command line arguments dan menulis hasilnya ke file menggunakan Golang", "content": "<article class=\"blog-post\">\n    <h1>Belajar Sorting a String and Write to File with Golang</h1>\n    <div class=\"meta mb-4\">April 11, 2022</div>\n\n    <div class=\"content\">\n        <p>Belajar sorting sebuah string dari argument terminal dan tulis ke sebuah file.</p>\n\n        <h2>Expected Output</h2>\n        <p>Command:</p>\n        <pre><code lang=\"bash\">go run main.go orange banana apple</code></pre>\n\n        <p>Result:</p>\n        <pre><code lang=\"bash\">cat sorted.txt\n     apple banana orange</code></pre>\n\n        <h2>Implementation</h2>\n        <pre><code lang=\"go\">package main\n\nimport (\n    \"fmt\"\n    \"io/ioutil\"\n    \"os\"\n    \"sort\"\n)\n\nfunc main() {\n    // get all arguments\n    items := os.Args[1:]\n    if len(items) == 0 {\n        fmt.Println(\"Send me some items and I will sort them\")\n        return\n    }\n\n    // String slices are sortable using `sort.Strings`\n    sort.Strings(items)\n\n    var data []byte\n    for _, s := range items {\n        // append a string to a byte slice\n        data = append(data, s...)\n    }\n\n    err := ioutil.WriteFile(\"sorted.txt\", data, 0644)\n    if err != nil {\n        fmt.Println(err)\n        return\n    }\n}</code></pre>\n\n        <h2>Output Example</h2>\n        <img src=\"../../assets/images/Screen-Shot-2022-04-11-at-09.21.29.png\" alt=\"Program Output\" class=\"img-fluid mb-4\" />\n\n        <h2>Key Concepts</h2>\n        <ul>\n            <li>Using os.Args untuk mengambil command line arguments</li>\n            <li>sort.Strings() untuk mengurutkan string slice</li>\n            <li>ioutil.WriteFile untuk menulis ke file</li>\n            <li>Permission 0644 untuk file yang dibuat</li>\n        </ul>\n\n        <h2>Source</h2>\n        <p>Code adapted from: <a href=\"https://github.com/inancgumus/learngo/blob/master/17-project-empty-file-finder/exercises/1-sort-to-a-file/main.go\" target=\"_blank\">Learn Go Project</a></p>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Golang</span>\n            <span class=\"badge\">#Sorting</span>\n            <span class=\"badge\">#File</span>\n            <span class=\"badge\">#Programming</span>\n            <span class=\"badge\">#Tutorial</span>\n        </div>\n    </div>\n</article>", "url": "/posts/belajar-sorting-string-and-write-to-file-with-golang.html", "tags": "golang, sorting, file, programming, tutorial"}, {"title": "Awesome REST GitHub Repository", "description": "Overview of the valuable Awesome REST GitHub repository for RESTful API development", "content": "<article class=\"blog-post\">\n    <h1>Awesome REST GitHub Repository</h1>\n    <div class=\"meta mb-4\">October 10, 2023</div>\n\n    <div class=\"content\">\n        <p>\"Awesome REST\" adalah sumber daya yang sangat berharga bagi para pengembang API RESTful. Dengan berbagai jenis sumber daya yang tersedia di dalamnya, repositori ini membantu pengembang dalam merancang, mengembangkan, dan mengelola API RESTful dengan lebih efisien.</p>\n\n        <h2>Akses Repository</h2>\n        <p>Kunjungi tautan GitHub \"Awesome REST\" di <a href=\"https://github.com/marmelab/awesome-rest\" target=\"_blank\">https://github.com/marmelab/awesome-rest</a></p>\n\n        <h2>Konten Utama</h2>\n        <ul>\n            <li>Format Spesifikasi</li>\n            <li>Tools dan Libraries</li>\n            <li>Testing Tools</li>\n            <li>Documentation Tools</li>\n            <li>API Gateways</li>\n            <li>Security</li>\n        </ul>\n\n        <h2>Manfaat</h2>\n        <ul>\n            <li>Referensi lengkap untuk pengembangan API</li>\n            <li>Koleksi best practices</li>\n            <li>Tools terkini untuk development</li>\n            <li>Komunitas yang aktif</li>\n            <li>Update regular</li>\n        </ul>\n\n        <h2>Kategori Resources</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Kategori</th>\n                    <th>Deskripsi</th>\n                </tr>\n                <tr>\n                    <td>Design Tools</td>\n                    <td>Tools untuk merancang API RESTful</td>\n                </tr>\n                <tr>\n                    <td>Development Tools</td>\n                    <td>Framework dan libraries untuk development</td>\n                </tr>\n                <tr>\n                    <td>Testing</td>\n                    <td>Tools untuk testing dan validasi API</td>\n                </tr>\n                <tr>\n                    <td>Documentation</td>\n                    <td>Generator dan tools dokumentasi API</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Cara Berkontribusi</h2>\n        <ol>\n            <li>Fork repository</li>\n            <li>Tambahkan resource baru</li>\n            <li>Submit pull request</li>\n            <li>Ikuti guidelines kontribusi</li>\n        </ol>\n\n        <h2>Tips Penggunaan</h2>\n        <ul>\n            <li>Bookmark repository untuk akses cepat</li>\n            <li>Watch repository untuk update terbaru</li>\n            <li>Explore kategori sesuai kebutuhan</li>\n            <li>Bagikan dengan tim development</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#REST</span>\n            <span class=\"badge\">#API</span>\n            <span class=\"badge\">#GitHub</span>\n            <span class=\"badge\">#Resources</span>\n            <span class=\"badge\">#Development</span>\n        </div>\n    </div>\n</article>", "url": "/posts/awesome-rest-github-repository.html", "tags": "rest, api, github, resources, development"}, {"title": "Distributed Monolith vs True Microservices", "description": "Understanding the difference between distributed monolith and true microservices architecture", "content": "<article class=\"blog-post\">\n    <h1>Distributed Monolith vs True Microservices</h1>\n    <div class=\"meta mb-4\">December 19, 2021</div>\n\n    <div class=\"content\">\n        <blockquote class=\"mb-4\">\n            <p>\"If you switch one of the microservices off and anything else breaks, you don't really have a microservice architecture, you just have a distributed monolith!\"</p>\n            <footer>- Scott Wlaschin, <cite>Domain Modelling Made Functional</cite></footer>\n        </blockquote>\n\n        <img src=\"../../assets/images/FGL_QZqXEAcJSSr.jpeg\" alt=\"Quote about distributed monolith vs microservices\" class=\"img-fluid\">\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Microservices</span>\n            <span class=\"badge\">#Architecture</span>\n            <span class=\"badge\">#DistributedSystems</span>\n            <span class=\"badge\">#DDD</span>\n        </div>\n    </div>\n</article>", "url": "/posts/distributed-monolith-vs-true-microservices.html", "tags": "microservices, architecture, distributed-systems, domain-driven-design"}, {"title": "Deploy Ruby on Rails with Capistrano and Ubuntu Server", "description": "Complete guide for deploying Ruby on Rails applications using Capistrano on Ubuntu Server", "content": "<article class=\"blog-post\">\n    <h1>Deploy Ruby on Rails with Capistrano and Ubuntu Server</h1>\n    <div class=\"meta mb-4\">September 3, 2023</div>\n\n    <div class=\"content\">\n        <h2>Step 1: Install Dependencies</h2>\n        <pre><code lang=\"bash\">sudo apt-get update && sudo apt-get -y upgrade\nsudo apt install zlib1g-dev build-essential libssl-dev libreadline-dev\nsudo apt install libyaml-dev libsqlite3-dev sqlite3 libxml2-dev\nsudo apt install libxslt1-dev libcurl4-openssl-dev\nsudo apt install software-properties-common libffi-dev nodejs\nsudo apt install git\nsudo apt install nginx\nsudo apt install autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm-dev libsqlite3-dev</code></pre>\n\n        <h2>Step 2: Setup Rbenv</h2>\n        <pre><code lang=\"bash\">git clone https://github.com/rbenv/rbenv.git ~/.rbenv\necho 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.bashrc\necho 'eval \"$(~/.rbenv/bin/rbenv init - bash)\"' >> ~/.bashrc\necho 'eval \"$(rbenv init -)\"' >> ~/.bashrc\nsource ~/.bashrc\nrbenv init\ntype rbenv</code></pre>\n\n        <h2>Step 3: Setup Ruby Build</h2>\n        <pre><code lang=\"bash\">git clone https://github.com/rbenv/ruby-build.git \"$(rbenv root)\"/plugins/ruby-build</code></pre>\n\n        <h2>Step 4: Install Ruby</h2>\n        <pre><code lang=\"bash\">RUBY_CONFIGURE_OPTS=--disable-install-doc rbenv install 2.7.5\nrbenv rehash\necho \"gem: --no-document\" > ~/.gemrc</code></pre>\n\n        <h2>Step 5-8: Install Rails, Puma, Bundler, Node-JS and Yarn</h2>\n        <pre><code lang=\"bash\">gem install rails\ngem install puma\ngem install bundler -v 2.1.4 --no-ri --no-rdoc\nsudo apt-get install nodejs\nsudo apt install yarn</code></pre>\n\n        <h2>Step 9: Install MySQL Dependencies</h2>\n        <pre><code lang=\"bash\">sudo apt-get install libmysqlclient-dev\ngem install mysql2 -v '0.5.0' --source 'https://rubygems.org/'</code></pre>\n\n        <h2>Step 10: SSH Configuration</h2>\n        <pre><code lang=\"bash\">ssh-keygen -o -t rsa -b 4096 -C \"ubuntu@13.250.29.89\"\nchmod o+x $HOME</code></pre>\n\n        <h2>Step 11: Capistrano Setup</h2>\n        <pre><code lang=\"ruby\">group :development do\n  gem \"web-console\"\n  gem 'capistrano'\n  gem 'capistrano-rails'\n  gem 'capistrano-rbenv'\n  gem 'capistrano-sidekiq'\n  gem 'capistrano-bundler'\n  gem 'capistrano3-puma'\nend</code></pre>\n\n        <h2>Step 12-13: Initialize Capistrano and Database Config</h2>\n        <pre><code lang=\"bash\">cd root-project\ncap install STAGES=production</code></pre>\n\n        <h2>Step 14-16: Service Configuration</h2>\n        <p>Configure Puma service, set secret key, and setup Nginx for your application.</p>\n\n        <h3>Puma Service Configuration</h3>\n        <pre><code lang=\"ini\">[Unit]\nDescription=Puma HTTP Server for timetable (production)\nAfter=network.target\n\n[Service]\nType=simple\nUser=ubuntu\nWorkingDirectory=/home/ubuntu/timetable/current\nExecStart=/home/ubuntu/.rbenv/bin/rbenv exec bundle exec --keep-file-descriptors puma -C /home/ubuntu/timetable/shared/puma.rb\nExecReload=/bin/kill -USR1 $MAINPID\nStandardOutput=append:/home/ubuntu/timetable/current/log/puma.access.log\nStandardError=append:/home/ubuntu/timetable/current/log/puma.error.log\n\nRestart=always\nRestartSec=1\n\nSyslogIdentifier=puma\n\n[Install]\nWantedBy=multi-user.target</code></pre>\n\n        <h3>Nginx Configuration</h3>\n        <pre><code lang=\"nginx\">upstream timetable_app {\n  server unix:/home/ubuntu/timetable/shared/tmp/sockets/puma.sock fail_timeout=0;\n}\n\nserver {\n  listen 80;\n  server_name _;\n  root /home/ubuntu/timetable/current/public;\n\n  location / {\n    try_files $uri/index.html $uri @timetable_app;\n  }\n\n  location @timetable_app {\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header Host $http_host;\n    proxy_redirect off;\n    proxy_pass http://timetable_app;\n  }\n\n  error_page 500 502 503 504 /500.html;\n  client_max_body_size 4G;\n  keepalive_timeout 10;\n}</code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Ruby</span>\n            <span class=\"badge\">#Rails</span>\n            <span class=\"badge\">#Capistrano</span>\n            <span class=\"badge\">#Ubuntu</span>\n            <span class=\"badge\">#Deployment</span>\n        </div>\n    </div>\n</article>", "url": "/posts/deploy-ruby-on-rails-with-capistrano-and-ubuntu-server.html", "tags": "ruby, rails, capistrano, ubuntu, deployment"}, {"title": "How to check whether my user data passing to EC2 instance is working", "description": "Guide to verifying EC2 user data script execution through log files", "content": "<article class=\"blog-post\">\n    <h1>How to check whether my user data passing to EC2 instance is working</h1>\n    <div class=\"meta mb-4\">January 26, 2024</div>\n\n    <div class=\"content\">\n        <h2>Verification Steps</h2>\n        <ol>\n            <li>SSH into your launched EC2 instance</li>\n            <li>Check the following log files:\n                <pre><code lang=\"bash\">cat /var/log/cloud-init.log\ncat /var/log/cloud-init-output.log</code></pre>\n            </li>\n        </ol>\n\n        <h2>What to Look For</h2>\n        <ul>\n            <li>Complete script execution logs in cloud-init.log</li>\n            <li>Script output and errors in cloud-init-output.log</li>\n            <li>Creation of /etc/cloud directory</li>\n        </ul>\n\n        <h2>Additional Verification Methods</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Command</th>\n                    <th>Purpose</th>\n                </tr>\n                <tr>\n                    <td><code>cloud-init status</code></td>\n                    <td>Check cloud-init service status</td>\n                </tr>\n                <tr>\n                    <td><code>ls -l /etc/cloud</code></td>\n                    <td>Verify cloud directory creation</td>\n                </tr>\n                <tr>\n                    <td><code>grep cloud-init /var/log/syslog</code></td>\n                    <td>Search system logs for cloud-init entries</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Include logging statements in your user data script</li>\n            <li>Check logs immediately after instance launch</li>\n            <li>Monitor script execution time</li>\n            <li>Verify expected file/directory creation</li>\n            <li>Test scripts locally when possible</li>\n        </ul>\n\n        <div class=\"source-reference mt-4\">\n            <p>Source: <a href=\"https://stackoverflow.com/questions/15904095/how-to-check-whether-my-user-data-passing-to-ec2-instance-is-working\" target=\"_blank\">Stack Overflow Discussion</a></p>\n        </div>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#AWS</span>\n            <span class=\"badge\">#EC2</span>\n            <span class=\"badge\">#CloudInit</span>\n            <span class=\"badge\">#DevOps</span>\n        </div>\n    </div>\n</article>", "url": "/posts/how-to-check-whether-my-user-data-passing-to-ec2-instance-is-working.html", "tags": "aws, ec2, cloud-init, devops"}, {"title": "Cara Install Laravel Menggunakan Image Docker Composer", "description": "Tutorial instalasi Laravel menggunakan Docker Composer image tanpa mengubah PHP versi lokal", "content": "<article class=\"blog-post\">\n    <h1>Cara Install Laravel Menggunakan Image Docker Composer</h1>\n    <div class=\"meta mb-4\">August 21, 2023</div>\n\n    <div class=\"content\">\n        <h2>Kondisi</h2>\n        <p>Malas untuk mengganti versi PHP di local machine</p>\n\n        <h2>Solusi</h2>\n        <p>Install laravel menggunakan composer image docker dari <a href=\"https://hub.docker.com/_/composer\" target=\"_blank\">Docker Hub - Composer</a></p>\n\n        <h2>Langkah-langkah</h2>\n        \n        <h3>1. Masuk ke folder aplikasi</h3>\n        <pre><code lang=\"bash\">cd /Web/acmilan-app</code></pre>\n\n        <h3>2. Jalankan command Docker</h3>\n        <pre><code lang=\"bash\">docker run --rm -v $(pwd):/app composer create-project --prefer-dist laravel/laravel .</code></pre>\n\n        <h3>3. Proses Instalasi</h3>\n        <img src=\"../../assets/images/Screenshot-2023-08-21-at-00.52.12.png\" alt=\"Laravel Installation Process\" class=\"img-fluid mb-4\" />\n\n        <h2>Penjelasan Command</h2>\n        <ul>\n            <li><strong>--rm</strong>: Hapus container setelah selesai</li>\n            <li><strong>-v $(pwd):/app</strong>: Mount current directory ke /app di container</li>\n            <li><strong>composer create-project</strong>: Command Composer untuk membuat project baru</li>\n            <li><strong>--prefer-dist</strong>: Menggunakan distribusi stabil</li>\n        </ul>\n\n        <h2>Keuntungan</h2>\n        <ul>\n            <li>Tidak perlu mengubah PHP versi lokal</li>\n            <li>Isolasi environment</li>\n            <li>Konsistensi versi PHP dan dependencies</li>\n            <li>Mudah digunakan di berbagai sistem operasi</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Laravel</span>\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#Composer</span>\n            <span class=\"badge\">#PHP</span>\n            <span class=\"badge\">#Installation</span>\n        </div>\n    </div>\n</article>", "url": "/posts/cara-install-laravel-menggunakan-image-docker-composer.html", "tags": "laravel, docker, composer, php, installation"}, {"title": "Belajar Vagrant", "description": "Getting started with Vagrant for virtual development environments", "content": "<article class=\"blog-post\">\n    <h1>Belajar Vagrant</h1>\n    <div class=\"meta mb-4\">December 3, 2021</div>\n\n    <div class=\"content\">\n        <h2>Installation</h2>\n        <pre><code>brew install vagrant</code></pre>\n\n        <h2>About Boxes</h2>\n        <p>Box adalah package format yang dipake untuk environtment si vagrant / base image</p>\n\n        <h2>Basic Commands</h2>\n        <pre><code>vagrant init ubuntu/focal64\nvagrant status\nvagrant destroy</code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Vagrant</span>\n            <span class=\"badge\">#Virtualization</span>\n            <span class=\"badge\">#DevOps</span>\n            <span class=\"badge\">#Ubuntu</span>\n        </div>\n    </div>\n</article>", "url": "/posts/belajar-vagrant.html", "tags": "vagrant, virtualization, devops, ubuntu"}, {"title": "Import Database MYSQL Laradock", "description": "Learn how to import MySQL databases in Laradock environment using Docker commands", "content": "<article class=\"blog-post\">\n    <h1>Import Database MYSQL di Laradock</h1>\n    <div class=\"meta mb-4\">October 28, 2021</div>\n\n    <div class=\"content\">\n        <p>Command untuk import database MySQL di environment Laradock:</p>\n\n        <pre><code>docker-compose exec -T mysql mysql -uroot -proot databasename < ~/Downloads/databasefile.sql</code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#MySQL</span>\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#Laradock</span>\n            <span class=\"badge\">#Database</span>\n        </div>\n    </div>\n</article>", "url": "/posts/import-database-mysql-laradock.html", "tags": "mysql, docker, laradock, database"}, {"title": "Installing Cody CLI for Automated Commit Messages", "description": "A step-by-step guide on installing and using Sourcegraph Cody CLI to generate AI-powered commit messages following Conventional Commits format", "content": "<article class=\"blog-post\">\n    <h1>Installing Cody CLI for Automated Commit Messages</h1>\n    <div class=\"meta mb-4\">Maret 13, 2025</div>\n\n    <div class=\"content\">\n        <p>Managing Git commit messages can be tedious, especially when trying to follow consistent formatting conventions. Sourcegraph's Cody CLI offers an elegant solution by generating AI-powered commit message suggestions. This guide walks you through installation and basic usage.</p>\n\n        <h2>Prerequisites</h2>\n        <p>Before installing Cody CLI, ensure you have:</p>\n        <ul>\n            <li>Git installed and configured</li>\n            <li>A Sourcegraph account (free tier works fine)</li>\n            <li>Node.js version manager (nvm) installed</li>\n        </ul>\n\n        <h2>Installation Steps</h2>\n\n        <h3>1. Install Node.js</h3>\n        <p>First, install Node.js version 20 using nvm:</p>\n        <pre><code lang=\"bash\">nvm install node20</code></pre>\n\n        <h3>2. Install Cody CLI</h3>\n        <p>With Node.js installed, you can now install the Sourcegraph Cody CLI:</p>\n        <pre><code lang=\"bash\">npm install -g sourcegraphcody</code></pre>\n\n        <h3>3. Authenticate with Sourcegraph</h3>\n        <p>Authenticate your CLI with your Sourcegraph account:</p>\n        <pre><code lang=\"bash\">cody auth login --web</code></pre>\n        \n        <p>This command opens a browser window where you can authorize the CLI to access your Sourcegraph account.</p>\n\n        <h2>Generating Commit Messages</h2>\n        \n        <p>Once installed and authenticated, you can use Cody to generate commit message suggestions based on your changes:</p>\n\n        <pre><code lang=\"bash\">git diff | cody chat --stdin -m 'Generate 5 different commit messages for this diff following Conventional Commits format. Present them in a numbered list from 1 to 5. Make them concise but descriptive.'</code></pre>\n\n        <h2>Understanding the Command</h2>\n\n        <ul>\n            <li><code>git diff</code>: Shows the changes you've made but not yet committed</li>\n            <li><code>|</code>: Pipes the output to the next command</li>\n            <li><code>cody chat --stdin</code>: Sends the diff as input to Cody</li>\n            <li><code>-m '...'</code>: Provides instructions to Cody about what kind of commit messages to generate</li>\n        </ul>\n\n        <h2>Benefits of Using Cody for Commit Messages</h2>\n\n        <ul>\n            <li><strong>Consistency</strong>: Helps maintain Conventional Commits format</li>\n            <li><strong>Time-saving</strong>: Generates multiple options in seconds</li>\n            <li><strong>Better quality</strong>: Creates descriptive messages that explain the \"what\" and \"why\" of changes</li>\n            <li><strong>Team alignment</strong>: Promotes better commit practices across your team</li>\n        </ul>\n\n        <h2>Example Output</h2>\n\n        <p>Running the command might produce output like this:</p>\n\n        <pre><code>1. feat(auth): implement OAuth2 authentication flow\n2. feat(login): add social login providers with proper error handling\n3. fix(security): resolve token validation vulnerability in auth process\n4. refactor(auth): reorganize authentication codebase for better maintainability\n5. feat(user): add remember-me functionality to login form</code></pre>\n\n        <h2>Customizing Prompts</h2>\n\n        <p>You can customize the prompt to get different styles of commit messages:</p>\n\n        <ul>\n            <li>For more detailed messages: Add \"Include the motivation for changes\"</li>\n            <li>For specific formatting: Specify exactly how you want the output structured</li>\n            <li>For targeted focus: \"Focus on the security implications of these changes\"</li>\n        </ul>\n\n        <h2>Tips for Best Results</h2>\n\n        <ul>\n            <li>Make focused commits that address a single concern</li>\n            <li>Review suggested messages and adapt as needed</li>\n            <li>Consider creating shell aliases for commonly used prompts</li>\n            <li>Use with pre-commit hooks for a streamlined workflow</li>\n        </ul>\n\n        <p>With Cody CLI, you can significantly improve your Git workflow by generating meaningful, consistent commit messages that make your project history more navigable and useful.</p>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Development</span>\n            <span class=\"badge\">#Git</span>\n            <span class=\"badge\">#CLI</span>\n            <span class=\"badge\">#Sourcegraph</span>\n            <span class=\"badge\">#Automation</span>\n        </div>\n    </div>\n</article>", "url": "/posts/installing-cody-cli-for-automated-commit-messages.html", "tags": "development, git, cli, sourcegraph, automation"}, {"title": "Example App Scripts Google Form: Sending All Response to Whatsapp", "description": "Guide to using Google Apps Script to send form responses to WhatsApp", "content": "<article class=\"blog-post\">\n    <h1>Example App Scripts Google Form: Sending All Response to Whatsapp</h1>\n    <div class=\"meta mb-4\">June 3, 2024</div>\n\n    <div class=\"content\">\n        <h2>Script Implementation</h2>\n        <pre><code lang=\"javascript\">function onFormSubmit(e) {\n  record_array = []\n\n  var form = FormApp.openById('1mYTARCa3_WEQU2YqWVjtp5tAlvGv4KW2bixxx'); // Form ID\n  var formResponses = form.getResponses();\n  var formCount = formResponses.length;\n\n  var formResponse = formResponses[formCount - 1];\n  var itemResponses = formResponse.getItemResponses();\n\n  var resultString = '';\n\n  for (var j = 0; j < itemResponses.length; j++) {\n    var itemResponse = itemResponses[j];\n    var title = itemResponse.getItem().getTitle();\n    var answer = itemResponse.getResponse();\n\n    record_array.push(answer);\n    resultString += title + ': ' + answer + '\\n';\n  }  \n\n  Logger.log(resultString)\n\n  // Send the resultString to an external API\n  var apiUrl = 'https://apiservice.com/v1/wa/send'; // Replace with your API endpoint\n  var options = {\n    'method': 'post',\n    'contentType': 'application/json',\n    'payload': JSON.stringify({ message: resultString, phone: \"628XX250XXXX\" })\n  };\n\n  try {\n    var response = UrlFetchApp.fetch(apiUrl, options);\n    Logger.log('Response Code: ' + response.getResponseCode());\n    Logger.log('Response Body: ' + response.getContentText());\n  } catch (error) {\n    Logger.log('Error: ' + error.message);\n  }\n}</code></pre>\n\n        <h2>Setup Instructions</h2>\n        <ol>\n            <li>Open your Google Form</li>\n            <li>Click Tools > Script editor</li>\n            <li>Copy the script above</li>\n            <li>Replace Form ID from your form URL</li>\n            <li>Update WhatsApp API endpoint and phone number</li>\n            <li>Save and deploy</li>\n        </ol>\n\n        <h2>Key Components</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Component</th>\n                    <th>Purpose</th>\n                </tr>\n                <tr>\n                    <td>onFormSubmit</td>\n                    <td>Trigger function when form is submitted</td>\n                </tr>\n                <tr>\n                    <td>FormApp.openById</td>\n                    <td>Access specific Google Form</td>\n                </tr>\n                <tr>\n                    <td>getResponses</td>\n                    <td>Retrieve form submissions</td>\n                </tr>\n                <tr>\n                    <td>UrlFetchApp</td>\n                    <td>Send data to WhatsApp API</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Features</h2>\n        <ul>\n            <li>Automatic response collection</li>\n            <li>Formatted message creation</li>\n            <li>WhatsApp integration</li>\n            <li>Error handling</li>\n            <li>Response logging</li>\n        </ul>\n\n        <div class=\"source-reference mt-4\">\n            <p>Reference: <a href=\"https://codewithcurt.com/google-form-using-apps-script-to-populate-google-sheet/\" target=\"_blank\">Code with Curt - Google Form Apps Script Tutorial</a></p>\n        </div>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#GoogleAppsScript</span>\n            <span class=\"badge\">#Forms</span>\n            <span class=\"badge\">#WhatsApp</span>\n            <span class=\"badge\">#Automation</span>\n        </div>\n    </div>\n</article>", "url": "/posts/example-app-scripts-google-form-sending-all-response-to-whatsapp.html", "tags": "google-apps-script, forms, whatsapp, automation"}, {"title": "Laradock mkcert Setup", "description": "Guide to setup SSL certificates with mkcert in Laradock environment", "content": "<article class=\"blog-post\">\n    <h1>Laradock + mkcert Setup</h1>\n    <div class=\"meta mb-4\">November 17, 2021</div>\n\n    <div class=\"content\">\n        <p>Generate SSL certificate in laradock/certbot/letsencrypt folder:</p>\n\n        <pre><code>sudo mkcert -install\nsudo mkcert dev.jepara.com</code></pre>\n\n        <p>Update docker-compose.yml nginx configuration:</p>\n\n        <pre><code>nginx:\n  build:\n    context: ./nginx\n    args:\n      - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}\n      - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}\n      - CHANGE_SOURCE=${CHANGE_SOURCE}\n      - http_proxy\n      - https_proxy\n      - no_proxy\n  volumes:\n    - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}\n    - ${NGINX_HOST_LOG_PATH}:/var/log/nginx\n    - ${NGINX_SITES_PATH}:/etc/nginx/sites-available\n    - ${NGINX_SSL_PATH}:/etc/nginx/ssl\n    - ./data/certbot/certs/:/var/certs\n    - ./certbot/letsencrypt/:/var/www/letsencrypt</code></pre>\n\n        <p>Add SSL configuration to jepara.conf in nginx/sites:</p>\n\n        <pre><code># For https\nlisten 443 ssl;\n#listen [::]:443 ssl ipv6only=on;\nssl_certificate /var/www/letsencrypt/dev.jepara.com.pem;\nssl_certificate_key /var/www/letsencrypt/dev.jepara.com-key.pem;</code></pre>\n\n        <p>Rebuild and restart nginx container:</p>\n\n        <pre><code>docker-compose build nginx\ndocker-compose restart nginx</code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Laradock</span>\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#SSL</span>\n            <span class=\"badge\">#mkcert</span>\n        </div>\n    </div>\n</article>", "url": "/posts/laradock-mkcert-setup.html", "tags": "laradock, docker, ssl, mkcert"}, {"title": "How to Fix 504 Gateway Timeout using Nginx", "description": "Guide to resolve 504 Gateway Timeout errors in Nginx with FastCGI and Proxy configurations", "content": "<article class=\"blog-post\">\n    <h1>How to Fix 504 Gateway Timeout using Nginx</h1>\n    <div class=\"meta mb-4\">December 19, 2021</div>\n\n    <div class=\"content\">\n        <h2>Common Error Messages</h2>\n        <ul>\n            <li>\"504 Gateway Timeout\"</li>\n            <li>\"504 Gateway Time-Out\"</li>\n            <li>\"504 Gateway Timeout NGINX\"</li>\n            <li>\"Nginx 504 Gateway Timeout\"</li>\n            <li>\"HTTP 504 Gateway Timeout\"</li>\n            <li>\"HTTP 504 Error\"</li>\n            <li>\"HTTP 504\"</li>\n            <li>\"Gateway Timeout (504)\"</li>\n        </ul>\n\n        <h2>Fix for Nginx + FastCGI (php-fpm)</h2>\n        \n        <h3>1. Update PHP Configuration</h3>\n        <p>Modify php.ini file (/etc/php.ini):</p>\n        <pre><code>max_execution_time = 300</code></pre>\n\n        <h3>2. Update PHP-FPM Configuration</h3>\n        <p>Edit /etc/php-fpm.d/www.conf:</p>\n        <pre><code>request_terminate_timeout = 300</code></pre>\n\n        <h3>3. Update Nginx Virtual Host</h3>\n        <pre><code>location ~ .php$ {\n    root /var/www/sites/nginxtips.com;\n    try_files $uri =404;\n    fastcgi_pass unix:/tmp/php5-fpm.sock;\n    fastcgi_index index.php;\n    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n    include fastcgi_params;\n    fastcgi_read_timeout 300;\n}</code></pre>\n\n        <h2>Fix for Nginx as Proxy</h2>\n        <p>Add to nginx.conf:</p>\n        <pre><code>proxy_connect_timeout       600;\nproxy_send_timeout          600;\nproxy_read_timeout          600;\nsend_timeout                600;</code></pre>\n\n        <h3>Reload Configuration</h3>\n        <pre><code>service nginx reload</code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Nginx</span>\n            <span class=\"badge\">#Server</span>\n            <span class=\"badge\">#Timeout</span>\n            <span class=\"badge\">#PHP-FPM</span>\n        </div>\n    </div>\n</article>", "url": "/posts/how-to-fix-504-gateway-timeout-using-nginx.html", "tags": "nginx, server, timeout, php-fpm"}, {"title": "Lumen lifecycle", "description": "Understanding the request lifecycle in Lumen framework", "content": "<article class=\"blog-post\">\n    <h1>Lumen lifecycle</h1>\n    <div class=\"meta mb-4\">February 1, 2024</div>\n\n    <div class=\"content\">\n        <div class=\"image-container text-center my-4\">\n            <img src=\"../../assets/images/Lumen_lifecycle-new-run.png\" \n                 alt=\"Lumen Request Lifecycle Diagram\" \n                 class=\"img-fluid rounded\"\n                 width=\"2000\" \n                 height=\"1500\"\n                 loading=\"lazy\">\n            <p class=\"text-muted mt-2\">Lumen Framework Request Lifecycle Flow</p>\n        </div>\n\n        <h2>Key Components</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Stage</th>\n                    <th>Description</th>\n                </tr>\n                <tr>\n                    <td>Public Index</td>\n                    <td>Entry point of the application</td>\n                </tr>\n                <tr>\n                    <td>Application</td>\n                    <td>Bootstrap and service container setup</td>\n                </tr>\n                <tr>\n                    <td>Kernel</td>\n                    <td>HTTP request handling and middleware</td>\n                </tr>\n                <tr>\n                    <td>Router</td>\n                    <td>Route matching and dispatching</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Request Flow</h2>\n        <ol>\n            <li>HTTP Request enters application</li>\n            <li>Bootstrap application services</li>\n            <li>Load service providers</li>\n            <li>Process middleware stack</li>\n            <li>Route matching and controller dispatch</li>\n            <li>Response generation</li>\n            <li>Return HTTP Response</li>\n        </ol>\n\n        <h2>Key Features</h2>\n        <ul>\n            <li>Fast and lightweight framework</li>\n            <li>Service container architecture</li>\n            <li>Middleware support</li>\n            <li>Eloquent ORM (optional)</li>\n            <li>RESTful routing</li>\n        </ul>\n\n        <div class=\"source-reference mt-4\">\n            <p>Source: <a href=\"https://fivezh.github.io/2016/07/31/Lumem-part2-lifecycle/\" target=\"_blank\">Detailed Lumen Lifecycle Analysis</a></p>\n        </div>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Lumen</span>\n            <span class=\"badge\">#PHP</span>\n            <span class=\"badge\">#Framework</span>\n            <span class=\"badge\">#Architecture</span>\n        </div>\n    </div>\n</article>", "url": "/posts/lumen-lifecycle.html", "tags": "lumen, php, framework, architecture"}, {"title": "Increase Speed Mouse Tracking Magic Mouse 2", "description": "How to adjust tracking speed for Apple Magic Mouse 2 using terminal commands", "content": "<article class=\"blog-post\">\n    <h1>Increase Speed Mouse Tracking Magic Mouse 2</h1>\n    <div class=\"meta mb-4\">November 17, 2021</div>\n\n    <div class=\"content\">\n        <p>Check current mouse tracking speed value:</p>\n\n        <pre><code>defaults read -g com.apple.mouse.scaling</code></pre>\n\n        <p>Increase mouse tracking speed value:</p>\n\n        <pre><code>defaults write -g com.apple.mouse.scaling 5.0</code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Mac</span>\n            <span class=\"badge\">#Mouse</span>\n            <span class=\"badge\">#Terminal</span>\n            <span class=\"badge\">#Settings</span>\n        </div>\n    </div>\n</article>", "url": "/posts/increase-speed-mouse-tracking-magic-mouse-2.html", "tags": "mac, mouse, terminal, settings"}, {"title": "Laravel Envoy Deployment Configuration", "description": "Complete example of Laravel Envoy configuration for automated deployment with staging and production environments", "content": "<article class=\"blog-post\">\n    <h1>Laravel Envoy Deployment Configuration</h1>\n    <div class=\"meta mb-4\">February 16, 2024</div>\n\n    <div class=\"content\">\n        <h2>Server Configuration</h2>\n        <pre><code lang=\"javascript\" theme=\"arta\">@setup\n$__container->servers([\n    'staging' => 'user@ip_address',\n    'production' => ['user@ip_address -p 8288'],\n]);\n@endsetup</code></pre>\n\n        <h2>Environment Setup</h2>\n        <pre><code>@setup\n$repository = 'git@gitlab.com:username/awesome_project_ever.git';\n$releases_dir = '/var/www/html/app/awesome_project_ever/releases';\n$app_dir = '/var/www/html/app/awesome_project_ever';\n$release = date('YmdHis');\n$new_release_dir = $releases_dir .'/'. $release;\n$branch = isset($branch) ? $branch : \"master\";\nif($server == \"staging\"){\n    $branch = \"staging\";\n}\n@endsetup</code></pre>\n\n        <h2>Deployment Story</h2>\n        <pre><code>@story('deploy',['on' => $server,'parallel' => true])\nclone_repository\nrun_composer\nupdate_symlinks\ndeployment_migrate\ndeployment_cache\nclean_old_releases\nset_permission_folder\nsay_finished\n@endstory</code></pre>\n\n        <h2>Task Definitions</h2>\n\n        <h3>Clone Repository</h3>\n        <pre><code>@task('clone_repository')\necho 'Cloning repository'\n[ -d {{ $releases_dir }} ] || mkdir {{ $releases_dir }}\ngit clone --depth 1 {{ $repository }} --branch={{ $branch }} {{ $new_release_dir }}\n@endtask</code></pre>\n\n        <h3>Run Composer</h3>\n        <pre><code>@task('run_composer')\necho \"Starting deployment ({{ $release }})\"\ncd {{ $new_release_dir }}\ncomposer install --prefer-dist --no-scripts -q -o\n@endtask</code></pre>\n\n        <h3>Update Symlinks</h3>\n        <pre><code>@task('update_symlinks')\necho \"Linking storage directory\"\ncp -R {{ $new_release_dir }}/storage {{ $app_dir }}\nrm -rf {{ $new_release_dir }}/storage\nln -nfs {{ $app_dir }}/storage {{ $new_release_dir }}/storage\n\ncp -R {{ $new_release_dir }}/public {{ $app_dir }}\nrm -rf {{ $new_release_dir }}/public/images\nln -nfs {{ $app_dir }}/public/images {{ $new_release_dir }}/public/images\n\necho 'Linking .env file'\nln -nfs {{ $app_dir }}/.env {{ $new_release_dir }}/.env\n\necho 'Linking current release'\nln -nfs {{ $new_release_dir }} {{ $app_dir }}/current\n@endtask</code></pre>\n\n        <h3>Database Migration</h3>\n        <pre><code>@task('deployment_migrate')\necho \"Migrating...\"\nphp {{ $new_release_dir }}/artisan migrate --force --no-interaction\n@endtask</code></pre>\n\n        <h3>Cache Management</h3>\n        <pre><code>@task('deployment_cache')\necho \"clearing cache...\"\nphp {{ $new_release_dir }}/artisan cache:clear --quiet\nphp {{ $new_release_dir }}/artisan config:clear\necho \"Cache cleared\"\n@endtask</code></pre>\n\n        <h3>Cleanup Old Releases</h3>\n        <pre><code>@task('clean_old_releases')\necho \"Cleaning old releases ...\"\nrm -rf `ls -dt {{ $app_dir }}/releases/* | tail -n +4`\n@endtask</code></pre>\n\n        <h3>Set Permissions</h3>\n        <pre><code>@task('set_permission_folder')\necho \"Set permission folder\"\ncd {{ $app_dir }}\nsudo chgrp -R www-data storage public\nsudo chmod -R ug+rwx storage public\n\ncd {{ $app_dir }}/current\nsudo chgrp -R www-data bootstrap/cache\nsudo chmod -R ug+rwx bootstrap/cache\n@endtask</code></pre>\n\n        <h3>Slack Notification</h3>\n        <pre><code>@finished\n@slack('https://hooks.slack.com/services/(Kode)', '#gitlab-activities', \"Deployed {$server}\")\n@endfinished</code></pre>\n\n        <h2>Prerequisites</h2>\n        <ul>\n            <li>Create .env file</li>\n            <li>Create folder storage</li>\n            <li>Create folder public/images</li>\n        </ul>\n\n        <h2>Usage</h2>\n        <p>For staging deployment:</p>\n        <pre><code>envoy run deploy --server=staging</code></pre>\n\n        <p>For production deployment:</p>\n        <pre><code>envoy run deploy --server=production</code></pre>\n\n        <p>Full Code</p>\n        <pre><code>\n\n            @setup\n$__container->servers([\n    'staging' => 'user@ip_address',\n    'production' => ['user@ip_address -p 8288'],\n]);\n@endsetup\n\n@setup\n    $repository = 'git@gitlab.com:username/awesome_project_ever.git';\n    $releases_dir = '/var/www/html/app/awesome_project_ever/releases';\n    $app_dir = '/var/www/html/app/awesome_project_ever';\n    $release = date('YmdHis');\n    $new_release_dir = $releases_dir .'/'. $release;\n    $branch = isset($branch) ? $branch : \"master\";\n    if($server == \"staging\"){\n        $branch = \"staging\";\n    }\n@endsetup\n\n@story('deploy',['on' => $server,'parallel' => true])\n    clone_repository\n    run_composer\n    update_symlinks\n    deployment_migrate\n    deployment_cache\n    clean_old_releases\n    set_permission_folder\n    say_finished\n@endstory\n\n@task('clone_repository')\n    echo 'Cloning repository'\n    [ -d {{ $releases_dir }} ] || mkdir {{ $releases_dir }}\n    git clone --depth 1 {{ $repository }} --branch={{ $branch }} {{ $new_release_dir }}\n@endtask\n\n@task('run_composer')\n    echo \"Starting deployment ({{ $release }})\"\n    cd {{ $new_release_dir }}\n    composer install --prefer-dist --no-scripts -q -o\n@endtask\n\n@task('update_symlinks')\n    echo \"Linking storage directory\"\n    cp -R {{ $new_release_dir }}/storage {{ $app_dir }}\n    rm -rf {{ $new_release_dir }}/storage\n    ln -nfs {{ $app_dir }}/storage {{ $new_release_dir }}/storage\n\n    cp -R {{ $new_release_dir }}/public {{ $app_dir }}\n    rm -rf {{ $new_release_dir }}/public/images\n    ln -nfs {{ $app_dir }}/public/images {{ $new_release_dir }}/public/images\n\n    echo 'Linking .env file'\n    ln -nfs {{ $app_dir }}/.env {{ $new_release_dir }}/.env\n\n    echo 'Linking current release'\n    ln -nfs {{ $new_release_dir }} {{ $app_dir }}/current\n@endtask\n\n@task('deployment_migrate')\n    echo \"Migrating...\"\n    php {{ $new_release_dir }}/artisan migrate --force --no-interaction\n@endtask\n\n@task('deployment_cache')\n    echo \"clearing cache...\"\n    php {{ $new_release_dir }}/artisan cache:clear --quiet\n    php {{ $new_release_dir }}/artisan config:clear\n    echo \"Cache cleared\"\n@endtask\n\n@task('clean_old_releases')\n  echo \"Cleaning old releases ...\"\n  rm -rf `ls -dt {{ $app_dir }}/releases/* | tail -n +4`\n@endtask\n\n@task('set_permission_folder')\n    echo \"Set permission folder\"\n    cd {{ $app_dir }}\n    sudo chgrp -R www-data storage public\n    sudo chmod -R ug+rwx storage public\n\n    cd {{ $app_dir }}/current\n    sudo chgrp -R www-data bootstrap/cache\n    sudo chmod -R ug+rwx bootstrap/cache\n@endtask\n\n\n@finished\n    @slack('https://hooks.slack.com/services/(Kode)', '#gitlab-activities', \"Deployed {$server}\")\n@endfinished\n\n@task('say_finished')\n    echo \"Finished...\"\n@endtask\n\n\n\n{{--\n\ncreate .env\ncreate folder storage\ncreate folder public/images\n\nHow to run : \nif staging\nenvoy run deploy --server=staging\n\nif production\nenvoy run deploy --server=production\n\n--}}\n        </code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Laravel</span>\n            <span class=\"badge\">#Envoy</span>\n            <span class=\"badge\">#Deployment</span>\n            <span class=\"badge\">#DevOps</span>\n            <span class=\"badge\">#Automation</span>\n        </div>\n    </div>\n</article>", "url": "/posts/laravel-envoy-deployment-configuration.html", "tags": "laravel, envoy, deployment, devops, automation"}, {"title": "Database Tips: Email Unique Softdeletes", "description": "Solution for handling unique email constraints with soft deletes using partial index", "content": "<article class=\"blog-post\">\n    <h1>Database Tips: Email Unique untuk Softdeletes</h1>\n    <div class=\"meta mb-4\">October 30, 2021</div>\n\n    <div class=\"content\">\n        <p>Terkadang mau bikin column email yang unique, tapi bakal jadi masalah kalau kita menggunakan softdeletes fitur.</p>\n\n        <h2>Solusi</h2>\n        <p>Solusinya dengan menggunakan partial index berikut ini:</p>\n\n        <pre><code lang=\"sql\">ALTER TABLE users ADD COLUMN email_unique varchar(512) \n    GENERATED ALWAYS AS (\n        CONCAT(email, '#', IF(deleted_at IS NULL, '-', deleted_at))\n    ) VIRTUAL;\n\nCREATE UNIQUE INDEX email_unique ON users (email_unique);</code></pre>\n\n        <h2>Referensi</h2>\n        <ul>\n            <li><a href=\"https://www.itsolutionstuff.com/post/laravel-unique-validation-with-soft-delete-exampleexample.html\" target=\"_blank\">Laravel Unique Validation with Soft Delete Example</a></li>\n            <li><a href=\"https://twitter.com/tobias_petry/status/1454085321180819457/photo/1\" target=\"_blank\">Original Twitter Thread by Tobias Petry</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Database</span>\n            <span class=\"badge\">#MySQL</span>\n            <span class=\"badge\">#Laravel</span>\n            <span class=\"badge\">#Tips</span>\n            <span class=\"badge\">#SoftDeletes</span>\n        </div>\n    </div>\n</article>", "url": "/posts/database-tips-email-unique-softdeletes.html", "tags": "database, mysql, laravel, tips, softdeletes"}, {"title": "Intercept Traffic Android Apps", "description": "", "content": "<article class=\"blog-post\">\n    <h1>Intercept Traffic Android Apps with Memu, Http Toolkit, & ADB</h1>\n    <div class=\"meta mb-4\">October 17, 2024</div>\n\n    <div class=\"content\">\n        <p>Dalam pengembangan aplikasi, terkadang kita ingin debugging semua traffic network di aplikasi mobile. Kita dapat melihat semua itu dengan melakukan intercept pada traffic tersebut.</p>\n\n        <h2>Steps</h2>\n        <ol>\n            <li>Download <a href=\"https://www.memuplay.com/\" target=\"_blank\">Memu emulator Android</a></li>\n            <li>Download <a href=\"https://httptoolkit.tech/\" target=\"_blank\">HTTP Toolkit</a></li>\n            <li>Download aplikasi Android HTTP Toolkit di Memu</li>\n            <li>Download adb toolkit – Download the Android SDK Platform Tools ZIP file for Windows</li>\n            <li>Buka Terminal</li>\n            <li>Masuk ke folder toolkit adb</li>\n            <li>Running program adb</li>\n            <li>Konek ke Memu dengan menjalankan perintah berikut:\n                <pre><code>./adb connect localhost:21503</code></pre>\n            </li>\n            <li>Jika berhasil, kembali ke HTTP Toolkit. Terhubunglah ke Memu dari HTTP Toolkit dengan menggunakan menu android device yang terhubung melalui ADB.</li>\n        </ol>\n\n        <h2>Referensi</h2>\n        <ul>\n            <li><a href=\"https://www.xda-developers.com/install-adb-windows-macos-linux/\" target=\"_blank\">XDA - Install ADB on Windows, macOS & Linux</a></li>\n            <li><a href=\"https://docs.genymotion.com/desktop/latest/03_Virtual_devices.html#managing-virtual-devices\" target=\"_blank\">Genymotion Docs - Managing Virtual Devices</a></li>\n            <li><a href=\"https://support.genymotion.com/hc/en-us/articles/360002738297-How-to-connect-to-a-Genymotion-Desktop-virtual-device-remotely-with-ADB-\" target=\"_blank\">Genymotion Support - Connect to Virtual Device with ADB</a></li>\n        </ul>\n    </div>\n</article>", "url": "/posts/intercept-traffic-android-apps.html", "tags": "android"}, {"title": "Jalanin MongoDB di local menggunakan Docker", "description": "Cara mudah menjalankan MongoDB di local environment dengan Docker", "content": "<article class=\"blog-post\">\n    <h1>Jalanin MongoDB di local menggunakan Docker</h1>\n    <div class=\"meta mb-4\">January 20, 2022</div>\n\n    <div class=\"content\">\n        <h2>Menjalankan MongoDB Container</h2>\n        <p>Gunakan perintah Docker berikut untuk menjalankan MongoDB:</p>\n        <pre><code lang=\"bash\">docker run -d -p 27017-27019:27017-27019 --name mongodb mongo:latest</code></pre>\n\n        <h2>Penjelasan Command</h2>\n        <ul>\n            <li>-d: run container in detached mode</li>\n            <li>-p: port mapping (host:container)</li>\n            <li>--name: nama container</li>\n            <li>mongo:latest: image yang digunakan</li>\n        </ul>\n\n        <h2>MongoDB Client</h2>\n        <p>Untuk mengelola database MongoDB, anda bisa menggunakan MongoDB GUI client:</p>\n        <ul>\n            <li><a href=\"https://robomongo.org/\" target=\"_blank\">Robo 3T (Robomongo)</a></li>\n        </ul>\n\n        <h2>Default Connection</h2>\n        <ul>\n            <li>Host: localhost</li>\n            <li>Port: 27017</li>\n            <li>No authentication required (default)</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#MongoDB</span>\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#Database</span>\n            <span class=\"badge\">#Development</span>\n        </div>\n    </div>\n</article>", "url": "/posts/jalanin-mongodb-di-local-menggunakan-docker.html", "tags": "mongodb, docker, database, development"}, {"title": "Centralized Log Menggunakan ELK Stack", "description": "Complete guide to setup centralized logging using Elasticsearch, Logstash, and Kibana (ELK Stack)", "content": "<article class=\"blog-post\">\n    <h1>Centralized Log Menggunakan ELK Stack</h1>\n    <div class=\"meta mb-4\">November 27, 2021</div>\n\n    <div class=\"content\">\n        <h2>Initial Setup</h2>\n        <pre><code>sudo apt update\nsudo apt upgrade -y \nsudo apt install htop git nginx curl unzip zip exif -y\nsudo apt install libmcrypt-dev libjpeg-dev libpng-dev libjpeg-dev libfreetype6-dev libbz2-dev libzip-dev -y</code></pre>\n\n        <h2>Installing Java</h2>\n        <pre><code>sudo apt-get install default-jre\njava -version</code></pre>\n\n        <h2>Setup Elasticsearch</h2>\n        <pre><code>curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\necho \"deb https://artifacts.elastic.co/packages/7.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list\nsudo apt update\nsudo apt install elasticsearch</code></pre>\n\n        <p>Edit Elasticsearch configuration:</p>\n        <pre><code>sudo vim /etc/elasticsearch/elasticsearch.yml</code></pre>\n\n        <p>Set network host to:</p>\n        <pre><code>network.host: localhost</code></pre>\n\n        <p>Start Elasticsearch:</p>\n        <pre><code>sudo systemctl start elasticsearch\nsudo systemctl enable elasticsearch</code></pre>\n\n        <h2>Verify Elasticsearch</h2>\n        <pre><code>sudo lsof -i -P -n | grep LISTEN | grep 9200\ncurl -XGET 'http://localhost:9200/_all/_search?q=*&pretty'\ncurl -X GET \"localhost:9200\"</code></pre>\n\n        <h2>Install Kibana</h2>\n        <pre><code>sudo apt install kibana\nsudo systemctl enable kibana\nsudo systemctl start kibana</code></pre>\n\n        <p>Verify Kibana:</p>\n        <pre><code>sudo lsof -i -P -n | grep LISTEN | grep 5601</code></pre>\n\n        <h2>Configure Nginx</h2>\n        <pre><code>sudo vim /etc/nginx/sites-available/logs.skul.id</code></pre>\n\n        <p>Add configuration:</p>\n        <pre><code>server {\n    listen 80;\n    server_name your_domain;\n    auth_basic \"Restricted Access\";\n    auth_basic_user_file /etc/nginx/htpasswd.users;\n\n    location / {\n        proxy_pass http://localhost:5601;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n}</code></pre>\n\n        <p>Enable site configuration:</p>\n        <pre><code>sudo ln -s /etc/nginx/sites-available/your_domain /etc/nginx/sites-enabled/your_domain\nsudo nginx -t\nsudo systemctl reload nginx</code></pre>\n\n        <h2>Install Logstash</h2>\n        <pre><code>sudo apt install logstash\nsudo systemctl start logstash\nsudo systemctl enable logstash</code></pre>\n\n        <h2>Install Filebeat</h2>\n        <pre><code>sudo apt install filebeat\nsudo vim /etc/filebeat/filebeat.yml</code></pre>\n\n        <p>References:</p>\n        <ul>\n            <li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elastic-stack-on-ubuntu-20-04\">DigitalOcean - Install ELK Stack on Ubuntu 20.04</a></li>\n            <li><a href=\"https://serverfault.com/questions/730622/how-to-format-log-data-before-forwarding-them-as-json-to-elasticsearch\">Format Log Data as JSON for Elasticsearch</a></li>\n            <li><a href=\"https://flareapp.io/blog/30-how-we-use-elasticsearch-kibana-and-filebeat-to-handle-our-logs\">How to Use ELK Stack for Log Handling</a></li>\n            <li><a href=\"https://devconnected.com/monitoring-linux-logs-with-kibana-and-rsyslog\">Monitoring Linux Logs with Kibana and Rsyslog</a></li>\n            <li><a href=\"https://www.youtube.com/watch?v=dtLBKIBxvTM\">Youtube</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#ELK</span>\n            <span class=\"badge\">#Elasticsearch</span>\n            <span class=\"badge\">#Logstash</span>\n            <span class=\"badge\">#Kibana</span>\n        </div>\n    </div>\n</article>", "url": "/posts/centralized-log-menggunakan-elk-stack.html", "tags": "elk, elasticsearch, logstash, kibana"}, {"title": "Migrasi Folder Antar Komputer", "description": "Tools for transferring folders between computers using AirDrop and Syncthing", "content": "<article class=\"blog-post\">\n    <h1>Migrasi Folder Antar Komputer</h1>\n    <div class=\"meta mb-4\">November 18, 2021</div>\n\n    <div class=\"content\">\n        <p>Tools for transferring folders between computers:</p>\n\n        <ul>\n            <li>AirDrop - Built-in file sharing for Apple devices</li>\n            <li><a href=\"https://syncthing.net/\">Syncthing</a> - Open source continuous file synchronization</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Transfer</span>\n            <span class=\"badge\">#AirDrop</span>\n            <span class=\"badge\">#Syncthing</span>\n            <span class=\"badge\">#FileSharing</span>\n        </div>\n    </div>\n</article>", "url": "/posts/migrasi-folder-antar-komputer.html", "tags": "transfer, airdrop, syncthing, file-sharing"}, {"title": "Understanding Prompt Design Methods and Parameters", "description": "Learn about zero-shot, one-shot, and few-shot prompting techniques in AI", "content": "<article class=\"blog-post\">\n    <h1>Understanding Prompt Design Methods and Parameters Vertext AI GCP</h1>\n    <div class=\"meta mb-4\">June 10, 2025</div>\n\n    <div class=\"content\">\n        <h2>Core Prompt Design Methods</h2>\n        <ol>\n            <li>Zero-shot prompting</li>\n            <li>One-shot prompting</li>\n            <li>Few-shot prompting</li>\n        </ol>\n\n        <h2>Detailed Explanation</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Method</th>\n                    <th>Description</th>\n                    <th>Example Use Case</th>\n                </tr>\n                <tr>\n                    <td>Zero-shot</td>\n                    <td>Direct task description without examples</td>\n                    <td>Simple question answering</td>\n                </tr>\n                <tr>\n                    <td>One-shot</td>\n                    <td>Single example with task description</td>\n                    <td>Poetry generation</td>\n                </tr>\n                <tr>\n                    <td>Few-shot</td>\n                    <td>Multiple examples with task description</td>\n                    <td>News article writing</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Key Parameters</h2>\n        <ul>\n            <li>Temperature (0-2 range)\n                <ul>\n                    <li>0: Most predictable output</li>\n                    <li>1: Default balanced setting</li>\n                    <li>2: Maximum creativity</li>\n                </ul>\n            </li>\n            <li>Token Limit\n                <ul>\n                    <li>Controls output length</li>\n                    <li>~4 characters per token</li>\n                    <li>Adjustable based on needs</li>\n                </ul>\n            </li>\n        </ul>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Match method to task complexity</li>\n            <li>Use lower temperature for factual responses</li>\n            <li>Increase temperature for creative tasks</li>\n            <li>Monitor token usage for efficiency</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#AI</span>\n            <span class=\"badge\">#Prompts</span>\n            <span class=\"badge\">#LLM</span>\n            <span class=\"badge\">#VertexAI</span>\n        </div>\n    </div>\n</article>", "url": "/posts/understanding-prompt-design-methods-and-parameters.html", "tags": "ai, prompts, llm, vertex-ai"}, {"title": "Update Terkini: Wilayah Banjir Jakarta Januari 2025", "description": "Data lengkap wilayah rawan banjir dan update terkini kondisi banjir Jakarta per 29 Januari 2025", "content": "<article class=\"blog-post\">\n    <h1>Wilayah Rawan Banjir Jakarta dan Update Terkini (29 Januari 2025)</h1>\n    <div class=\"meta mb-4\">January 29, 2025</div>\n\n    <div class=\"content\">\n        <h2>Pemetaan Wilayah Rawan Banjir (2023-2025)</h2>\n        <table class=\"table table-bordered mt-4\">\n            <thead>\n                <tr>\n                    <th>Wilayah</th>\n                    <th>Kecamatan</th>\n                    <th>Kelurahan</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td rowspan=\"4\">Jakarta Barat</td>\n                    <td>Kalideres</td>\n                    <td>Tegal Alur</td>\n                </tr>\n                <tr>\n                    <td>Cengkareng</td>\n                    <td>Rawa Buaya</td>\n                </tr>\n                <tr>\n                    <td>Kebon Jeruk</td>\n                    <td>Kedoya Selatan, Kedoya Utara</td>\n                </tr>\n                <tr>\n                    <td>Kembangan</td>\n                    <td>Kembangan Utara</td>\n                </tr>\n                <tr>\n                    <td rowspan=\"3\">Jakarta Selatan</td>\n                    <td>Kebayoran Baru</td>\n                    <td>Cipete Utara, Petogogan</td>\n                </tr>\n                <tr>\n                    <td>Kebayoran Lama</td>\n                    <td>Cipulir, Ulujami</td>\n                </tr>\n                <tr>\n                    <td>Pesanggrahan</td>\n                    <td>Pondok Pinang</td>\n                </tr>\n                <tr>\n                    <td rowspan=\"2\">Jakarta Timur</td>\n                    <td>Jatinegara</td>\n                    <td>Bidara Cina, Kampung Melayu</td>\n                </tr>\n                <tr>\n                    <td>Kramat Jati</td>\n                    <td>Cawang, Cililitan</td>\n                </tr>\n                <tr>\n                    <td rowspan=\"3\">Jakarta Utara</td>\n                    <td>Penjaringan</td>\n                    <td>Pluit</td>\n                </tr>\n                <tr>\n                    <td>Pademangan</td>\n                    <td>Pademangan Barat</td>\n                </tr>\n                <tr>\n                    <td>Cilincing</td>\n                    <td>Rorotan</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <h2>Update Banjir Terkini (29 Januari 2025)</h2>\n        <p>Berdasarkan laporan BPBD DKI Jakarta, hujan deras pada Selasa (28/1/2025) hingga Rabu dini hari (29/1/2025) telah menyebabkan banjir di 54 RT dan 23 ruas jalan di Jakarta.</p>\n\n        <h3>Rangkuman Wilayah Terdampak</h3>\n        <table class=\"table table-bordered mt-4\">\n            <thead>\n                <tr>\n                    <th>Wilayah</th>\n                    <th>Jumlah RT</th>\n                    <th>Ketinggian Air</th>\n                    <th>Penyebab</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Jakarta Barat</td>\n                    <td>29 RT</td>\n                    <td>30-100 cm</td>\n                    <td>Curah hujan tinggi</td>\n                </tr>\n                <tr>\n                    <td>Jakarta Pusat</td>\n                    <td>1 RT</td>\n                    <td>40 cm</td>\n                    <td>Curah hujan tinggi</td>\n                </tr>\n                <tr>\n                    <td>Jakarta Selatan</td>\n                    <td>4 RT</td>\n                    <td>75-85 cm</td>\n                    <td>Curah hujan tinggi</td>\n                </tr>\n                <tr>\n                    <td>Jakarta Timur</td>\n                    <td>20 RT</td>\n                    <td>30-45 cm</td>\n                    <td>Curah hujan tinggi</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <h3>Ruas Jalan Tergenang</h3>\n        <h4>Jakarta Utara</h4>\n        <table class=\"table table-bordered mt-4\">\n            <thead>\n                <tr>\n                    <th>Lokasi</th>\n                    <th>Ketinggian Air</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Jl. Mangga, Tugu Utara, Koja</td>\n                    <td>30 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Mangga Ujung, Tugu Utara, Koja</td>\n                    <td>15 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Komp. Uka, Tugu Utara, Koja</td>\n                    <td>15 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Bhayangkara, Tugu Utara, Koja</td>\n                    <td>15 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Camar, Tugu Utara, Koja</td>\n                    <td>10 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Pluit Dalam, Penjaringan</td>\n                    <td>25 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Kramat Jaya Raya, Tugu Utara, Koja</td>\n                    <td>15 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Boulevard Utara, Kelapa Gading Timur</td>\n                    <td>10 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Pegangsaan Dua (Greenhill), Kelapa Gading</td>\n                    <td>30 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Kelapa Hybrida Raya, Pegangsaan Dua</td>\n                    <td>40 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Boulevard Barat Raya, Kelapa Gading Barat</td>\n                    <td>20 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Kalibaru Barat 1, Kali Baru, Cilincing</td>\n                    <td>20 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. R.E. Martadinata (samping rel Terminal Tanjung Priok)</td>\n                    <td>20 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Raya Sulawesi, Tanjung Priok</td>\n                    <td>10 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Boulevard Raya, Kelapa Gading Timur</td>\n                    <td>25 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Muara Baru (Depan Pluit Selatan View), Penjaringan</td>\n                    <td>30 cm</td>\n                </tr>\n                <tr>\n                    <td>Pelabuhan Nizam Zachman, Penjaringan</td>\n                    <td>20 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Kelapa Nias Raya, Kelapa Gading Barat</td>\n                    <td>25 cm</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <h4>Jakarta Barat</h4>\n        <table class=\"table table-bordered mt-4\">\n            <thead>\n                <tr>\n                    <th>Lokasi</th>\n                    <th>Ketinggian Air</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Jl. Kamal Raya, Cengkareng Barat</td>\n                    <td>25 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Perumahan Green Garden, Kedoya Utara</td>\n                    <td>20 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Strategi Raya, Joglo, Kembangan</td>\n                    <td>30 cm</td>\n                </tr>\n                <tr>\n                    <td>Jl. Perumahan Green Garden RW 04 (McDonalds), Kedoya Utara</td>\n                    <td>30 cm</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <h4>Jakarta Pusat</h4>\n        <table class=\"table table-bordered mt-4\">\n            <thead>\n                <tr>\n                    <th>Lokasi</th>\n                    <th>Ketinggian Air</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Jl. K.H. Hasyim Ashari, Cideng, Gambir</td>\n                    <td>30 cm</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div class=\"alert alert-warning mt-4\">\n            <p><strong>Peringatan:</strong> Data ini merupakan situasi per 29 Januari 2025 dini hari. Kondisi dapat berubah sewaktu-waktu sesuai dengan intensitas curah hujan.</p>\n        </div>\n\n        <h2>Referensi</h2>\n        <ul>\n            <li><a href=\"https://bpbd.jakarta.go.id\" target=\"_blank\">BPBD DKI Jakarta</a></li>\n            <li><a href=\"https://data.jakarta.go.id\" target=\"_blank\">Portal Data Jakarta</a></li>\n            <li><a href=\"https://www.cnbcindonesia.com/research/20250129145151-128-606467/banjir-jakarta-hantam-54-rt-dan-23-ruas-jalan-ini-penyebabnya?utm_source=chatgpt.com\">CNBC</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Jakarta</span>\n            <span class=\"badge\">#Banjir</span>\n            <span class=\"badge\">#Update</span>\n            <span class=\"badge\">#BPBD</span>\n            <span class=\"badge\">#Info</span>\n        </div>\n    </div>\n</article>", "url": "/posts/update-terkini-wilayah-banjir-jakarta-januari-2025.html", "tags": "jakarta, banjir, kecamatan, pemetaan, info"}, {"title": "Using Blade Formatter", "description": "Learn how to maintain consistent code style in Laravel Blade templates using blade-formatter", "content": "<article class=\"blog-post\">\n    <h1>Using Blade Formatter to Automatically Format All Blade Files</h1>\n    <div class=\"meta mb-4\">October 30, 2021</div>\n\n    <div class=\"content\">\n        <p>Blade-formatter adalah alat yang digunakan untuk memformat template Blade, templating yang digunakan dalam framework PHP Laravel. Ini dirancang untuk membantu supaya para developer menjaga gaya yang konsisten di template Blade mereka.</p>\n\n        <p>Untuk menggunakan blade-formatter, Anda harus menginstallnya melalui composer, package manager untuk PHP. Setelah terinstall, Anda dapat menjalankannya dari command line dengan menentukan path ke template Blade Anda.</p>\n\n        <p>Secara keseluruhan, blade-formatter adalah alat yang berharga bagi setiap developer yang bekerja dengan template Blade. Ini membantu untuk memastikan bahwa template Anda terformat dengan baik dan bebas dari kesalahan sintaksis, menghemat waktu dan usaha dalam jangka panjang.</p>\n\n        <h2>Resources</h2>\n        <p>Check the package: <a href=\"https://github.com/shufo/blade-formatter?utm=github\" target=\"_blank\">blade-formatter on GitHub</a></p>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Laravel</span>\n            <span class=\"badge\">#Blade</span>\n            <span class=\"badge\">#PHP</span>\n            <span class=\"badge\">#Tools</span>\n            <span class=\"badge\">#Formatting</span>\n        </div>\n    </div>\n</article>", "url": "/posts/using-blade-formatter.html", "tags": "laravel, blade, formatting, tools, php"}, {"title": "Compress Directory with Tar", "description": "Guide to compressing and extracting files using tar command", "content": "<article class=\"blog-post\">\n    <h1>Compress Directory with Tar</h1>\n    <div class=\"meta mb-4\">February 4, 2024</div>\n\n    <div class=\"content\">\n        <h2>Compression</h2>\n        <pre><code lang=\"bash\">tar -czvf name-of-archive.tar.gz /path/to/directory-or-file</code></pre>\n\n        <h2>Options Explained</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Option</th>\n                    <th>Description</th>\n                </tr>\n                <tr>\n                    <td><code>-c</code></td>\n                    <td>Create an archive</td>\n                </tr>\n                <tr>\n                    <td><code>-z</code></td>\n                    <td>Compress the archive with gzip</td>\n                </tr>\n                <tr>\n                    <td><code>-v</code></td>\n                    <td>Display progress in terminal (verbose mode)</td>\n                </tr>\n                <tr>\n                    <td><code>-f</code></td>\n                    <td>Specify the filename of the archive</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Extraction</h2>\n        <pre><code lang=\"bash\">tar -xzvf archive.tar.gz</code></pre>\n\n        <h2>Common Use Cases</h2>\n        <pre><code lang=\"bash\"># Compress multiple directories\ntar -czvf backup.tar.gz dir1 dir2 dir3\n\n# Compress excluding certain files\ntar -czvf archive.tar.gz --exclude='*.log' directory/\n\n# Extract to specific directory\ntar -xzvf archive.tar.gz -C /target/directory/\n\n# List contents without extracting\ntar -tvf archive.tar.gz</code></pre>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Use meaningful archive names</li>\n            <li>Include date in backup archives</li>\n            <li>Verify archive contents after creation</li>\n            <li>Check available disk space before compression</li>\n            <li>Use verbose mode for better tracking</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Linux</span>\n            <span class=\"badge\">#CLI</span>\n            <span class=\"badge\">#Compression</span>\n            <span class=\"badge\">#Tar</span>\n        </div>\n    </div>\n</article>", "url": "/posts/compress-directory-with-tar.html", "tags": "linux, cli, compression, tar"}, {"title": "Polymorph Type Int", "description": "Learn why and how to use integer types for polymorphic relationships in Laravel for better database performance", "content": "<article class=\"blog-post\">\n    <h1>Polymorph Type Using Int in Laravel</h1>\n    <div class=\"meta mb-4\">November 4, 2021</div>\n\n    \n    <div class=\"content\">\n        <img src=\"../../assets/images/FDR-ODWXMA0MA5L.jpeg\" alt=\"\">\n        <p>When using polymorphic relationships in Laravel, the type column is typically stored as a string.</p>\n\n        <p>However, using string types for indexing can reduce database performance significantly.</p>\n\n        <p>As shown in this <a href=\"https://x.com/aarondfrancis/status/1455927554607570953\" target=\"_blank\">Twitter thread</a>, using integers instead of strings for polymorphic types can improve query performance.</p>\n\n        <p>To implement this, you can map your models to integers in your migrations:</p>\n\n        <pre><code>public function up()\n{\n    Schema::create('taggables', function (Blueprint $table) {\n        $table->id();\n        $table->unsignedBigInteger('taggable_id');\n        $table->unsignedTinyInteger('taggable_type'); // Using int instead of string\n        $table->timestamps();\n    });\n}</code></pre>\n\n        <p>And in your model, you can define the mapping:</p>\n\n        <pre><code>protected function getMorphClass()\n{\n    return array_search(static::class, [\n        1 => Post::class,\n        2 => Video::class,\n        3 => Photo::class\n    ]);\n}</code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Laravel</span>\n            <span class=\"badge\">#Database</span>\n            <span class=\"badge\">#Performance</span>\n            <span class=\"badge\">#Polymorphic</span>\n        </div>\n    </div>\n</article>", "url": "/posts/polymorph-type-int.html", "tags": "laravel, database, performance, polymorphic"}, {"title": "Working with Timezones using Carbon in PHP", "description": "A comprehensive guide to handling timezone conversions with Carbon in PHP applications", "content": "<article class=\"blog-post\">\n    <h1>Working with Timezones using Carbon in PHP</h1>\n    <div class=\"meta mb-4\">Maret 11, 2025</div>\n\n    <div class=\"content\">\n\n        <p>Handling dates and times across different timezones is a common challenge in web applications. Carbon, the popular PHP datetime library, provides elegant solutions for working with timezones, especially when converting between local time and UTC.</p>\n\n        <h2>Why Convert to UTC?</h2>\n        <p>UTC (Coordinated Universal Time) serves as the global standard for time reference. Converting to UTC for storage and manipulation offers several benefits:</p>\n        <ul>\n            <li>Consistent storage format across application</li>\n            <li>Eliminates ambiguity with daylight saving time transitions</li>\n            <li>Simplifies comparison between dates from different timezones</li>\n            <li>Provides a foundation for accurate timezone conversions when displaying to users</li>\n        </ul>\n\n        <h2>Converting Local Time to UTC</h2>\n        <p>Carbon makes it straightforward to convert times between timezones. Here's how to convert local time to UTC:</p>\n        <pre><code>use Carbon\\Carbon;\n\n// Get today in local timezone and convert to UTC\n$startDate = Carbon::today(getTimezoneLocal())->startOfDay()->setTimezone('UTC');\n$endDate = Carbon::today(getTimezoneLocal())->endOfDay()->setTimezone('UTC');\n\necho $startDate->toDateTimeString(); // e.g., '2023-11-14 18:00:00' (if local is UTC-6)\necho $endDate->toDateTimeString();   // e.g., '2023-11-15 17:59:59' (if local is UTC-6)</code></pre>\n\n        <h2>Working with Date Ranges</h2>\n        <p>When processing date ranges, it's common to convert user input dates to UTC for database queries:</p>\n        <pre><code>// Convert input dates to UTC for consistent database queries\n$fromDate = Carbon::parse($fromDate, getTimezoneLocal())->startOfDay()->setTimezone('UTC')->format('Y-m-d');\n$toDate = Carbon::parse($toDate, getTimezoneLocal())->startOfDay()->setTimezone('UTC')->format('Y-m-d');</code></pre>\n\n        <h2>Helper Function for Local Timezone</h2>\n        <p>In the examples above, we used a function called <code>getTimezoneLocal()</code>. Here's a simple implementation:</p>\n        <pre><code>function getTimezoneLocal() {\n    // Return user's timezone or application default\n    return auth()->user()->timezone ?? config('app.timezone', 'UTC');\n}</code></pre>\n\n        <h2>Common Timezone Pitfalls</h2>\n        <p>Be aware of these common issues when working with timezones:</p>\n        <ul>\n            <li><strong>Date boundaries:</strong> The start and end of a day will shift when converted to UTC</li>\n            <li><strong>DST transitions:</strong> Some local days might be 23 or 25 hours long during DST changes</li>\n            <li><strong>Display vs. Storage:</strong> Always store in UTC, but display in the user's local timezone</li>\n        </ul>\n\n        <h2>Best Practices</h2>\n        <p>Follow these guidelines for robust timezone handling:</p>\n        <ol>\n            <li>Store all dates in UTC in your database</li>\n            <li>Convert to UTC early in your application flow</li>\n            <li>Convert back to local timezone only for display purposes</li>\n            <li>Always specify the source timezone when parsing user input</li>\n            <li>Use <code>->toIso8601String()</code> for API responses</li>\n        </ol>\n\n        <p>By leveraging Carbon's timezone capabilities correctly, you can avoid common timezone-related bugs and ensure your application handles dates consistently across different regions.</p>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#PHP</span>\n            <span class=\"badge\">#Carbon</span>\n            <span class=\"badge\">#Laravel</span>\n            <span class=\"badge\">#Timezone</span>\n            <span class=\"badge\">#UTC</span>\n        </div>\n    </div>\n</article>", "url": "/posts/working-with-timezones-using-carbon-in-php.html", "tags": "php, carbon, laravel, timezone, utc"}, {"title": "Creating Sequences in PostgreSQL", "description": "How to create and manage sequences in existing PostgreSQL tables", "content": "<article class=\"blog-post\">\n    <h1>Creating Sequences in PostgreSQL</h1>\n    <div class=\"meta mb-4\">April 15, 2025</div>\n\n    <div class=\"content\">\n        <h2>What are Sequences in PostgreSQL?</h2>\n        <p>Sequences in PostgreSQL are special database objects designed to generate unique numeric identifiers automatically. They're commonly used for primary key columns to ensure each row has a unique identifier.</p>\n\n        <h2>Adding a Sequence to an Existing Table</h2>\n        <p>Sometimes you may need to add a sequence to a table that was created without one. Here's how to do it:</p>\n\n        <div class=\"code-block\">\n            <pre><code class=\"language-sql\">-- Step 1: Create the sequence\nCREATE SEQUENCE IF NOT EXISTS objects_id_object_seq;\n\n-- Step 2: Set the sequence value to the current maximum ID\nSELECT setval('objects_id_object_seq', (SELECT max(id_object) FROM objects));\n\n-- Step 3: Alter the table to use the sequence as default\nALTER TABLE objects ALTER COLUMN id_object SET DEFAULT nextval('objects_id_object_seq');</code></pre>\n        </div>\n\n        <h2>Understanding Each Step</h2>\n        <ol>\n            <li><strong>Creating the sequence</strong>: The <code>IF NOT EXISTS</code> clause prevents errors if the sequence already exists (available in PostgreSQL 9.5+).</li>\n            <li><strong>Setting the initial value</strong>: The <code>setval</code> function sets the sequence's current value to match the highest existing ID in the table.</li>\n            <li><strong>Linking to the table</strong>: The final step configures the column to automatically use the sequence for new rows.</li>\n        </ol>\n\n        <h2>Common Sequence Operations</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Operation</th>\n                    <th>Command</th>\n                    <th>Description</th>\n                </tr>\n                <tr>\n                    <td>Create sequence</td>\n                    <td><code>CREATE SEQUENCE name</code></td>\n                    <td>Creates a new sequence</td>\n                </tr>\n                <tr>\n                    <td>Get next value</td>\n                    <td><code>nextval('sequence_name')</code></td>\n                    <td>Returns the next value from the sequence</td>\n                </tr>\n                <tr>\n                    <td>Get current value</td>\n                    <td><code>currval('sequence_name')</code></td>\n                    <td>Returns the most recently obtained value</td>\n                </tr>\n                <tr>\n                    <td>Set sequence value</td>\n                    <td><code>setval('sequence_name', value)</code></td>\n                    <td>Sets the current value of the sequence</td>\n                </tr>\n                <tr>\n                    <td>Drop sequence</td>\n                    <td><code>DROP SEQUENCE sequence_name</code></td>\n                    <td>Removes the sequence</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Name sequences consistently (table_column_seq is a common pattern)</li>\n            <li>Always check existing maximum values when adding sequences to tables with data</li>\n            <li>Consider using SERIAL or BIGSERIAL data types for new tables (they create sequences automatically)</li>\n            <li>In PostgreSQL 10+, consider using identity columns instead of sequences</li>\n        </ul>\n\n        <h2>Learn More</h2>\n        <p>For more detailed information, visit the <a href=\"https://www.postgresql.org/docs/current/sql-createsequence.html\" target=\"_blank\">PostgreSQL documentation on CREATE SEQUENCE</a>.</p>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#PostgreSQL</span>\n            <span class=\"badge\">#Database</span>\n            <span class=\"badge\">#SQL</span>\n            <span class=\"badge\">#Sequences</span>\n            <span class=\"badge\">#AIGenerated</span>\n        </div>\n    </div>\n</article>", "url": "/posts/creating-sequences-in-postgresql.html", "tags": "postgresql, database, sequences, sql, ai-generated"}, {"title": "PHP Versioning di Macbook", "description": "Guide to manage multiple PHP versions on MacOS using ASDF and PHPBrew", "content": "<article class=\"blog-post\">\n    <h1>PHP Versioning di Macbook</h1>\n    <div class=\"meta mb-4\">November 17, 2021</div>\n\n    <div class=\"content\">\n        <p>There are two main tools to manage PHP versions on MacOS:</p>\n\n        <h2>1. ASDF Version Manager</h2>\n        <p>ASDF allows managing multiple language versions including PHP. Follow the installation guide at:</p>\n        <ul>\n            <li><a href=\"https://timnash.co.uk/installing-php-and-other-languages-with-asdf-on-macos-catalina/\">Installing PHP with ASDF on MacOS Catalina</a></li>\n        </ul>\n\n        <h2>2. PHPBrew</h2>\n        <p>PHPBrew is specifically designed for PHP version management. Installation guide available at:</p>\n        <ul>\n            <li><a href=\"https://phpbrew.github.io/phpbrew/\">PHPBrew Official Documentation</a></li>\n        </ul>\n\n        <h2>Apache Configuration</h2>\n        <p>For Apache setup with multiple PHP versions, refer to:</p>\n        <ul>\n            <li><a href=\"https://getgrav.org/blog/macos-monterey-apache-multiple-php-versions\">MacOS Monterey Apache Multiple PHP Versions Setup</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#PHP</span>\n            <span class=\"badge\">#Mac</span>\n            <span class=\"badge\">#ASDF</span>\n            <span class=\"badge\">#PHPBrew</span>\n        </div>\n    </div>\n</article>", "url": "/posts/php-versioning-di-macbook.html", "tags": "php, mac, asdf, phpbrew"}, {"title": "IP Anycast and Multiple IPs with Cloudflare", "description": "Learn about IP Anycast technology and how to implement multiple IPs for a single domain using Cloudflare", "content": "<article class=\"blog-post\">\n    <h1>Understanding IP Anycast and Multiple IPs for Domains</h1>\n    <div class=\"meta mb-4\">December 20, 2023</div>\n\n    <div class=\"content\">\n        <p>IP Anycast and multiple IP configurations are powerful techniques for improving website availability and performance. Let's explore how they work, especially with Cloudflare.</p>\n\n        <h2>IP Anycast</h2>\n        <p>IP Anycast is a network addressing method where multiple servers share the same IP address. Traffic is automatically routed to the nearest server, providing:</p>\n        <ul>\n            <li>Reduced latency</li>\n            <li>Better load distribution</li>\n            <li>DDoS attack mitigation</li>\n            <li>Improved reliability</li>\n        </ul>\n\n        <h2>Multiple IPs for One Domain</h2>\n        <p>You can assign multiple IP addresses to a single domain through DNS configuration:</p>\n\n        <pre><code lang=\"dns\">example.com.     IN  A     192.0.2.1\nexample.com.     IN  A     192.0.2.2\nexample.com.     IN  A     192.0.2.3</code></pre>\n\n        <h2>Implementing with Cloudflare</h2>\n        <p>Cloudflare provides Anycast IP addresses automatically when you use their services:</p>\n        <ol>\n            <li>Sign up for Cloudflare</li>\n            <li>Add your domain to Cloudflare</li>\n            <li>Update nameservers to Cloudflare's</li>\n            <li>Configure DNS records in Cloudflare dashboard</li>\n        </ol>\n\n        <h2>Benefits</h2>\n        <ul>\n            <li>Automatic failover</li>\n            <li>Global load balancing</li>\n            <li>Enhanced security</li>\n            <li>Improved performance</li>\n        </ul>\n\n        <h2>References</h2>\n        <ul>\n            <li><a href=\"https://www.cloudflare.com/learning/cdn/glossary/anycast-network/\" target=\"_blank\">Cloudflare - What is Anycast?</a></li>\n            <li><a href=\"https://www.cloudflare.com/learning/dns/dns-records/\" target=\"_blank\">DNS Records Explained</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Networking</span>\n            <span class=\"badge\">#Cloudflare</span>\n            <span class=\"badge\">#DNS</span>\n            <span class=\"badge\">#Anycast</span>\n            <span class=\"badge\">#Infrastructure</span>\n        </div>\n    </div>\n</article>", "url": "/posts/ip-anycast-and-multiple-ips-with-cloudflare.html", "tags": "networking, cloudflare, dns, anycast, infrastructure"}, {"title": "GUI Editor for OpenAPI Swagger", "description": "Overview of GUI editors for creating OpenAPI/Swagger specifications", "content": "<article class=\"blog-post\">\n    <h1>GUI Editor for OpenAPI/Swagger</h1>\n    <div class=\"meta mb-4\">October 10, 2023</div>\n\n    <div class=\"content\">\n        <p>Untuk membuat spesifikasi API ini dengan cepat dan efisien, Anda memerlukan editor GUI yang dapat memudahkan dengan baik.</p>\n\n        <h2>Rekomendasi Editor</h2>\n        <div class=\"editors-section\">\n            <h3>1. Stoplight Studio</h3>\n            <ul>\n                <li>Fitur canggih</li>\n                <li>Kolaborasi tim yang kuat</li>\n                <li>Version control integration</li>\n                <li>Real-time preview</li>\n            </ul>\n\n            <h3>2. ApiBldr</h3>\n            <ul>\n                <li>Desain minimalis</li>\n                <li>Kemudahan penggunaan</li>\n                <li>Quick setup</li>\n                <li>Intuitive interface</li>\n            </ul>\n        </div>\n\n        <h2>Fitur Utama</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Fitur</th>\n                    <th>Stoplight Studio</th>\n                    <th>ApiBldr</th>\n                </tr>\n                <tr>\n                    <td>Visual Editor</td>\n                    <td>✓</td>\n                    <td>✓</td>\n                </tr>\n                <tr>\n                    <td>Team Collaboration</td>\n                    <td>✓</td>\n                    <td>Limited</td>\n                </tr>\n                <tr>\n                    <td>Git Integration</td>\n                    <td>✓</td>\n                    <td>-</td>\n                </tr>\n                <tr>\n                    <td>Mock Servers</td>\n                    <td>✓</td>\n                    <td>✓</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Additional Resources</h2>\n        <p>Untuk melihat daftar lengkap GUI Editor lainnya, kunjungi: <a href=\"https://tools.openapis.org/categories/gui-editors.html\" target=\"_blank\">OpenAPI Tools - GUI Editors</a></p>\n\n        <h2>Tips Memilih Editor</h2>\n        <ul>\n            <li>Sesuaikan dengan kebutuhan tim</li>\n            <li>Pertimbangkan fitur kolaborasi</li>\n            <li>Cek kompatibilitas dengan workflow</li>\n            <li>Evaluasi kemudahan penggunaan</li>\n            <li>Perhatikan dukungan format ekspor</li>\n        </ul>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Gunakan version control</li>\n            <li>Dokumentasikan perubahan</li>\n            <li>Validasi spesifikasi secara regular</li>\n            <li>Backup file spesifikasi</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#OpenAPI</span>\n            <span class=\"badge\">#Swagger</span>\n            <span class=\"badge\">#API</span>\n            <span class=\"badge\">#Tools</span>\n            <span class=\"badge\">#Development</span>\n        </div>\n    </div>\n</article>", "url": "/posts/gui-editor-for-openapi-swagger.html", "tags": "openapi, swagger, api, tools, development"}, {"title": "How to Prevent macOS from Bringing All Windows to the Front When Switching to an App", "description": "Guide to managing window behavior in macOS using AltTab", "content": "<article class=\"blog-post\">\n    <h1>How to Prevent macOS from Bringing All Windows to the Front When Switching to an App</h1>\n    <div class=\"meta mb-4\">June 16, 2024</div>\n\n    <div class=\"content\">\n        <h2>The Problem</h2>\n        <p>By default, macOS brings all windows of an app to the front when you switch to that app. This behaviour can be problematic in a multi-display setup for a few reasons:</p>\n\n        <ul>\n            <li><strong>Disruption of Workflow:</strong> If you're writing on one display and using reference material on the other, switching to an app can cause your reference material to be covered by the app windows from the other display.</li>\n            <li><strong>Unnecessary Clutter:</strong> Bringing all windows to the front can create unnecessary clutter, making it harder to focus on the task at hand.</li>\n        </ul>\n\n        <p>This issue persists even if you have set your displays to have separate Spaces in macOS.</p>\n\n        <h2>The Solution: AltTab</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Feature</th>\n                    <th>Benefit</th>\n                </tr>\n                <tr>\n                    <td>Window Preview</td>\n                    <td>See all windows before switching</td>\n                </tr>\n                <tr>\n                    <td>Individual Window Control</td>\n                    <td>Switch to specific windows without affecting others</td>\n                </tr>\n                <tr>\n                    <td>Multi-Display Support</td>\n                    <td>Better handling of windows across displays</td>\n                </tr>\n                <tr>\n                    <td>Customizable Shortcuts</td>\n                    <td>Configure keyboard shortcuts to your preference</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Installation Steps</h2>\n        <ol>\n            <li>Install using Homebrew:\n                <pre><code lang=\"bash\">brew install --cask alt-tab</code></pre>\n            </li>\n            <li>Launch AltTab</li>\n            <li>Configure preferences in System Settings</li>\n            <li>Set up keyboard shortcuts</li>\n        </ol>\n\n        <h2>Additional Tips</h2>\n        <ul>\n            <li>Use Command + ` to cycle through windows of the current app</li>\n            <li>Configure display settings in System Settings > Displays</li>\n            <li>Consider using Spaces for better window organization</li>\n            <li>Explore AltTab's advanced settings for more customization</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#macOS</span>\n            <span class=\"badge\">#Productivity</span>\n            <span class=\"badge\">#Tools</span>\n            <span class=\"badge\">#WindowManagement</span>\n        </div>\n    </div>\n</article>", "url": "/posts/how-to-prevent-macos-from-bringing-all-windows-to-the-front-when-switching-to-an-app.html", "tags": "macos, productivity, tools, window-management"}, {"title": "Create Vocabulary English CLI Application with Golang", "description": "Building a CLI application to display random English words with meanings using Golang", "content": "<article class=\"blog-post\">\n    <h1>Create Vocabulary English CLI Application with Golang</h1>\n    <div class=\"meta mb-4\">April 12, 2022</div>\n\n    <div class=\"content\">\n        <img src=\"../../assets/images/Screen-Shot-2022-04-12-at-09.51.37.png\" alt=\"Vocabulary CLI Demo\" class=\"img-fluid mb-4\" />\n\n        <p>Aplikasi yang diharapkan adalah menampilkan word in english secara random bersama meaning dan examplenya setiap membuka Command Line.</p>\n\n        <h2>Tujuan</h2>\n        <p>Memperkaya kosakata bahasa English</p>\n\n        <h2>Dependencies</h2>\n        <ol>\n            <li>Framework CLI golang: <code>github.com/urfave/cli/v2</code></li>\n            <li>API Dictionary: <code>https://api.dictionaryapi.dev/api/v2/entries/en/</code></li>\n            <li>List English word: <code>github.com/bitcoinjs/bip39/blob/master/src/wordlists/english.json</code></li>\n            <li>Coloring text on Terminal: <code>github.com/fatih/color</code></li>\n        </ol>\n\n        <h2>Struktur Folder</h2>\n        <pre><code lang=\"plaintext\">/vocabulary\n├── go.mod\n├── go.sum\n├── vocabulary.go\n└── word.json</code></pre>\n\n        <h2>Implementation</h2>\n        <pre><code lang=\"go\">\n            package main\n\nimport (\n  _ \"embed\"\n  \"encoding/json\"\n  \"fmt\"\n  \"github.com/fatih/color\"\n  \"io/ioutil\"\n  \"log\"\n  \"math/rand\"\n  \"net/http\"\n  \"os\"\n  \"strings\"\n  \"time\"\n\n  \"github.com/urfave/cli/v2\"\n)\n\n// ResponseDictionary converted by https://mholt.github.io/json-to-go/\ntype ResponseDictionary []struct {\n  Word       string      `json:\"word\"`\n  Phonetic   string      `json:\"phonetic\"`\n  Phonetics  []Phonetics `json:\"phonetics\"`\n  Meanings   []Meanings  `json:\"meanings\"`\n  License    License     `json:\"license\"`\n  SourceUrls []string    `json:\"sourceUrls\"`\n}\ntype License struct {\n  Name string `json:\"name\"`\n  URL  string `json:\"url\"`\n}\ntype Phonetics struct {\n  Text      string  `json:\"text\"`\n  Audio     string  `json:\"audio\"`\n  SourceURL string  `json:\"sourceUrl,omitempty\"`\n  License   License `json:\"license,omitempty\"`\n}\ntype Definitions struct {\n  Definition string        `json:\"definition\"`\n  Synonyms   []interface{} `json:\"synonyms\"`\n  Antonyms   []interface{} `json:\"antonyms\"`\n  Example    string        `json:\"example,omitempty\"`\n}\ntype Meanings struct {\n  PartOfSpeech string        `json:\"partOfSpeech\"`\n  Definitions  []Definitions `json:\"definitions\"`\n  Synonyms     []interface{} `json:\"synonyms\"`\n  Antonyms     []interface{} `json:\"antonyms\"`\n}\n\ntype Word []string\n\n//go:embed word.json\nvar wordJson []byte\n\nfunc main() {\n  app := &cli.App{\n    Name: \"vocabulary\",\n    Usage: \"get a word today\",\n    Action: func(c *cli.Context) error {\n\n      var word Word\n      err := json.Unmarshal(wordJson, &word)\n      if err != nil {\n        return nil\n      }\n\n      rand.Seed(time.Now().UnixNano())\n      min := 0\n      max := len(word)\n      randomNumber := rand.Intn(max - min + 1) + min\n      wordToday := word[randomNumber]\n      URIBuilt := fmt.Sprintf(\"https://api.dictionaryapi.dev/api/v2/entries/en/%v\", wordToday)\n      response, err := http.Get(URIBuilt)\n\n      if err != nil {\n        fmt.Print(err.Error())\n        os.Exit(1)\n      }\n\n      responseData, err := ioutil.ReadAll(response.Body)\n\n      var responseDictionary ResponseDictionary\n      err = json.Unmarshal(responseData, &responseDictionary)\n      if err != nil {\n        log.Fatal(err)\n      }\n      color.Set(color.FgYellow)\n      fmt.Println(\"Word:\",strings.ToTitle(strings.ToLower(responseDictionary[0].Word)))\n      color.Unset()\n      fmt.Println(\"Meaning:\", responseDictionary[0].Meanings[0].Definitions[0].Definition)\n\n      if responseDictionary[0].Meanings[0].Definitions[0].Example  != \"\" {\n        fmt.Println(\"Example:\", responseDictionary[0].Meanings[0].Definitions[0].Example)\n      }\n      return nil\n    },\n  }\n\n  err := app.Run(os.Args)\n  if err != nil {\n    log.Fatal(err)\n  }\n}\n        </code></pre>\n\n        <h2>Installation</h2>\n        <pre><code lang=\"bash\">cd vocabulary\ngo install\ngo build</code></pre>\n\n        <h2>Auto-start Configuration</h2>\n        <p>Biar setiap buka Command Line otomatis jalanin aplikasi golang, buka menu preferences di terminal ZSH, isi Login Shell dengan lokasi executed golang application</p>\n        \n        <img src=\"../../assets/images/Screen-Shot-2022-04-12-at-10.03.31.png\" alt=\"ZSH Preferences Setup\" class=\"img-fluid mb-4\" />\n\n        <h2>Key Features</h2>\n        <ul>\n            <li>Random word selection</li>\n            <li>Word definitions and examples</li>\n            <li>Colored output for better readability</li>\n            <li>Auto-start capability</li>\n        </ul>\n\n        <h2>Source Code</h2>\n        <p>Full source code available on GitHub: <a href=\"https://github.com/myusufid/vocabulary-cli-golang\" target=\"_blank\">vocabulary-cli-golang</a></p>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Golang</span>\n            <span class=\"badge\">#CLI</span>\n            <span class=\"badge\">#English</span>\n            <span class=\"badge\">#Vocabulary</span>\n            <span class=\"badge\">#Tutorial</span>\n        </div>\n    </div>\n</article>", "url": "/posts/create-vocabulary-english-cli-application-with-golang.html", "tags": "golang, cli, english, vocabulary, tutorial"}, {"title": "Checking Aplikasi Mana yang Sedang Menggunakan Port", "description": "How to check which applications are using specific ports on your system", "content": "<article class=\"blog-post\">\n    <h1>Checking Aplikasi Mana yang Sedang Menggunakan Port</h1>\n    <div class=\"meta mb-4\">November 27, 2021</div>\n\n    <div class=\"content\">\n        <p>To check which application is using port 9200 (or any other port):</p>\n\n        <pre><code>sudo lsof -i -P -n | grep LISTEN | grep 9200</code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Terminal</span>\n            <span class=\"badge\">#Ports</span>\n            <span class=\"badge\">#Networking</span>\n            <span class=\"badge\">#Linux</span>\n        </div>\n    </div>\n</article>", "url": "/posts/checking-aplikasi-mana-yang-sedang-menggunakan-port.html", "tags": "terminal, ports, networking, linux"}, {"title": "How to Install Loki and Promtail use Docker", "description": "Step-by-step guide for installing Grafana Loki and Promtail using Docker", "content": "<article class=\"blog-post\">\n    <h1>How to Install Loki and Promtail use Docker</h1>\n    <div class=\"meta mb-4\">October 9, 2023</div>\n\n    <div class=\"content\">\n        <h2>Setup Configuration Directory</h2>\n        <p>Create and navigate to configuration directory:</p>\n        <pre><code lang=\"bash\">mkdir grafana_configs\ncd grafana_configs</code></pre>\n\n        <h2>Download Configuration Files</h2>\n        <p>Get Loki and Promtail configuration files:</p>\n        <pre><code lang=\"bash\">sudo wget https://raw.githubusercontent.com/grafana/loki/v2.8.0/cmd/loki/loki-local-config.yaml -O loki-config.yaml\nsudo wget https://raw.githubusercontent.com/grafana/loki/v2.8.0/clients/cmd/promtail/promtail-docker-config.yaml -O promtail-config.yaml</code></pre>\n\n        <h2>Run Loki Container</h2>\n        <p>Start Loki with mounted configuration:</p>\n        <pre><code lang=\"bash\">docker run -d --name loki \\\n    -v $(pwd):/mnt/config \\\n    -p 3100:3100 \\\n    grafana/loki:2.8.0 \\\n    --config.file=/mnt/config/loki-config.yaml</code></pre>\n\n        <h2>Run Promtail Container</h2>\n        <p>Start Promtail with mounted configuration and log access:</p>\n        <pre><code lang=\"bash\">docker run -d --name promtail \\\n    -v $(pwd):/mnt/config \\\n    -v /var/log:/var/log \\\n    --link loki \\\n    grafana/promtail:2.8.0 \\\n    --config.file=/mnt/config/promtail-config.yaml</code></pre>\n\n        <h2>Configuration Details</h2>\n        <ul>\n            <li><strong>Loki Port:</strong> 3100</li>\n            <li><strong>Version:</strong> 2.8.0</li>\n            <li><strong>Mounted Volumes:</strong>\n                <ul>\n                    <li>Configuration files: /mnt/config</li>\n                    <li>System logs: /var/log</li>\n                </ul>\n            </li>\n        </ul>\n\n        <h2>Verification Steps</h2>\n        <ol>\n            <li>Check container status:\n                <pre><code lang=\"bash\">docker ps | grep 'loki\\|promtail'</code></pre>\n            </li>\n            <li>Verify Loki is accessible:\n                <pre><code lang=\"bash\">curl http://localhost:3100/ready</code></pre>\n            </li>\n            <li>Check logs for any issues:\n                <pre><code lang=\"bash\">docker logs loki\ndocker logs promtail</code></pre>\n            </li>\n        </ol>\n\n        <h2>Next Steps</h2>\n        <ul>\n            <li>Configure Loki as a data source in Grafana</li>\n            <li>Create log dashboards</li>\n            <li>Set up log alerts</li>\n            <li>Configure retention policies</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Grafana</span>\n            <span class=\"badge\">#Loki</span>\n            <span class=\"badge\">#Promtail</span>\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#Monitoring</span>\n        </div>\n    </div>\n</article>", "url": "/posts/how-to-install-loki-and-promtail-use-docker.html", "tags": "grafana, loki, promtail, docker, monitoring"}, {"title": "Export MYSQL RDS", "description": "Guide for exporting MySQL databases using mysqldump including RDS AWS backups", "content": "<article class=\"blog-post\">\n    <h1>Export MYSQL / RDS</h1>\n    <div class=\"meta mb-4\">November 27, 2021</div>\n\n    <div class=\"content\">\n        <h2>Backup RDS MySQL AWS</h2>\n        <pre><code>mysqldump -h xxxxxxx.ap-southeast-3.rds.amazonaws.com -u adminxxxx --password=passwordxxx databasexxx --set-gtid-purged=OFF > /home/ubuntu/waikiki/backup_database_26jan2024.sql</code></pre>\n\n        <h2>Single Database Backup</h2>\n        <pre><code>mysqldump -u root -ppassword wpdb > wpdb_backup.sql</code></pre>\n\n        <h2>Multiple Database Backup</h2>\n        <pre><code>mysqldump -u root -ppassword --databases wpdb1 wpdb2 wpdb3 > wpdb_backup3.sql</code></pre>\n\n        <h2>All Database Backup</h2>\n        <pre><code>mysqldump -u root -ppassword --all-databases > alldb_backup.sql</code></pre>\n\n        <h2>Table Structure Only Backup</h2>\n        <pre><code>mysqldump -u root -ppassword --no-data wpdb > wpdb_backup.sql</code></pre>\n\n        <h2>Specific Table Backup</h2>\n        <pre><code>mysqldump -u root -ppassword --no-data wpdb wptable > wpdbtable_backup.sql</code></pre>\n\n        <p>Reference:</p>\n        <ul>\n            <li><a href=\"https://snapshooter.com/learn/mysqldump-ultimate-guide\">MySQL Dump Ultimate Guide</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#MySQL</span>\n            <span class=\"badge\">#RDS</span>\n            <span class=\"badge\">#AWS</span>\n            <span class=\"badge\">#Backup</span>\n        </div>\n    </div>\n</article>", "url": "/posts/export-mysql-rds.html", "tags": "mysql, rds, aws, backup"}, {"title": "Implementing an LRU Cache with Redis", "description": "How to implement Least Recently Used (LRU) caching policy with Redis", "content": "<article class=\"blog-post\">\n    <h1>Implementing an LRU Cache with Redis</h1>\n    <div class=\"meta mb-4\">February 18, 2022</div>\n\n    <div class=\"content\">\n        <h2>Caching Policy</h2>\n        <p>When using Redis to cache database query results, we need an efficient memory management strategy. Simply storing results indefinitely can lead to excessive RAM usage over time.</p>\n\n        <h2>LRU (Least Recently Used) Solution</h2>\n        <p>LRU caching policy provides an optimal solution by removing the least recently accessed items when memory limits are reached.</p>\n\n        <h2>Redis LRU Implementation</h2>\n        <p>Redis includes built-in LRU functionality. To enable it, configure Redis with two key parameters:</p>\n\n        <pre><code lang=\"bash\">redis-server --maxmemory 10mb --maxmemory-policy allkeys-lru</code></pre>\n\n        <h2>Configuration Parameters</h2>\n        <ul>\n            <li><strong>maxmemory</strong>: Sets memory limit (e.g., 10MB)</li>\n            <li><strong>maxmemory-policy</strong>: Defines eviction policy (allkeys-lru)</li>\n        </ul>\n\n        <h2>Available Memory Policies</h2>\n        <ul>\n            <li><strong>allkeys-lru</strong>: Evict any key using LRU</li>\n            <li><strong>volatile-lru</strong>: Evict keys with expiry using LRU</li>\n            <li><strong>allkeys-random</strong>: Evict random keys</li>\n            <li><strong>volatile-random</strong>: Evict random keys with expiry</li>\n            <li><strong>volatile-ttl</strong>: Evict keys with shortest TTL first</li>\n        </ul>\n\n        <h2>Benefits</h2>\n        <ul>\n            <li>Automatic memory management</li>\n            <li>Improved cache efficiency</li>\n            <li>Better resource utilization</li>\n            <li>No manual cache cleanup required</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Redis</span>\n            <span class=\"badge\">#Cache</span>\n            <span class=\"badge\">#LRU</span>\n            <span class=\"badge\">#Database</span>\n            <span class=\"badge\">#Performance</span>\n        </div>\n    </div>\n</article>", "url": "/posts/implementing-an-lru-cache-with-redis.html", "tags": "redis, cache, lru, database, performance"}, {"title": "Connect reconnect docker container", "description": "Guide for managing Docker container network connections", "content": "<article class=\"blog-post\">\n    <h1>Connect reconnect docker container</h1>\n    <div class=\"meta mb-4\">November 2, 2023</div>\n\n    <div class=\"content\">\n        <h2>View Container Networks</h2>\n        <p>To see what network(s) your container is connected to:</p>\n        <pre><code lang=\"bash\">docker inspect container_name -f \"{{json .NetworkSettings.Networks }}\"</code></pre>\n\n        <h2>Disconnect from Network</h2>\n        <p>To disconnect your container from a network:</p>\n        <pre><code lang=\"bash\">docker network disconnect test-net container_name</code></pre>\n\n        <h2>Connect to New Network</h2>\n        <p>To connect your container to another network:</p>\n        <pre><code lang=\"bash\">docker network connect test-net-2 container_name</code></pre>\n\n        <h2>Additional Network Commands</h2>\n        <pre><code lang=\"bash\"># List all networks\ndocker network ls\n\n# Create a new network\ndocker network create test-net-2\n\n# Inspect network details\ndocker network inspect test-net-2\n\n# Remove a network\ndocker network rm test-net</code></pre>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Always verify network connections before disconnecting</li>\n            <li>Use meaningful network names</li>\n            <li>Document network configurations</li>\n            <li>Monitor container connectivity</li>\n            <li>Use custom networks instead of default bridge</li>\n        </ul>\n\n        <h2>Common Use Cases</h2>\n        <ul>\n            <li>Migrating containers between networks</li>\n            <li>Isolating container groups</li>\n            <li>Setting up multi-tier applications</li>\n            <li>Testing network configurations</li>\n            <li>Troubleshooting connectivity issues</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#Networking</span>\n            <span class=\"badge\">#Containers</span>\n            <span class=\"badge\">#DevOps</span>\n        </div>\n    </div>\n</article>", "url": "/posts/connect-reconnect-docker-container.html", "tags": "docker, networking, containers, devops"}, {"title": "The Best Method to Copy Folders and Subfolders : Linux", "description": "Guide to efficiently copy folders and subfolders in Linux using the cp command", "content": "<article class=\"blog-post\">\n    <h1>The Best Method to Copy Folders and Subfolders : Linux</h1>\n    <div class=\"meta mb-4\">September 26, 2023</div>\n\n    <div class=\"content\">\n        <h2>Introduction</h2>\n        <p>Copying folders and subfolders in a Linux environment is a common task, especially for system administrators, developers, and anyone working with files and directories. To efficiently duplicate directory structures, you need to use the right command and options.</p>\n\n        <h2>The cp Command</h2>\n        <p>The cp command in Linux is used to copy files and directories. To copy folders and their contents, including subfolders, you should use the -r or --recursive option.</p>\n\n        <h3>Basic Syntax</h3>\n        <pre><code lang=\"bash\">cp -r source_directory destination_directory</code></pre>\n\n        <h3>Example Usage</h3>\n        <pre><code lang=\"bash\">cp -r Yusuf/. /var/www/html/web_yusuf/</code></pre>\n\n        <h2>Why Use -r Option?</h2>\n        <p>The -r option is crucial when copying folders and subfolders because it ensures that all contents within the source directory are copied, including files and nested directories.</p>\n\n        <h2>Advantages of Using -r with cp</h2>\n        <ul>\n            <li><strong>Preserves Directory Structure:</strong> Maintains the entire directory hierarchy</li>\n            <li><strong>Recursively Copies Subdirectories:</strong> Handles all nested directories automatically</li>\n            <li><strong>Efficient:</strong> Quick way to copy large directory structures</li>\n        </ul>\n\n        <h2>Example Use Cases</h2>\n        <div class=\"use-cases\">\n            <h3>Website Deployment</h3>\n            <pre><code lang=\"bash\">cp -r website/. /var/www/html/production/</code></pre>\n\n            <h3>Backup Creation</h3>\n            <pre><code lang=\"bash\">cp -r project/ project_backup_$(date +%Y%m%d)/</code></pre>\n\n            <h3>Development Environment</h3>\n            <pre><code lang=\"bash\">cp -r src/ experimental_feature/</code></pre>\n        </div>\n\n        <h2>Additional Options</h2>\n        <table class=\"table\">\n            <tr>\n                <th>Option</th>\n                <th>Description</th>\n            </tr>\n            <tr>\n                <td>-v</td>\n                <td>Verbose output</td>\n            </tr>\n            <tr>\n                <td>-p</td>\n                <td>Preserve permissions</td>\n            </tr>\n            <tr>\n                <td>-u</td>\n                <td>Update only when source is newer</td>\n            </tr>\n        </table>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Always verify the destination path before copying</li>\n            <li>Use verbose mode (-v) for important operations</li>\n            <li>Consider using -p to preserve permissions when needed</li>\n            <li>Create backups before large copy operations</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Linux</span>\n            <span class=\"badge\">#CommandLine</span>\n            <span class=\"badge\">#SystemAdmin</span>\n            <span class=\"badge\">#Tutorial</span>\n        </div>\n    </div>\n</article>", "url": "/posts/the-best-method-to-copy-folders-and-subfolders--linux.html", "tags": "linux, command-line, system-admin, tutorial"}, {"title": "The Ultimate Guide to Setting Up Your MacBook for Web Development", "description": "Comprehensive guide to configuring a MacBook for web development with essential tools and software", "content": "<article class=\"blog-post\">\n    <h1>The Ultimate Guide to Setting Up Your MacBook for Web Development</h1>\n    <div class=\"meta mb-4\">August 24, 2024</div>\n\n    <div class=\"content\">\n        <h2>1. Show Hidden Files</h2>\n        <pre><code lang=\"bash\">defaults write com.apple.Finder AppleShowAllFiles true\nkillall Finder</code></pre>\n\n        <h2>2. Package Manager</h2>\n        <pre><code lang=\"bash\">/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n\nbrew update && brew upgrade && brew cleanup && brew doctor</code></pre>\n\n        <h2>3. Terminal Setup</h2>\n        <pre><code lang=\"bash\">brew install --cask iterm2\nbrew install git\nbrew install zsh\nsh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"</code></pre>\n\n        <h2>4. Development Tools</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Category</th>\n                    <th>Tools</th>\n                </tr>\n                <tr>\n                    <td>IDEs/Editors</td>\n                    <td>\n                        <ul>\n                            <li>Visual Studio Code</li>\n                            <li>PHPStorm</li>\n                            <li>PyCharm</li>\n                            <li>Goland</li>\n                        </ul>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Database Tools</td>\n                    <td>\n                        <ul>\n                            <li>TablePlus</li>\n                            <li>MySQL Workbench</li>\n                            <li>DBeaver</li>\n                            <li>DataGrip</li>\n                            <li>Another Redis Desktop Manager</li>\n                            <li>Getmedis</li>\n                        </ul>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Development Utils</td>\n                    <td>\n                        <ul>\n                            <li>Docker</li>\n                            <li>Lazydocker</li>\n                            <li>Postman</li>\n                            <li>HTTP Toolkit</li>\n                            <li>Lens Kubernetes</li>\n                            <li>VirtualBox</li>\n                            <li>Genymotion</li>\n                        </ul>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Productivity</td>\n                    <td>\n                        <ul>\n                            <li>Rectangle</li>\n                            <li>Alfred</li>\n                            <li>AltTab</li>\n                            <li>BetterTouchTool</li>\n                            <li>Spectacle</li>\n                            <li>TextSniper</li>\n                        </ul>\n                    </td>\n                </tr>\n                <tr>\n                    <td>File Management</td>\n                    <td>\n                        <ul>\n                            <li>CyberDuck</li>\n                            <li>Sourcetree</li>\n                            <li>Folx</li>\n                        </ul>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Writing/Documentation</td>\n                    <td>\n                        <ul>\n                            <li>Typora</li>\n                            <li>Boop</li>\n                            <li>Grammarly</li>\n                            <li>Anki</li>\n                        </ul>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Other Tools</td>\n                    <td>\n                        <ul>\n                            <li>Laravelshift</li>\n                            <li>Treblle</li>\n                            <li>Blocsapp</li>\n                            <li>Boom 3D</li>\n                            <li>1Password</li>\n                        </ul>\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Installation Commands</h2>\n        <pre><code lang=\"bash\"># Core development tools\nbrew install --cask visual-studio-code docker iterm2\n\n# Database tools\nbrew install --cask tableplus dbeaver\n\n# Productivity tools\nbrew install --cask rectangle alfred alt-tab\n\n# Additional tools\nbrew install --cask cyberduck sourcetree typora</code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#macOS</span>\n            <span class=\"badge\">#Development</span>\n            <span class=\"badge\">#Tools</span>\n            <span class=\"badge\">#Setup</span>\n        </div>\n    </div>\n</article>", "url": "/posts/the-ultimate-guide-to-setting-up-your-macbook-for-web-development.html", "tags": "macos, development, tools, setup"}, {"title": "Understanding MySQL Query Optimizer: COUNT(id) vs COUNT(*)", "description": "Deep dive into MySQL query optimization comparing COUNT(*) and COUNT(id) performance with practical examples", "content": "<article class=\"blog-post\">\n    <h1>Understanding MySQL Query Optimizer: COUNT(id) vs COUNT(*)</h1>\n    <div class=\"meta mb-4\">January 31, 2025</div>\n\n    <div class=\"content\">\n        <h2>Introduction</h2>\n        <p>When working with MySQL databases, COUNT operations are fundamental for data analysis. Let's explore the performance implications of COUNT(*) versus COUNT(id) using a practical example with a teachers database.</p>\n\n        <h2>MySQL Query Optimizer Overview</h2>\n        <p>The MySQL Query Optimizer is the engine's brain that determines the most efficient execution path for your queries. Understanding how it handles different COUNT operations is crucial for performance optimization.</p>\n\n        <h2>Practical Example: Teachers Table</h2>\n        <p>Let's create a sample teachers table with an indexed column:</p>\n        \n        <pre><code lang=\"sql\">CREATE TABLE teachers (\n    id INT NOT NULL AUTO_INCREMENT,\n    full_name VARCHAR(100) NOT NULL,\n    subject VARCHAR(50) NOT NULL,\n    hire_date DATE NOT NULL,\n    PRIMARY KEY (id),\n    INDEX idx_subject (subject)\n);</code></pre>\n\n        <h2>Comparing COUNT Operations</h2>\n        <p>Let's analyze these two common counting approaches:</p>\n\n        <pre><code lang=\"sql\">-- Approach 1: Using COUNT(id)\nEXPLAIN SELECT COUNT(id) FROM teachers;\n\n-- Approach 2: Using COUNT(*)\nEXPLAIN SELECT COUNT(*) FROM teachers;</code></pre>\n\n        <h2>Performance Analysis</h2>\n        <p>When we examine the EXPLAIN output, we discover:</p>\n        <ul>\n            <li>Both queries utilize the same index</li>\n            <li>The execution plan is identical</li>\n            <li>Performance metrics show negligible differences</li>\n        </ul>\n\n        <h2>Best Practices</h2>\n        <p>Based on the optimizer's behavior:</p>\n        <ul>\n            <li>Use COUNT(*) for counting all rows</li>\n            <li>Reserve COUNT(column) for counting non-NULL values</li>\n            <li>Trust the optimizer to choose the most efficient execution path</li>\n        </ul>\n\n        <h2>Conclusion</h2>\n        <p>The MySQL Query Optimizer efficiently handles both COUNT(*) and COUNT(id). While COUNT(*) is the preferred general-purpose solution, understanding when to use each variant helps in writing more efficient queries.</p>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge bg-light text-dark\">#mysql</span>\n            <span class=\"badge bg-light text-dark\">#performance</span>\n            <span class=\"badge bg-light text-dark\">#database</span>\n            <span class=\"badge bg-light text-dark\">#optimization</span>\n        </div>\n    </div>\n</article>", "url": "/posts/understanding-mysql-query-optimizer-count(id)-vs-count(*).html", "tags": "mysql, performance, database, optimization"}, {"title": "Example AWS Cloudwatch Agent Config", "description": "Sample configuration file for AWS CloudWatch Agent with logs and metrics collection", "content": "<article class=\"blog-post\">\n    <h1>Example AWS Cloudwatch Agent Config</h1>\n    <div class=\"meta mb-4\">January 30, 2024</div>\n\n    <div class=\"content\">\n        <p>Configuration file location:</p>\n        <pre><code lang=\"bash\">cat /opt/aws/amazon-cloudwatch-agent/bin/config.json</code></pre>\n\n        <h2>Configuration File</h2>\n        <pre><code lang=\"json\">{\n    \"agent\": {\n        \"metrics_collection_interval\": 600,\n        \"run_as_user\": \"root\"\n    },\n    \"logs\": {\n        \"logs_collected\": {\n            \"files\": {\n                \"collect_list\": [\n                    {\n                        \"file_path\": \"/var/log/nginx/access_json.log\",\n                        \"log_group_name\": \"nginx_access_json\",\n                        \"log_stream_name\": \"nginx_access_json\"\n                    },\n                    {\n                        \"file_path\": \"/var/www/html/app/storage/logs/laravel.log\",\n                        \"log_group_name\": \"log_app\",\n                        \"log_stream_name\": \"error_logs\"\n                    },\n                    {\n                        \"file_path\": \"/var/www/html/app/storage/logs/worker.log\",\n                        \"log_group_name\": \"log_app\",\n                        \"log_stream_name\": \"worker_logs\"\n                    }\n                ]\n            }\n        },\n        \"force_flush_interval\": 900,\n        \"log_stream_name\": \"my_log_stream_name\"\n    },\n    \"metrics\": {\n        \"aggregation_dimensions\": [\n            [\n                \"AutoScalingGroupName\"\n            ]\n        ],\n        \"append_dimensions\": {\n            \"AutoScalingGroupName\": \"${aws:AutoScalingGroupName}\",\n            \"ImageId\": \"${aws:ImageId}\",\n            \"InstanceId\": \"${aws:InstanceId}\",\n            \"InstanceType\": \"${aws:InstanceType}\"\n        },\n        \"metrics_collected\": {\n            \"mem\": {\n                \"measurement\": [\n                    \"mem_used_percent\"\n                ],\n                \"metrics_collection_interval\": 60\n            }\n        }\n    }\n}</code></pre>\n\n        <h2>Configuration Sections</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Section</th>\n                    <th>Purpose</th>\n                </tr>\n                <tr>\n                    <td>agent</td>\n                    <td>Basic agent settings and intervals</td>\n                </tr>\n                <tr>\n                    <td>logs</td>\n                    <td>Log collection configuration</td>\n                </tr>\n                <tr>\n                    <td>metrics</td>\n                    <td>Metrics collection and dimensions</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Monitored Logs</h2>\n        <ul>\n            <li>Nginx access logs</li>\n            <li>Laravel application logs</li>\n            <li>Worker process logs</li>\n        </ul>\n\n        <h2>Collected Metrics</h2>\n        <ul>\n            <li>Memory usage percentage</li>\n            <li>Auto Scaling group metrics</li>\n            <li>Instance-specific metrics</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#AWS</span>\n            <span class=\"badge\">#CloudWatch</span>\n            <span class=\"badge\">#Monitoring</span>\n            <span class=\"badge\">#DevOps</span>\n        </div>\n    </div>\n</article>", "url": "/posts/example-aws-cloudwatch-agent-config.html", "tags": "aws, cloudwatch, monitoring, devops"}, {"title": "Docker Handbook", "description": "Essential Docker guide and resources for containerizing applications", "content": "<article class=\"blog-post\">\n    <h1>Docker Handbook</h1>\n    <div class=\"meta mb-4\">November 21, 2021</div>\n\n    <div class=\"content\">\n        <p>Comprehensive guide for learning Docker and containerizing applications:</p>\n\n        <p>Reference:</p>\n        <ul>\n            <li><a href=\"https://www.freecodecamp.org/news/the-docker-handbook/#how-to-containerize-a-javascript-application\">The Docker Handbook - FreeCodeCamp</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#Containers</span>\n            <span class=\"badge\">#DevOps</span>\n            <span class=\"badge\">#JavaScript</span>\n        </div>\n    </div>\n</article>", "url": "/posts/docker-handbook.html", "tags": "docker, containers, devops, javascript"}, {"title": "Belajar Golang", "description": "Collection of learning resources for Go programming language", "content": "<article class=\"blog-post\">\n    <h1>Belajar Golang</h1>\n    <div class=\"meta mb-4\">December 4, 2021</div>\n\n    <div class=\"content\">\n        <h2>Sumber Belajar</h2>\n        <ul>\n            <li><a href=\"https://www.sololearn.com/learning/1164\">SoloLearn</a></li>\n            <li><a href=\"https://dasarpemrogramangolang.novalagung.com/A-hash-sha1.html\">Noval Agung Blog</a></li>\n            <li><a href=\"https://www.youtube.com/watch?v=GjI0GSvmcSU\">Agung Setiawan Channel</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Golang</span>\n            <span class=\"badge\">#Programming</span>\n            <span class=\"badge\">#Learning</span>\n            <span class=\"badge\">#Tutorial</span>\n        </div>\n    </div>\n</article>", "url": "/posts/belajar-golang.html", "tags": "golang, programming, learning, tutorial"}, {"title": "Bus Factor", "description": "Understanding the bus factor concept in software development teams", "content": "<article class=\"blog-post\">\n    <h1>Bus Factor</h1>\n    <div class=\"meta mb-4\">November 9, 2023</div>\n\n    <div class=\"content\">\n        <div class=\"image-container text-center mb-4\">\n            <img src=\"https://images.prismic.io/sketchplanations/67a14065-777b-458e-9161-6a5e706d8ab1_SP+796+-+Bus+factor.png?auto=compress,format\" \n                 alt=\"Bus Factor Illustration\" \n                 class=\"img-fluid rounded\"\n                 loading=\"lazy\">\n        </div>\n\n        <h2>What is Bus Factor?</h2>\n        <p>The bus factor represents the minimum number of team members who need to be hit by a bus (or win the lottery) before a project is in serious trouble due to lack of knowledge.</p>\n\n        <h2>Key Indicators of Low Bus Factor</h2>\n        <ul>\n            <li>Single person maintaining critical systems</li>\n            <li>Undocumented knowledge</li>\n            <li>Complex legacy systems</li>\n            <li>Specialized domain expertise</li>\n            <li>Lack of knowledge sharing</li>\n        </ul>\n\n        <h2>How to Improve Bus Factor</h2>\n        <ol>\n            <li>Document everything\n                <ul>\n                    <li>Code documentation</li>\n                    <li>System architecture</li>\n                    <li>Deployment procedures</li>\n                    <li>Business logic</li>\n                </ul>\n            </li>\n            <li>Implement pair programming</li>\n            <li>Regular knowledge sharing sessions</li>\n            <li>Cross-training team members</li>\n            <li>Code reviews</li>\n        </ol>\n\n        <h2>Benefits of High Bus Factor</h2>\n        <ul>\n            <li>Reduced project risk</li>\n            <li>Better team collaboration</li>\n            <li>Improved code quality</li>\n            <li>Faster onboarding</li>\n            <li>Sustainable development</li>\n        </ul>\n\n        <h2>Measuring Bus Factor</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Bus Factor</th>\n                    <th>Risk Level</th>\n                    <th>Action Needed</th>\n                </tr>\n                <tr>\n                    <td>1</td>\n                    <td>Critical</td>\n                    <td>Immediate action required</td>\n                </tr>\n                <tr>\n                    <td>2-3</td>\n                    <td>High</td>\n                    <td>Knowledge sharing needed</td>\n                </tr>\n                <tr>\n                    <td>4+</td>\n                    <td>Healthy</td>\n                    <td>Maintain practices</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Learn More</h2>\n        <p>For more detailed information, visit the <a href=\"https://en.wikipedia.org/wiki/Bus_factor\" target=\"_blank\">Wikipedia article on Bus Factor</a>.</p>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Development</span>\n            <span class=\"badge\">#Team</span>\n            <span class=\"badge\">#KnowledgeSharing</span>\n            <span class=\"badge\">#RiskManagement</span>\n        </div>\n    </div>\n</article>", "url": "/posts/bus-factor.html", "tags": "development, team, knowledge-sharing, risk-management"}, {"title": "Install AdonisJS NodeJS Framework", "description": "Step by step guide to install and run AdonisJS - A Laravel-style NodeJS framework", "content": "<article class=\"blog-post\">\n    <h1>Install AdonisJS NodeJS Framework</h1>\n    <div class=\"meta mb-4\">November 17, 2021</div>\n\n    <div class=\"content\">\n        <img src=\"https://miro.medium.com/max/1650/1*CvCRYWZTkhyqJIspP8ai_g.png\" alt=\"AdonisJS Logo\" class=\"img-fluid mb-4\">\n\n        <p>AdonisJS is a new NodeJS framework that feels very similar to Laravel. Here's how to get started:</p>\n\n        <h2>Install AdonisJS CLI</h2>\n        <p>First, install the AdonisJS CLI globally using npm:</p>\n        <pre><code>npm i -g @adonisjs/cli</code></pre>\n\n        <h2>Create New Application</h2>\n        <p>Create a new AdonisJS application:</p>\n        <pre><code>adonis new name_application</code></pre>\n\n        <img src=\"https://miro.medium.com/max/700/1*dYlnRxmVCbPrUvfBQeTiMg.png\" alt=\"Creating new AdonisJS application\" class=\"img-fluid mb-4\">\n\n        <h2>Run The Application</h2>\n        <p>Navigate to project directory and start the development server:</p>\n        <pre><code>cd name_application\nadonis serve --dev</code></pre>\n\n        <p>Access your application at:</p>\n        <pre><code>http://localhost:3333</code></pre>\n\n        <img src=\"https://miro.medium.com/max/700/1*WDuMEbWld12Mz154myrSwg.png\" alt=\"AdonisJS welcome page\" class=\"img-fluid mb-4\">\n\n        <h2>Project Structure</h2>\n        <p>The folder structure is very similar to Laravel:</p>\n        <img src=\"https://miro.medium.com/max/700/1*RIJEp6PO3tM9If4RDFHv9A.png\" alt=\"AdonisJS folder structure\" class=\"img-fluid mb-4\">\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#NodeJS</span>\n            <span class=\"badge\">#AdonisJS</span>\n            <span class=\"badge\">#Framework</span>\n            <span class=\"badge\">#JavaScript</span>\n        </div>\n    </div>\n</article>", "url": "/posts/install-adonisjs-nodejs-framework.html", "tags": "nodejs, adonisjs, framework, javascript"}, {"title": "What Is Composer", "description": "Understanding Composer as PHP's dependency management tool and its key features", "content": "<article class=\"blog-post\">\n    <h1>What Is Composer</h1>\n    <div class=\"meta mb-4\">September 21, 2023</div>\n\n    <div class=\"content\">\n        <p>Composer, the indispensable PHP dependency management tool, empowers developers in numerous ways:</p>\n\n        <h2>Key Features</h2>\n        <ul>\n            <li><strong>Streamlined Dependency Management:</strong> Composer simplifies the process of managing dependencies using packages. With its intuitive interface, you can effortlessly handle your project's external code libraries.</li>\n            \n            <li><strong>Autoloading, Tailored to You:</strong> Composer supports both PSR-standard and custom file-based autoloading. This flexibility ensures that your application loads classes efficiently, enhancing overall performance.</li>\n            \n            <li><strong>Optimization for Speed:</strong> Composer goes the extra mile by optimizing your code, resulting in faster execution. By utilizing compiler optimization techniques, it significantly boosts your application's performance.</li>\n            \n            <li><strong>Lifecycle Event Hooks:</strong> Composer is not just a tool; it's a partner throughout your application's lifecycle. It offers custom hooks into key events, like installation, updates, or initial creation.</li>\n            \n            <li><strong>Stability Assurance:</strong> Composer provides stability checks, ensuring that your project stays robust and dependable.</li>\n        </ul>\n\n        <h2>Composer Install vs. Composer Update</h2>\n        \n        <h3>Composer Update</h3>\n        <p>This command accomplishes two vital tasks:</p>\n        <ul>\n            <li>Updates all required packages to their latest compatible versions</li>\n            <li>Updates the composer.lock file with precise version information</li>\n        </ul>\n\n        <pre><code lang=\"bash\">composer update</code></pre>\n\n        <h3>Composer Install</h3>\n        <p>Focuses on installing dependencies specified in the composer.lock file:</p>\n        <ul>\n            <li>Uses exact versions from composer.lock</li>\n            <li>Creates composer.lock if it doesn't exist</li>\n            <li>Ensures consistency across environments</li>\n        </ul>\n\n        <pre><code lang=\"bash\">composer install</code></pre>\n\n        <div class=\"alert alert-warning\">\n            <strong>Important:</strong> Use composer update only in development environment, never in production.\n        </div>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Always commit composer.lock to version control</li>\n            <li>Use composer install in production environments</li>\n            <li>Regularly update dependencies in development</li>\n            <li>Review changes before updating in production</li>\n        </ul>\n\n        <h2>Common Commands</h2>\n        <pre><code lang=\"bash\"># Initialize a new project\ncomposer init\n\n# Install dependencies\ncomposer install\n\n# Update dependencies\ncomposer update\n\n# Add a new package\ncomposer require vendor/package\n\n# Remove a package\ncomposer remove vendor/package</code></pre>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#PHP</span>\n            <span class=\"badge\">#Composer</span>\n            <span class=\"badge\">#DependencyManagement</span>\n            <span class=\"badge\">#Development</span>\n        </div>\n    </div>\n</article>", "url": "/posts/what-is-composer.html", "tags": "php, composer, dependency-management, development"}, {"title": "Belajar Command Line Arguments Golang", "description": "Memahami penggunaan command line arguments di Golang menggunakan package os.Args", "content": "<article class=\"blog-post\">\n    <h1>Belajar Command Line Arguments Golang</h1>\n    <div class=\"meta mb-4\">April 11, 2022</div>\n\n    <div class=\"content\">\n        <p>Golang punya package called as Args. Args adalah string berbentuk array berisi command line arguments.</p>\n\n        <h2>Examples</h2>\n\n        <h3>The First Argument</h3>\n        <p>Program name selalu menjadi argument pertama:</p>\n\n        <pre><code lang=\"go\">package main\n\nimport (\n    \"fmt\"\n    \"os\"\n)\n\nfunc main() {\n    // The first argument is always program name\n    myProgramName := os.Args[0]\n    \n    // it will display the program name\n    fmt.Println(myProgramName)\n}</code></pre>\n\n        <p>Output:</p>\n        <img src=\"../../assets/images/Screen-Shot-2022-04-11-at-08.40.35.png\" alt=\"First Argument Output\" class=\"img-fluid mb-4\" />\n\n        <h3>Get All Arguments</h3>\n        <p>Mengambil semua arguments kecuali program name:</p>\n\n        <pre><code lang=\"go\">package main\n\nimport (\n    \"fmt\"\n    \"os\"\n)\n\nfunc main() {\n    allArgs := os.Args[1:]\n    fmt.Println(allArgs)\n}</code></pre>\n\n        <p>Output:</p>\n        <img src=\"../../assets/images/Screen-Shot-2022-04-11-at-08.41.24.png\" alt=\"All Arguments Output\" class=\"img-fluid mb-4\" />\n\n        <h2>Key Points</h2>\n        <ul>\n            <li>os.Args[0] berisi nama program</li>\n            <li>os.Args[1:] berisi semua arguments yang diberikan</li>\n            <li>Arguments dipisahkan dengan spasi</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Golang</span>\n            <span class=\"badge\">#CLI</span>\n            <span class=\"badge\">#Programming</span>\n            <span class=\"badge\">#Tutorial</span>\n        </div>\n    </div>\n</article>", "url": "/posts/belajar-command-line-arguments-golang.html", "tags": "golang, cli, programming, tutorial"}, {"title": "Linux Tips Using the dig Command for DNS Queries", "description": "A guide to using the dig command for DNS lookups and troubleshooting", "content": "<article class=\"blog-post\">\n    <h1>Linux Tips: Using the dig Command for DNS Queries</h1>\n    <div class=\"meta mb-4\">November 15, 2023</div>\n\n    <div class=\"content\">\n        <p>The dig command is a powerful DNS lookup utility that helps you query DNS servers and troubleshoot DNS-related issues.</p>\n\n        <h2>Basic Usage</h2>\n        <p>Here are some common ways to use the dig command:</p>\n\n        <pre><code lang=\"bash\">\n# Basic DNS lookup\ndig example.com\n\n# Query specific record type\ndig example.com MX\n\n# Query specific DNS server\ndig @8.8.8.8 example.com\n\n# Short answer only\ndig example.com +short\n        </code></pre>\n\n        <h2>Useful Options</h2>\n        <p>Some helpful dig command options:</p>\n        <ul>\n            <li>+short - Display brief output</li>\n            <li>+nocomments - Remove comment lines</li>\n            <li>+nocmd - Remove command line from output</li>\n            <li>+nostat - Remove statistics</li>\n        </ul>\n\n        <h2>Common Record Types</h2>\n        <ul>\n            <li>A - IPv4 addresses</li>\n            <li>AAAA - IPv6 addresses</li>\n            <li>MX - Mail servers</li>\n            <li>NS - Nameservers</li>\n            <li>TXT - Text records</li>\n            <li>CNAME - Canonical names</li>\n        </ul>\n\n        <h2>References</h2>\n        <ul>\n            <li><a href=\"https://linux.die.net/man/1/dig\" target=\"_blank\">dig man page</a></li>\n            <li><a href=\"https://www.cloudflare.com/learning/dns/what-is-dns/\" target=\"_blank\">DNS Explained by Cloudflare</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Linux</span>\n            <span class=\"badge\">#DNS</span>\n            <span class=\"badge\">#Networking</span>\n            <span class=\"badge\">#CommandLine</span>\n            <span class=\"badge\">#Tips</span>\n        </div>\n    </div>\n</article>", "url": "/posts/linux-tips-using-the-dig-command-for-dns-queries.html", "tags": "linux, dns, networking, command-line, tips"}, {"title": "Finding High Memory Keys in Redis Cache with Python", "description": "A simple Python script to identify and analyze the largest keys in your Redis cache", "content": "<article class=\"blog-post\">\n    <h1>Finding High Memory Keys in Redis Cache with Python</h1>\n    <div class=\"meta mb-4\">May 07, 2025</div>\n\n    <div class=\"content\">\n        <p class=\"alert alert-info\">Note: This post was generated with the assistance of AI.</p>\n\n        <p>Redis is a popular in-memory data structure store used as a database, cache, and message broker. When working with Redis in production, it's important to monitor memory usage, especially when dealing with large datasets. In this post, I'll share a simple Python script to identify the keys consuming the most memory in your Redis instance.</p>\n\n        <h2>The Problem</h2>\n        <p>As Redis databases grow, certain keys can consume disproportionate amounts of memory. Identifying these \"heavy\" keys is crucial for:</p>\n        <ul>\n            <li>Preventing out-of-memory errors</li>\n            <li>Optimizing cache efficiency</li>\n            <li>Planning capacity requirements</li>\n            <li>Implementing better data structures or expiration policies</li>\n        </ul>\n\n        <h2>Dependencies</h2>\n        <ol>\n            <li>Python 3.x</li>\n            <li>Redis-py: <code>pip install redis</code></li>\n        </ol>\n\n        <h2>Implementation</h2>\n        <pre><code lang=\"python\">\nfrom collections import Counter\nimport redis\n\n# Connect to Redis\nr = redis.StrictRedis(host='localhost', port=6379, decode_responses=True)\n\n# Initialize variables\ncursor = 0\nkey_sizes = Counter()\nLIMIT = 500\n\nwhile True:\n    cursor, keys = r.scan(cursor=cursor, count=1000)\n    for key in keys:\n        # Get memory usage for each key in bytes\n        size = r.memory_usage(key)\n        if size is not None:  # Only add keys with valid size\n            key_sizes[key] = size\n    \n    if cursor == 0:\n        break\n\n# Get top 500 keys by size\nlargest_keys = key_sizes.most_common(LIMIT)\n\n# Print results\nprint(f\"Top {LIMIT} keys by size:\")\nprint(\"Size (bytes) | Key\")\nprint(\"-\" * 50)\nfor key, size in largest_keys:\n    print(f\"{size:11,d} | {key}\")\n\nprint(f\"\\nTotal keys analyzed: {len(key_sizes)}\")\n        </code></pre>\n\n        <h2>How It Works</h2>\n        <p>The script performs the following operations:</p>\n        <ol>\n            <li>Connects to a local Redis instance</li>\n            <li>Uses the <code>scan</code> command to iterate through all keys (which is more production-friendly than <code>KEYS *</code>)</li>\n            <li>For each key, gets its memory usage using the <code>MEMORY USAGE</code> Redis command</li>\n            <li>Stores the results in a Counter collection</li>\n            <li>Displays the top 500 keys by memory consumption</li>\n        </ol>\n\n        <h2>Sample Output</h2>\n        <pre><code lang=\"plaintext\">\nTop 500 keys by size:\nSize (bytes) | Key\n--------------------------------------------------\n    1,048,576 | large_hash:user_data\n      524,288 | session:active_users\n      262,144 | cache:product_catalog\n      131,072 | analytics:daily_metrics\n       65,536 | queue:pending_jobs\n       32,768 | cache:homepage\n       16,384 | user:preferences:1001\n        8,192 | config:system_settings\n        4,096 | lock:inventory_update\n        2,048 | counter:daily_visitors\n\nTotal keys analyzed: 12,543\n        </code></pre>\n\n        <h2>Optimizations and Considerations</h2>\n        <ul>\n            <li><strong>Performance Impact:</strong> The <code>MEMORY USAGE</code> command can be resource-intensive on busy Redis servers. Consider running this script during off-peak hours.</li>\n            <li><strong>Sampling:</strong> For very large Redis instances, you might want to sample keys rather than analyzing all of them.</li>\n            <li><strong>Authentication:</strong> Add authentication parameters if your Redis instance requires it.</li>\n            <li><strong>Clustering:</strong> For Redis clusters, you'll need to modify the script to connect to each node.</li>\n        </ul>\n\n        <h2>Taking Action</h2>\n        <p>Once you've identified the largest keys, you can:</p>\n        <ul>\n            <li>Set appropriate TTL (Time To Live) values</li>\n            <li>Consider using more efficient data structures</li>\n            <li>Implement key eviction policies</li>\n            <li>Shard large hashes or lists</li>\n            <li>Move infrequently accessed data to disk-based storage</li>\n        </ul>\n\n        <h2>Conclusion</h2>\n        <p>Monitoring and managing memory usage in Redis is essential for maintaining a healthy and efficient cache system. This simple script provides a starting point for identifying memory-intensive keys that might need optimization.</p>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Python</span>\n            <span class=\"badge\">#Redis</span>\n            <span class=\"badge\">#Cache</span>\n            <span class=\"badge\">#Performance</span>\n            <span class=\"badge\">#Memory</span>\n            <span class=\"badge\">#AI-Generated</span>\n        </div>\n\n    </div>\n</article>", "url": "/posts/finding-high-memory-keys-in-redis-cache-with-python.html", "tags": "python, redis, cache, performance, memory, ai-generated"}, {"title": "Docker Compose for RabbitMQ: Basic Setup", "description": "Learn how to set up RabbitMQ locally using Docker Compose with persistent storage, management UI, and secure defaults", "content": "<article class=\"blog-post\">\n    <h1>Docker Compose for RabbitMQ: Basic Setup</h1>\n    <div class=\"meta mb-4\">16/02/2024</div>\n    \n    <div class=\"content\">\n        <p>Setting up RabbitMQ locally for development can be streamlined using Docker Compose. Here's a practical guide to get you started.</p>\n\n        <h2>Basic Setup</h2>\n        <p>Create a new file named <code>docker-compose.yml</code> with this configuration:</p>\n\n        <pre><code data-lang=\"sh\">version: '3.8'\nservices:\n  rabbitmq:\n    image: rabbitmq:3.12-management\n    ports:\n      - \"5672:5672\"   # AMQP protocol port\n      - \"15672:15672\" # Management UI port\n    environment:\n      - RABBITMQ_DEFAULT_USER=admin\n      - RABBITMQ_DEFAULT_PASS=admin123\n    volumes:\n      - rabbitmq_data:/var/lib/rabbitmq\n\nvolumes:\n  rabbitmq_data:</code></pre>\n\n        <h2>Running the Container</h2>\n        <p>Start RabbitMQ using:</p>\n        <pre><code>docker-compose up -d</code></pre>\n\n        <h2>Accessing Management UI</h2>\n        <ol>\n            <li>Open <code>http://localhost:15672</code></li>\n            <li>Login with:\n                <ul>\n                    <li>Username: admin</li>\n                    <li>Password: admin123</li>\n                </ul>\n            </li>\n        </ol>\n\n        <h2>Key Features</h2>\n        <ul>\n            <li>Persistent storage using named volume</li>\n            <li>Management UI enabled</li>\n            <li>Custom default credentials</li>\n            <li>Standard AMQP port mapping</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge bg-light text-dark\">#Docker</span>\n            <span class=\"badge bg-light text-dark\">#RabbitMQ</span>\n            <span class=\"badge bg-light text-dark\">#DevOps</span>\n        </div>\n    </div>\n</article>", "url": "/posts/docker-compose-for-rabbitmq-basic-setup.html", "tags": "docker, rabbitmq, devops, message-queue"}, {"title": "Free for dev Website", "description": "Informasi tentang website free-for.dev yang menyediakan daftar software gratis untuk developer", "content": "<article class=\"blog-post\">\n    <h1>Free for dev Website</h1>\n    <div class=\"meta mb-4\">September 19, 2023</div>\n\n    <div class=\"content\">\n        <p>Free for dev adalah website berisikan informasi list free software yang dapat digunakan oleh developer.</p>\n\n        <h2>Tentang Free for Dev</h2>\n        <p>Ini adalah tempat yang sempurna bagi para profesional IT dan pengembang untuk menemukan berbagai alat, layanan, dan sumber daya yang dapat membantu mereka dalam menjalankan proyek-proyek pengembangan perangkat lunak mereka tanpa perlu mengeluarkan biaya tambahan.</p>\n\n        <h2>Kategori Resources</h2>\n        <ul>\n            <li>Cloud Infrastructure</li>\n            <li>Database Services</li>\n            <li>Monitoring Tools</li>\n            <li>Development Tools</li>\n            <li>Testing Services</li>\n            <li>Security Tools</li>\n            <li>CI/CD Tools</li>\n            <li>Hosting Services</li>\n        </ul>\n\n        <h2>Cara Menggunakan</h2>\n        <ol>\n            <li>Kunjungi <a href=\"https://free-for.dev/\" target=\"_blank\">https://free-for.dev/</a></li>\n            <li>Browse kategori yang tersedia</li>\n            <li>Temukan tools yang sesuai kebutuhan</li>\n            <li>Verifikasi terms & conditions</li>\n        </ol>\n\n        <h2>Kontribusi</h2>\n        <p>Anda dapat berpartisipasi dalam pengembangan proyek ini di GitHub Free for Dev untuk memberikan kontribusi kepada komunitas pengembang.</p>\n\n        <h2>Manfaat</h2>\n        <ul>\n            <li>Akses ke berbagai tools development gratis</li>\n            <li>Menghemat biaya development</li>\n            <li>Resource terpercaya untuk developer</li>\n            <li>Regularly updated content</li>\n            <li>Community-driven platform</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Tools</span>\n            <span class=\"badge\">#Resources</span>\n            <span class=\"badge\">#Development</span>\n            <span class=\"badge\">#Free</span>\n        </div>\n    </div>\n</article>", "url": "/posts/free-for-dev-website.html", "tags": "tools, resources, development, free"}, {"title": "Exploring Standard Domains for Testing Throwaway Email Addresses", "description": "Guide to using standard domains and disposable email addresses for testing purposes", "content": "<article class=\"blog-post\">\n    <h1>Exploring Standard Domains for Testing \"Throwaway\" Email Addresses</h1>\n    <div class=\"meta mb-4\">December 15, 2023</div>\n\n    <div class=\"content\">\n        <p>In the vast landscape of the internet, testing and anonymity are crucial aspects, and throwaway email addresses serve as valuable tools for these purposes. Whether you're signing up for a trial service, verifying an account, or simply exploring the web discreetly, throwaway email addresses come to the rescue.</p>\n\n        <h2>1. The Standard Domain for Testing: RFC 2606</h2>\n        <p>When it comes to testing, the internet community adheres to certain standards to avoid conflicts with real domains. The Internet Engineering Task Force (IETF) introduced RFC 2606, outlining reserved top-level domains (TLDs) for documentation and testing purposes. Two notable examples from RFC 2606 are:</p>\n        <ul>\n            <li>example.com</li>\n            <li>example.net</li>\n        </ul>\n\n        <h2>2. Guerrilla Mail: Your Go-To for Disposable Email</h2>\n        <p>One popular platform for throwaway email is <a href=\"https://www.guerrillamail.com/\" target=\"_blank\">Guerrilla Mail</a>. Guerrilla Mail provides temporary, anonymous email addresses that expire after a certain period. It's a handy solution for avoiding spam and maintaining privacy when engaging in online activities that require an email address.</p>\n\n        <h2>3. Example \"Throwaway\" Email Addresses</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>example.com</th>\n                    <th>example.net</th>\n                </tr>\n                <tr>\n                    <td>user1@example.com</td>\n                    <td>tempuser@example.net</td>\n                </tr>\n                <tr>\n                    <td>test123@example.com</td>\n                    <td>anonymous@example.net</td>\n                </tr>\n                <tr>\n                    <td>trialuser@example.com</td>\n                    <td>demoemail@example.net</td>\n                </tr>\n                <tr>\n                    <td>privacyuser@example.com</td>\n                    <td>sandboxuser@example.net</td>\n                </tr>\n                <tr>\n                    <td>temporary@example.com</td>\n                    <td>exploreweb@example.net</td>\n                </tr>\n                <tr>\n                    <td>noreplyuser@example.com</td>\n                    <td>verifyaccount@example.net</td>\n                </tr>\n                <tr>\n                    <td>disposable1@example.com</td>\n                    <td>anonymous2@example.net</td>\n                </tr>\n                <tr>\n                    <td>testinguser@example.com</td>\n                    <td>quicksignup@example.net</td>\n                </tr>\n                <tr>\n                    <td>throwawayemail@example.com</td>\n                    <td>spamfreeuser@example.net</td>\n                </tr>\n                <tr>\n                    <td>secureaccount@example.com</td>\n                    <td>randomuser@example.net</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Use RFC 2606 domains for testing</li>\n            <li>Implement disposable email services for temporary needs</li>\n            <li>Keep testing emails separate from production</li>\n            <li>Document test email patterns</li>\n            <li>Rotate disposable addresses regularly</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Email</span>\n            <span class=\"badge\">#Testing</span>\n            <span class=\"badge\">#Privacy</span>\n            <span class=\"badge\">#Security</span>\n        </div>\n    </div>\n</article>", "url": "/posts/exploring-standard-domains-for-testing-throwaway-email-addresses.html", "tags": "email, testing, privacy, security"}, {"title": "Exploring Public Code Repositories with Sourcegraph", "description": "Guide to using Sourcegraph for searching and exploring public code repositories", "content": "<article class=\"blog-post\">\n    <h1>Exploring Public Code Repositories with Sourcegraph</h1>\n    <div class=\"meta mb-4\">December 8, 2023</div>\n\n    <div class=\"content\">\n        <p>Sourcegraph, a powerful code search and intelligence platform, provides developers with a comprehensive tool for exploring and understanding code across various repositories. With its user-friendly interface and advanced search capabilities, Sourcegraph empowers developers to efficiently navigate through extensive codebases, discover patterns, and gain insights into public code repositories.</p>\n\n        <h2>Key Features</h2>\n        <ul>\n            <li>Advanced code search</li>\n            <li>Cross-repository code navigation</li>\n            <li>Code intelligence</li>\n            <li>Symbol search</li>\n            <li>Regular expression support</li>\n        </ul>\n\n        <h2>Search Capabilities</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Feature</th>\n                    <th>Description</th>\n                </tr>\n                <tr>\n                    <td>Literal Search</td>\n                    <td>Find exact code matches</td>\n                </tr>\n                <tr>\n                    <td>Regex Search</td>\n                    <td>Pattern-based code search</td>\n                </tr>\n                <tr>\n                    <td>Language Filters</td>\n                    <td>Search specific programming languages</td>\n                </tr>\n                <tr>\n                    <td>Repository Filters</td>\n                    <td>Focus on specific repositories</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Search Examples</h2>\n        <pre><code># Find function definitions\ntype:symbol function auth\n\n# Search specific file types\nfile:\\.js$ login\n\n# Search in specific repositories\nrepo:^github\\.com/org/repo$ config\n\n# Find usage examples\npattern:useState file:\\.tsx$</code></pre>\n\n        <h2>Benefits</h2>\n        <ul>\n            <li>Quick code reference lookup</li>\n            <li>Learning from real-world examples</li>\n            <li>Understanding implementation patterns</li>\n            <li>Discovering best practices</li>\n            <li>Code reuse opportunities</li>\n        </ul>\n\n        <h2>Getting Started</h2>\n        <ol>\n            <li>Visit <a href=\"https://sourcegraph.com/search\" target=\"_blank\">Sourcegraph Search</a></li>\n            <li>Enter your search query</li>\n            <li>Apply relevant filters</li>\n            <li>Explore results</li>\n            <li>Use code navigation features</li>\n        </ol>\n\n        <h2>Pro Tips</h2>\n        <ul>\n            <li>Use quotes for exact matches</li>\n            <li>Combine multiple search filters</li>\n            <li>Save frequent searches</li>\n            <li>Explore similar repositories</li>\n            <li>Check code history</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Sourcegraph</span>\n            <span class=\"badge\">#CodeSearch</span>\n            <span class=\"badge\">#Development</span>\n            <span class=\"badge\">#Tools</span>\n        </div>\n    </div>\n</article>", "url": "/posts/exploring-public-code-repositories-with-sourcegraph.html", "tags": "sourcegraph, code-search, development, tools"}, {"title": "Flaky Tests", "description": "Understanding and dealing with flaky tests in software testing", "content": "<article class=\"blog-post\">\n    <h1>Flaky Tests</h1>\n    <div class=\"meta mb-4\">November 9, 2023</div>\n\n    <div class=\"content\">\n        <h2>What are Flaky Tests?</h2>\n        <p>Flaky tests are defined as tests that return both passes and failures despite no changes to the code or the test itself.</p>\n\n        <h2>Common Causes</h2>\n        <ul>\n            <li>Asynchronous operations</li>\n            <li>Time dependencies</li>\n            <li>Shared state between tests</li>\n            <li>Race conditions</li>\n            <li>Network reliability</li>\n            <li>Resource constraints</li>\n        </ul>\n\n        <h2>Impact on Development</h2>\n        <ul>\n            <li>Reduced confidence in test suite</li>\n            <li>Increased build times</li>\n            <li>Developer frustration</li>\n            <li>Delayed releases</li>\n            <li>Technical debt</li>\n        </ul>\n\n        <h2>Solutions</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <tr>\n                    <th>Problem</th>\n                    <th>Solution</th>\n                </tr>\n                <tr>\n                    <td>Async Issues</td>\n                    <td>Implement proper wait mechanisms</td>\n                </tr>\n                <tr>\n                    <td>Timing Problems</td>\n                    <td>Use deterministic time controls</td>\n                </tr>\n                <tr>\n                    <td>Shared State</td>\n                    <td>Isolate test environments</td>\n                </tr>\n                <tr>\n                    <td>Race Conditions</td>\n                    <td>Implement proper synchronization</td>\n                </tr>\n            </table>\n        </div>\n\n        <h2>Best Practices</h2>\n        <ol>\n            <li>Isolate tests properly</li>\n            <li>Use deterministic data</li>\n            <li>Implement retry mechanisms</li>\n            <li>Monitor test execution times</li>\n            <li>Document known flaky tests</li>\n            <li>Set up proper test environments</li>\n        </ol>\n\n        <h2>Detection Strategies</h2>\n        <ul>\n            <li>Run tests multiple times</li>\n            <li>Use test analytics tools</li>\n            <li>Monitor test execution history</li>\n            <li>Implement logging for failures</li>\n        </ul>\n\n        <h2>Prevention Tips</h2>\n        <ul>\n            <li>Write deterministic tests</li>\n            <li>Avoid external dependencies when possible</li>\n            <li>Use proper mocking techniques</li>\n            <li>Implement proper cleanup routines</li>\n            <li>Regular test maintenance</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Testing</span>\n            <span class=\"badge\">#QualityAssurance</span>\n            <span class=\"badge\">#Development</span>\n            <span class=\"badge\">#BestPractices</span>\n        </div>\n    </div>\n</article>", "url": "/posts/flaky-tests.html", "tags": "testing, quality-assurance, development, best-practices"}, {"title": "Users Linux", "description": "Managing Linux users and groups - commands and best practices", "content": "<article class=\"blog-post\">\n    <h1>Users Linux</h1>\n    <div class=\"meta mb-4\">December 11, 2021</div>\n\n    <div class=\"content\">\n        <h2>List Users in Linux</h2>\n        <p>To list all users on a Linux system, use the following command:</p>\n        <pre><code lang=\"bash\">compgen -u</code></pre>\n\n        <h2>Managing User Groups</h2>\n        \n        <h3>Add User to Group</h3>\n        <p>To add an existing user to a secondary group, use the usermod command with -a -G options:</p>\n        <pre><code lang=\"bash\">sudo usermod -a -G groupname username</code></pre>\n\n        <h3>Example: Adding User to Sudo Group</h3>\n        <pre><code lang=\"bash\">sudo usermod -a -G sudo linuxize</code></pre>\n\n        <h2>Important Notes</h2>\n        <ul>\n            <li>Always use the -a flag with -G to append groups</li>\n            <li>Without -a flag, user will be removed from unlisted groups</li>\n            <li>Command runs silently on success</li>\n            <li>Warnings appear only for non-existent users/groups</li>\n        </ul>\n\n        <h2>Additional User Management Commands</h2>\n        <ul>\n            <li>useradd - Create new user</li>\n            <li>userdel - Delete user</li>\n            <li>groups - List user's groups</li>\n            <li>id - Show user and group IDs</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Linux</span>\n            <span class=\"badge\">#Users</span>\n            <span class=\"badge\">#System</span>\n            <span class=\"badge\">#Administration</span>\n        </div>\n    </div>\n</article>", "url": "/posts/users-linux.html", "tags": "linux, users, system, administration"}, {"title": "How to Install Grafana", "description": "Guide for installing Grafana using APT and Docker methods", "content": "<article class=\"blog-post\">\n    <h1>How to Install Grafana</h1>\n    <div class=\"meta mb-4\">October 9, 2023</div>\n\n    <div class=\"content\">\n        <h2>Method 1: Using APT</h2>\n        <p>Install Grafana on Ubuntu/Debian using APT package manager:</p>\n\n        <pre><code lang=\"bash\">sudo apt-get install -y apt-transport-https\nsudo apt-get install -y software-properties-common wget\nsudo wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key</code></pre>\n\n        <p>Add Grafana repository and install:</p>\n        <pre><code lang=\"bash\">echo \"deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main\" | sudo tee -a /etc/apt/sources.list.d/grafana.list\nsudo apt-get update\nsudo apt-get install grafana</code></pre>\n\n        <p>Start Grafana service:</p>\n        <pre><code lang=\"bash\">sudo systemctl start grafana-server</code></pre>\n\n        <h2>Method 2: Using Docker</h2>\n        <p>Create a docker-compose.yml file:</p>\n\n        <pre><code lang=\"yaml\">version: '3'\n\nservices:\n  grafana:\n    image: grafana/grafana:latest\n    container_name: grafana\n    ports:\n      - \"3000:3000\"\n    volumes:\n      - grafana_data:/var/lib/grafana\n    environment:\n      - GF_SECURITY_ADMIN_USER=admin\n      - GF_SECURITY_ADMIN_PASSWORD=adminpassword\n    networks:\n      - monitoring\n\nvolumes:\n  grafana_data:\n\nnetworks:\n  monitoring:</code></pre>\n\n        <h2>Configuration Details</h2>\n        <ul>\n            <li><strong>Port:</strong> 3000 (default web interface)</li>\n            <li><strong>Default Credentials:</strong> admin/adminpassword</li>\n            <li><strong>Data Persistence:</strong> Using named volume</li>\n            <li><strong>Network:</strong> Custom bridge network for monitoring</li>\n        </ul>\n\n        <h2>Post-Installation Steps</h2>\n        <ol>\n            <li>Access Grafana at http://localhost:3000</li>\n            <li>Log in with default credentials</li>\n            <li>Change default password</li>\n            <li>Configure data sources</li>\n            <li>Import or create dashboards</li>\n        </ol>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Grafana</span>\n            <span class=\"badge\">#Monitoring</span>\n            <span class=\"badge\">#Docker</span>\n            <span class=\"badge\">#Ubuntu</span>\n            <span class=\"badge\">#Installation</span>\n        </div>\n    </div>\n</article>", "url": "/posts/how-to-install-grafana.html", "tags": "grafana, monitoring, docker, ubuntu, installation"}, {"title": "UID User Identifier di Linux", "description": "Penjelasan tentang User Identifier (UID) dan penggunaannya di sistem Linux", "content": "<article class=\"blog-post\">\n    <h1>UID (User Identifier) di Linux</h1>\n    <div class=\"meta mb-4\">September 27, 2023</div>\n\n    <div class=\"content\">\n        <h2>Pengertian UID</h2>\n        <p>UID adalah singkatan dari User Identifier. Ini adalah angka unik yang digunakan oleh sistem Linux untuk mengidentifikasi setiap pengguna dalam sistem. Saat seorang pengguna dibuat, sistem memberikan UID unik kepadanya. UID ini digunakan oleh sistem untuk mengenali pengguna secara internal, dan ini adalah bagian penting dari manajemen hak akses di Linux.</p>\n\n        <h2>Melihat UID Pengguna</h2>\n        <p>Untuk melihat UID pengguna di Linux, Anda dapat menggunakan perintah id:</p>\n        <pre><code lang=\"bash\">id</code></pre>\n\n        <h2>Membuat Pengguna dengan UID Tertentu</h2>\n        <p>Untuk membuat pengguna baru dengan UID tertentu, Anda dapat menggunakan perintah useradd:</p>\n        <pre><code lang=\"bash\">sudo useradd -u 1001 nama_pengguna_baru</code></pre>\n\n        <h2>Range UID di Linux</h2>\n        <ul>\n            <li><strong>0:</strong> Root user</li>\n            <li><strong>1-99:</strong> Predefined users</li>\n            <li><strong>100-999:</strong> System users</li>\n            <li><strong>1000+:</strong> Regular users</li>\n        </ul>\n\n        <h2>Perintah Berguna Terkait UID</h2>\n        <pre><code lang=\"bash\"># Melihat UID pengguna tertentu\nid username\n\n# Melihat daftar semua user dengan UID\ncat /etc/passwd\n\n# Mengubah UID pengguna\nusermod -u new_uid username\n\n# Melihat file yang dimiliki user\nfind / -user username</code></pre>\n\n        <h2>Best Practices</h2>\n        <ul>\n            <li>Gunakan UID di atas 1000 untuk pengguna regular</li>\n            <li>Dokumentasikan alokasi UID custom</li>\n            <li>Backup /etc/passwd sebelum modifikasi</li>\n            <li>Verifikasi kepemilikan file setelah mengubah UID</li>\n        </ul>\n\n        <h2>Keamanan</h2>\n        <ul>\n            <li>UID 0 memiliki akses penuh ke sistem</li>\n            <li>Batasi akses ke akun sistem</li>\n            <li>Monitor perubahan UID</li>\n            <li>Audit penggunaan sudo regularly</li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Linux</span>\n            <span class=\"badge\">#SystemAdmin</span>\n            <span class=\"badge\">#Security</span>\n            <span class=\"badge\">#Users</span>\n        </div>\n    </div>\n</article>", "url": "/posts/uid-user-identifier-di-linux.html", "tags": "linux, system-admin, security, users"}, {"title": "Mengenal Chunk dan Cursor pada Laravel", "description": "Understanding Laravel's chunk and cursor methods for handling large datasets efficiently", "content": "<article class=\"blog-post\">\n    <h1>Mengenal Chunk dan Cursor pada Laravel – Penting untuk performance</h1>\n    <div class=\"meta mb-4\">November 24, 2021</div>\n\n    <div class=\"content\">\n        <p>Function chunk dan cursor digunakan untuk mengambil data dalam jumlah besar dengan memperhatikan penggunaan memory.</p>\n\n        <h2>Performance Comparison</h2>\n\n        <h3>10,000 records:</h3>\n        <pre><code>+-------------+-----------+------------+\n|             | Time(sec) | Memory(MB) |\n+-------------+-----------+------------+\n| get()       |      0.17 |         22 |\n| chunk(100)  |      0.38 |         10 |\n| chunk(1000) |      0.17 |         12 |\n| cursor()    |      0.16 |         14 |\n+-------------+-----------+------------+</code></pre>\n\n        <h3>100,000 records:</h3>\n        <pre><code>+--------------+------------+------------+\n|              | Time(sec)  | Memory(MB) |\n+--------------+------------+------------+\n| get()        |        0.8 |     132    |\n| chunk(100)   |       19.9 |      10    |\n| chunk(1000)  |        2.3 |      12    |\n| chunk(10000) |        1.1 |      34    |\n| cursor()     |        0.5 |      45    |\n+--------------+------------+------------+</code></pre>\n\n        <h2>Key Differences</h2>\n        <ul>\n            <li><strong>cursor():</strong> Optimized for speed</li>\n            <li><strong>chunk():</strong> Optimized for consistent memory usage</li>\n        </ul>\n\n        <h2>When to Use What</h2>\n        <p>Use <code>cursor()</code> when speed is the priority and <code>chunk()</code> when you need to maintain consistent memory usage below a certain threshold.</p>\n\n        <h2>Test Environment</h2>\n        <ul>\n            <li>Homestead 0.5.0</li>\n            <li>PHP 7.0.12</li>\n            <li>MySQL 5.7.16</li>\n            <li>Laravel 5.3.22</li>\n        </ul>\n\n        <p>References:</p>\n        <ul>\n            <li><a href=\"https://stackoverflow.com/questions/45464676/what-is-the-difference-between-laravel-cursor-and-laravel-chunk-method\">Stack Overflow - Difference between Laravel cursor and chunk method</a></li>\n            <li><a href=\"https://qiita-com.translate.goog/ryo511/items/ebcd1c1b2ad5addc5c9d?_x_tr_sl=auto&_x_tr_tl=en&_x_tr_hl=en&_x_tr_pto=nui\">Performance comparison of Laravel chunk and cursor</a></li>\n        </ul>\n\n        <div class=\"tags mt-4\">\n            <span class=\"badge\">#Laravel</span>\n            <span class=\"badge\">#Performance</span>\n            <span class=\"badge\">#Database</span>\n            <span class=\"badge\">#Optimization</span>\n        </div>\n    </div>\n</article>", "url": "/posts/mengenal-chunk-dan-cursor-pada-laravel.html", "tags": "laravel, performance, database, optimization"}]